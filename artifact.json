{
  "metadata": {
    "name": "@itentialopensource/push-bundle-to-github",
    "version": "0.0.1",
    "description": "Push Bundle To GitHub",
    "license": "Apache-2.0",
    "repository": {
      "type": "local",
      "hostname": "localhost",
      "path": "/"
    },
    "keywords": [
      "Itential",
      "IAP",
      "artifacts"
    ],
    "author": "Itential Automation Platform",
    "IAPDependencies": {
      "@itential/app-workflow_engine": "",
      "@itential/app-json_forms": "",
      "@itentialopensource/adapter-github": "",
      "@itential/app-operations_manager": ""
    }
  },
  "manifest": {
    "bundleName": "@itentialopensource/push-bundle-to-github",
    "fingerprint": "63d7f8f28ea90401767dc0a8",
    "createdEpoch": "1675098354026",
    "artifacts": [
      {
        "id": "Push Bundle to GitHub",
        "name": "Push Bundle to GitHub",
        "type": "automation",
        "location": "/bundles/automations/Push Bundle to GitHub.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Push Bundles to GitHub",
        "name": "Push Bundles to GitHub",
        "type": "workflow",
        "location": "/bundles/workflows/Push Bundles to GitHub.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Push Bundles to GitHub Re-Discover",
        "name": "Push Bundles to GitHub Re-Discover",
        "type": "workflow",
        "location": "/bundles/workflows/Push Bundles to GitHub Re-Discover.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Push Bundles to GitHub Create Branch",
        "name": "Push Bundles to GitHub Create Branch",
        "type": "workflow",
        "location": "/bundles/workflows/Push Bundles to GitHub Create Branch.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Push Bundles to GitHub Commit Data",
        "name": "Push Bundles to GitHub Commit Data",
        "type": "workflow",
        "location": "/bundles/workflows/Push Bundles to GitHub Commit Data.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Push Bundles to GitHub New Repo",
        "name": "Push Bundles to GitHub New Repo",
        "type": "workflow",
        "location": "/bundles/workflows/Push Bundles to GitHub New Repo.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Push Bundles to GitHub Check OrgRepo",
        "name": "Push Bundles to GitHub Check OrgRepo",
        "type": "workflow",
        "location": "/bundles/workflows/Push Bundles to GitHub Check OrgRepo.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Push Bundle to GitHub Purge Branch",
        "name": "Push Bundle to GitHub Purge Branch",
        "type": "workflow",
        "location": "/bundles/workflows/Push Bundle to GitHub Purge Branch.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Push Bundles to GitHub",
        "name": "Push Bundles to GitHub",
        "type": "json-forms",
        "location": "/bundles/json_forms/Push Bundles to GitHub.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "Re-Discovery Components Form",
        "name": "Re-Discovery Components Form",
        "type": "json-forms",
        "location": "/bundles/json_forms/Re-Discovery Components Form.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "605a4deae4eaf000ec76deb0",
        "name": "CompliancefilterArrayOfObjectsGitHub",
        "type": "transformation",
        "location": "/bundles/transformations/CompliancefilterArrayOfObjectsGitHub.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "60492fa1bf365c00ecacb399",
        "name": "getMetadataAndComponentsGitHub",
        "type": "transformation",
        "location": "/bundles/transformations/getMetadataAndComponentsGitHub.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "620ea276e3638a010009b10e",
        "name": "componentsObject",
        "type": "transformation",
        "location": "/bundles/transformations/componentsObject.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "605d2b11d1976e009291a74d",
        "name": "updatePackageGitHubJSON",
        "type": "transformation",
        "location": "/bundles/transformations/updatePackageGitHubJSON.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "606b3ceec2cf450099ae523f",
        "name": "convertFormData",
        "type": "transformation",
        "location": "/bundles/transformations/convertFormData.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "605b86f821c795008dc26118",
        "name": "mergeFormWithDiscovery",
        "type": "transformation",
        "location": "/bundles/transformations/mergeFormWithDiscovery.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "6210015da161ae00ef6164b4",
        "name": "convertArtifactInfoToForm",
        "type": "transformation",
        "location": "/bundles/transformations/convertArtifactInfoToForm.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "605b86d521c795008dc26117",
        "name": "convertFormOutputToDiscoveryFormatGitHub",
        "type": "transformation",
        "location": "/bundles/transformations/convertFormOutputToDiscoveryFormatGitHub.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "605b870f21c795008dc26119",
        "name": "createArtifactForPublish",
        "type": "transformation",
        "location": "/bundles/transformations/createArtifactForPublish.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "605a0b9299ae1b00eb7c74e9",
        "name": "convertObjecttoString",
        "type": "transformation",
        "location": "/bundles/transformations/convertObjecttoString.json",
        "properties": {
          "entryPoint": false
        }
      },
      {
        "id": "621002baa161ae00ef6164b5",
        "name": "translateSchemaPushBundles",
        "type": "transformation",
        "location": "/bundles/transformations/translateSchemaPushBundles.json",
        "properties": {
          "entryPoint": false
        }
      }
    ]
  },
  "bundles": [
    {
      "type": "automation",
      "data": {
        "_id": "6258678dfd83e12010c14e81",
        "name": "Push Bundle to GitHub",
        "description": "",
        "componentName": "Push Bundles to GitHub",
        "componentType": "workflows",
        "gbac": {
          "write": [],
          "read": []
        },
        "created": "2023-01-26T21:27:00.482Z",
        "createdBy": "admin@pronghorn",
        "lastUpdated": "2023-01-26T21:27:00.482Z",
        "lastUpdatedBy": "admin@pronghorn",
        "triggers": [
          {
            "_id": "63d2f0248ec082020addd45c",
            "created": "2023-01-26T21:27:00.766Z",
            "createdBy": "admin@pronghorn",
            "lastUpdated": "2023-01-26T21:27:00.766Z",
            "lastUpdatedBy": "admin@pronghorn",
            "name": "Manual Trigger (migrated from Push Bundle to GitHub)",
            "type": "manual",
            "enabled": true,
            "actionType": "automations",
            "actionId": "6258678dfd83e12010c14e81",
            "formId": "Push Bundles to GitHub",
            "formData": {
              "checkInArtifact": {
                "makeRepoPrivate": false,
                "reDiscoverArtifact": true,
                "forExistingGitHubProjects": {
                  "pullRequestType": "patch",
                  "commitMessage": "new jst added",
                  "targetBranch": "main"
                },
                "gitHubAdapterName": "gitHub",
                "gitHubRepositoryName": "TestTwo",
                "gitHubOrganizationName": "NickAOrg",
                "artifact": "@itentialopensource/push-bundle-to-github"
              },
              "Check In Artifact": {
                "Re-Discover Artifact": false,
                "For Existing GitHub Projects": {}
              }
            },
            "formSchemaHash": "1835ac1e96d2e22432a8c71bc2064312fbfa909860466ac87418790a1807c541",
            "migrationVersion": 1
          }
        ]
      }
    },
    {
      "type": "workflow",
      "data": {
        "type": "automation",
        "tasks": {
          "400": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run Child Job",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Push Bundles to GitHub Re-Discover",
                "variables": {
                  "internalURL": {
                    "editable": true,
                    "task": "e138",
                    "value": "combinedStrings"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 0.7510237510237511,
            "y": 0.4989406779661017
          },
          "749": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "packageJson",
                "value": {
                  "name": "",
                  "author": "Itential Automation Platform",
                  "version": "0.0.0",
                  "description": "Checked in new artifact",
                  "scripts": {
                    "test": "echo \"Error: no test specified\" && exit 1",
                    "deploy": "echo not needed npm publish --access=public --registry=http://registry.npmjs.org",
                    "validateSchema": "node test/manifestTester.js manifest.json manifest-schema.json",
                    "validateSchemaLinks": "node test/manifestLinkTester.js manifest.json",
                    "generateImageLinks": "node utils/generateImageLinks.js"
                  },
                  "repository": {
                    "type": "local",
                    "hostname": "localhost",
                    "path": "/"
                  },
                  "keywords": [
                    "Itential",
                    "IAP",
                    "artifacts"
                  ],
                  "license": "Apache-2.0",
                  "devDependencies": {
                    "r2": "^2.0.1",
                    "ajv": "6.10.0",
                    "better-ajv-errors": "^0.6.1",
                    "fs-extra": "^7.0.1"
                  }
                }
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 1.2817362817362818,
            "y": 0.5
          },
          "964": {
            "name": "gatherInternalGET",
            "canvasName": "gatherInternalGET",
            "summary": "Gather List of Installed Artifacts",
            "description": "Gather GET call",
            "location": "Application",
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "manual",
            "variables": {
              "incoming": {
                "internalURL": "/prebuilts?skip=0&limit=2000"
              },
              "outgoing": {
                "responseBody": null
              },
              "error": "",
              "decorators": []
            },
            "view": "/app_artifacts/views/tasks/gatherInternalGET",
            "deprecated": false,
            "groups": [],
            "x": 0.21324161650902837,
            "y": 0.7863354037267081,
            "scheduled": false
          },
          "1110": {
            "name": "gatherInternalGET",
            "canvasName": "gatherInternalGET",
            "summary": "Gather Selected Artifact Info",
            "description": "Gather GET call",
            "location": "Application",
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "manual",
            "variables": {
              "incoming": {
                "internalURL": "$var.e138.combinedStrings"
              },
              "outgoing": {
                "responseBody": null
              },
              "error": ""
            },
            "view": "/app_artifacts/views/tasks/gatherInternalGET",
            "deprecated": false,
            "groups": [],
            "x": 0.9844389844389845,
            "y": 0.503177966101695,
            "scheduled": false
          },
          "2279": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object actionyml key",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": {
                  "action": "create",
                  "file_path": ".github/workflows/action.yml",
                  "content": ""
                },
                "path": [
                  "content"
                ],
                "value": "$var.e6c0.output"
              },
              "outgoing": {
                "object": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.7278688524590164,
            "y": 1.007415254237288,
            "scheduled": false
          },
          "3353": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create new Branch",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Push Bundles to GitHub Create Branch",
                "variables": {
                  "owner": {
                    "variable": "",
                    "task": "8b12",
                    "value": "OrganizationName"
                  },
                  "repo": {
                    "variable": "",
                    "task": "8b12",
                    "value": "ProjectName"
                  },
                  "Targetbranch": {
                    "variable": "",
                    "task": "8b12",
                    "value": "TargetBranch"
                  },
                  "adapter_id": {
                    "variable": "",
                    "task": "8b12",
                    "value": "Adapter"
                  },
                  "MRType": {
                    "variable": "",
                    "task": "8b12",
                    "value": "MRType"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 2.3237704918032787,
            "y": 0.510593220338983
          },
          "5046": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "URL Part1",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "str": "https://github.com/",
                "stringN": "$var.8b12.OrganizationName"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5918032786885246,
            "y": 0.8305084745762712,
            "scheduled": false
          },
          "5153": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Run Evaluation Task",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "repo",
                        "operand_1": {
                          "variable": "job_details",
                          "task": "ac6c"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 2.5295081967213116,
            "y": 0.736228813559322
          },
          "5949": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run Child Job for Update",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Push Bundles to GitHub Commit Data",
                "variables": {
                  "artifact": {
                    "variable": "",
                    "task": "553e",
                    "value": "fixedArray"
                  },
                  "action": {
                    "variable": "",
                    "task": "static",
                    "value": "update"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 1.6375690607734807,
            "y": 0.4676354029062087
          },
          "6296": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Run Evaluation Task",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "rediscoverBoolean",
                          "task": "8b12"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": true,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.7762295081967213,
            "y": 0.5985169491525424
          },
          "7451": {
            "name": "arrayPush",
            "canvasName": "push",
            "summary": "Add commit sh",
            "description": "Adds one element to the end of an array and returns the (newly modified) array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.9829.combinedArray",
                "elementN": "$var.9c50.object"
              },
              "outgoing": {
                "pushedArray": "$var.job.pushedArray"
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.9631147540983607,
            "y": 0.7108050847457628,
            "scheduled": false
          },
          "7643": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Data Using 'json-query' Format",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "username",
                "obj": "$var.6ccd.responseBody"
              },
              "outgoing": {
                "return_data": "$var.job.artifactIdArr"
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "x": 0.2295786758383491,
            "y": 0.5093167701863354,
            "scheduled": false
          },
          "9829": {
            "name": "arrayConcat",
            "canvasName": "concat",
            "summary": "Data Array",
            "description": "Used to merge two arrays",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.146c.return_data",
                "arrayN": "$var.61f3.return_data"
              },
              "outgoing": {
                "combinedArray": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.8640458640458641,
            "y": 0.711864406779661,
            "scheduled": false
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0.09716251074806535,
            "y": 0.9043478260869565
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 2.7049180327868854,
            "y": 0.7065677966101694
          },
          "6ccd": {
            "name": "gatherInternalGET",
            "canvasName": "gatherInternalGET",
            "summary": "Gather WhoAmI",
            "description": "Gather GET call",
            "location": "Application",
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "manual",
            "variables": {
              "incoming": {
                "internalURL": "/whoami"
              },
              "outgoing": {
                "responseBody": null
              },
              "error": ""
            },
            "view": "/app_artifacts/views/tasks/gatherInternalGET",
            "deprecated": false,
            "groups": [],
            "x": 0.2244196044711952,
            "y": 0.6385093167701863,
            "scheduled": false
          },
          "82f9": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "RepoName",
                "value": {
                  "name": "name",
                  "private": true
                }
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.3129836629406707,
            "y": 0.5018633540372671
          },
          "3ec9": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object Repo Name",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": "$var.job.RepoName",
                "path": [
                  "name"
                ],
                "value": "$var.8b12.ProjectName"
              },
              "outgoing": {
                "object": "$var.job.RepoName"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.44282029234737746,
            "y": 0.4968944099378882,
            "scheduled": false
          },
          "80f2": {
            "name": "query",
            "canvasName": "query",
            "summary": "Get Artifact Array",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "results",
                "obj": "$var.964.responseBody"
              },
              "outgoing": {
                "return_data": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "x": 0.6147893379191746,
            "y": 0.5838509316770186,
            "scheduled": false
          },
          "94bd": {
            "name": "query",
            "canvasName": "query",
            "summary": "GetArtifactid",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "_id",
                "obj": "$var.99a5.firstFilteredElement"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "x": 0.5921375921375921,
            "y": 0.7277542372881356,
            "scheduled": false
          },
          "99a5": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "JSON Transformation",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "605a4deae4eaf000ec76deb0",
                "variableMap": {
                  "filterableArray": "$var.80f2.return_data",
                  "keyToFilterOn": "name",
                  "valueToFind": "$var.8b12.ArtifactName",
                  "discardMatching": false
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "filteredArray": null,
                "firstFilteredElement": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.5896805896805897,
            "y": 0.6588983050847458,
            "task_name": "CompliancefilterArrayOfObjectsGitHub",
            "retrySettings": null
          },
          "e138": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Make Artifact URI",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "str": "/prebuilts/",
                "stringN": "$var.94bd.return_data"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.7819672131147541,
            "y": 0.690677966101695,
            "scheduled": false
          },
          "5bf": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "JSON Transformation",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "60492fa1bf365c00ecacb399",
                "variableMap": {
                  "artifactDataUnformatted": "$var.1110.responseBody",
                  "componentObject": "$var.9aef.output"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "artifactDataFormatted": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 1.1687141687141687,
            "y": 0.7213983050847458,
            "task_name": "getMetadataAndComponentsGitHub",
            "retrySettings": null
          },
          "9aef": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "componentsObject",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "620ea276e3638a010009b10e",
                "variableMap": {
                  "input": "$var.1110.responseBody"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "output": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 1.1613431613431613,
            "y": 0.6228813559322034,
            "task_name": "componentsObjectGitHub",
            "retrySettings": null
          },
          "20e2": {
            "name": "createPublishedArtifactFromScratch",
            "canvasName": "createPublishedArtifactFromScratch",
            "summary": "Creates artifact for publishing without DB calls",
            "description": "Creates JSON object containing artifact file structure and all associated data from input tasks without touching database",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "artifactData": "$var.5bf.artifactDataFormatted",
                "modules": "$var.job.healthcheck",
                "packageJson": "$var.job.packageJson"
              },
              "outgoing": {
                "callback": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.3243243243243243,
            "y": 0.722457627118644,
            "scheduled": false
          },
          "ab12": {
            "name": "query",
            "canvasName": "query",
            "summary": "Get Update Files",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "update",
                "obj": "$var.20e2.callback"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "x": 1.3707182320441988,
            "y": 0.5918097754293263,
            "scheduled": false
          },
          "8c8f": {
            "name": "query",
            "canvasName": "query",
            "summary": "Get Create Files",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "create",
                "obj": "$var.20e2.callback"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "x": 1.47010647010647,
            "y": 0.6345338983050848,
            "scheduled": false
          },
          "99e1": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run Child Job for Create",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Push Bundles to GitHub Commit Data",
                "variables": {
                  "artifact": {
                    "variable": "",
                    "task": "8c8f",
                    "value": "return_data"
                  },
                  "action": {
                    "variable": "",
                    "task": "static",
                    "value": "create"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 1.638121546961326,
            "y": 0.6036988110964333
          },
          "146c": {
            "name": "query",
            "canvasName": "query",
            "summary": "update Array",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "commitActions",
                "obj": "$var.5949.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "x": 1.778688524590164,
            "y": 0.5211864406779662,
            "scheduled": false
          },
          "61f3": {
            "name": "query",
            "canvasName": "query",
            "summary": "create Array",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "commitActions",
                "obj": "$var.99e1.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "x": 1.7567567567567568,
            "y": 0.6175847457627118,
            "scheduled": false
          },
          "fb6e": {
            "name": "postOrgsOrgRepos",
            "canvasName": "postOrgsOrgRepos",
            "summary": "Create a new repository for the authenticated user. OAuth users must supply\nrepo scope.",
            "description": "Create a new repository for the authenticated user. OAuth users must supply\nrepo scope.",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "org": "$var.8b12.OrganizationName",
                "body": "$var.job.RepoName",
                "adapter_id": "$var.8b12.Adapter"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 2.4040983606557376,
            "y": 0.926906779661017,
            "scheduled": false
          },
          "c6cd": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Create new Repo",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Push Bundles to GitHub New Repo",
                "variables": {
                  "branch": {
                    "variable": "",
                    "task": "static",
                    "value": "main"
                  },
                  "artifact_array": {
                    "variable": "",
                    "task": "job",
                    "value": "pushedArray"
                  },
                  "owner": {
                    "variable": "",
                    "task": "8b12",
                    "value": "OrganizationName"
                  },
                  "repo": {
                    "variable": "",
                    "task": "8b12",
                    "value": "ProjectName"
                  },
                  "adapter_id": {
                    "variable": "",
                    "task": "8b12",
                    "value": "Adapter"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 2.704098360655738,
            "y": 0.9216101694915254
          },
          "fb27": {
            "name": "query",
            "canvasName": "query",
            "summary": "get new Branch name",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "MRPayload.head",
                "obj": "$var.3353.job_details"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "x": 2.4885245901639346,
            "y": 0.5116525423728814,
            "scheduled": false
          },
          "6a7d": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run Child Job",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Push Bundles to GitHub New Repo",
                "variables": {
                  "branch": {
                    "variable": "",
                    "task": "fb27",
                    "value": "return_data"
                  },
                  "artifact_array": {
                    "variable": "",
                    "task": "job",
                    "value": "pushedArray"
                  },
                  "owner": {
                    "variable": "",
                    "task": "8b12",
                    "value": "OrganizationName"
                  },
                  "repo": {
                    "variable": "",
                    "task": "8b12",
                    "value": "ProjectName"
                  },
                  "adapter_id": {
                    "variable": "",
                    "task": "8b12",
                    "value": "Adapter"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 2.6262295081967215,
            "y": 0.5211864406779662
          },
          "3d98": {
            "name": "arrayPush",
            "canvasName": "push",
            "summary": "Add generate file",
            "description": "Adds one element to the end of an array and returns the (newly modified) array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.job.pushedArray",
                "elementN": "$var.e81.object"
              },
              "outgoing": {
                "pushedArray": "$var.job.pushedArray"
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 2.069672131147541,
            "y": 0.7097457627118644,
            "scheduled": false
          },
          "e6c0": {
            "name": "makeData",
            "canvasName": "makeData",
            "summary": "Get Action yml",
            "description": "This task takes an input and converts it to a different data type. For example, converting a number into a string.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "input": "# This is a basic workflow to help you get started with Actions\n\nname: CI\n\n# Controls when the action will run. \non:\n  # Triggers the workflow on push or pull request events but only for the main branch\n  push:\n\n  # Allows you to run this workflow manually from the Actions tab\n  workflow_dispatch:\n\n# A workflow run is made up of one or more jobs that can run sequentially or in parallel\njobs:\n  # This workflow contains a single job called \"build\"\n  build:\n    # The type of runner that the job will run on\n    runs-on: ubuntu-latest\n    if: \"!contains(github.event.head_commit.message, 'Skip CI')\"\n    # Steps represent a sequence of tasks that will be executed as part of the job\n    steps:\n      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it\n      - uses: actions/checkout@v2\n      - name: Generate Artifact.json file\n        run: chmod +x ./scripts/commit.sh && ./scripts/commit.sh",
                "outputType": "string",
                "variables": ""
              },
              "outgoing": {
                "output": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.5827868852459017,
            "y": 1.0095338983050848,
            "scheduled": false
          },
          "3fbf": {
            "name": "arrayPush",
            "canvasName": "push",
            "summary": "Add Action to Array",
            "description": "Adds one element to the end of an array and returns the (newly modified) array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.job.pushedArray",
                "elementN": "$var.2279.object"
              },
              "outgoing": {
                "pushedArray": "$var.job.pushedArray"
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 2.1844262295081966,
            "y": 0.711864406779661,
            "scheduled": false
          },
          "9ec4": {
            "name": "makeData",
            "canvasName": "makeData",
            "summary": "get generatedata",
            "description": "This task takes an input and converts it to a different data type. For example, converting a number into a string.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "input": "const path = require(\"path\");\nconst fs = require(\"fs\");\n\nconst files = [\"package.json\", \"manifest.json\", \"README.md\"];\nlet success = true;\n\nconst PID = process.argv[2];\nconst gitHubURL = process.argv[3];\nconst gitHubBranch = process.argv[4];\nif (PID === null || PID == undefined || Number.isNaN(parseInt(PID, 10))) {\n  console.error(\n    \"Please run this script with GitHub Project ID (integer) as an argument\"\n  );\n  process.exit(2);\n}\nconsole.log(`Generating artifact.json file w/ ${PID} as GitHub Project ID`);\n\nconst filePath = __dirname.replace(\"/scripts\", \"\");\ntry {\n  const [packageJSON, manifest, readme] = files.map((entry) => {\n    const result = fs.readFileSync(path.join(filePath, `./${entry}`), {\n      encoding: \"utf-8\",\n    });\n\n    if (entry !== \"README.md\") {\n      const parsedRes = JSON.parse(result);\n      if (\n        entry === \"manifest.json\" &&\n        Object.prototype.hasOwnProperty.call(parsedRes, \"version\")\n      ) {\n        delete parsedRes.version;\n      }\n      return parsedRes;\n    } else {\n      return result.replace(/\\.\\//gm, `${gitHubURL}/-/raw/${gitHubBranch}/`);\n    }\n  });\n    const bundles = [];\n  const components = manifest.artifacts;\n  components.forEach((file) => {\n    try {\n      const data = fs.readFileSync(path.join(filePath, `${file.location}`), {\n        encoding: \"utf-8\",\n      });\n      bundles.push({ type: file.type, data: JSON.parse(data) });\n      console.log(`     ⚪ (${file.type})   -   ${file.location}   -   ✅`);\n    } catch (err) {\n      success = false;\n      console.log(\n        `     ⚪  (${file.type})   -   ${file.location}   -   ❌  - ${err}`\n      );\n    }\n  });\n\n  const metadata = {\n    name: packageJSON.name,\n    version: packageJSON.version,\n    description: packageJSON.description,\n    license: packageJSON.license,\n    repository: packageJSON.repository,\n    keywords: packageJSON.keywords,\n    author: packageJSON.author,\n    IAPDependencies: packageJSON.IAPDependencies,\n  };\n\n  if (success) {\n    console.log(`\\n\\nFinished successfully`);\n  } else {\n    console.log(`\\n\\nFinished with error(s)`);\n    process.exit(1);\n  }\n  const artifact = { metadata, manifest, bundles, readme };\n  fs.writeFileSync(\n    path.join(filePath, \"./artifact.json\"),\n    JSON.stringify(artifact, null, 2)\n  );\n} catch (err) {\n  console.error(`Failed to generate artifact.json file: ${err}`);\n  process.exit(1);\n}\n",
                "outputType": "string",
                "variables": ""
              },
              "outgoing": {
                "output": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.521311475409836,
            "y": 0.7415254237288136,
            "scheduled": false
          },
          "e81": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object generate key",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": {
                  "action": "create",
                  "file_path": "scripts/generate.js",
                  "content": ""
                },
                "path": [
                  "content"
                ],
                "value": "$var.9ec4.output"
              },
              "outgoing": {
                "object": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.7065573770491804,
            "y": 0.746822033898305,
            "scheduled": false
          },
          "bd21": {
            "name": "query",
            "canvasName": "query",
            "summary": "Get Package Name Json",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "metadata.name",
                "obj": "$var.5bf.artifactDataFormatted"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "x": 1.2360655737704918,
            "y": 0.6451271186440678,
            "scheduled": false
          },
          "e7ff": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Url part 2",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "str": "/",
                "stringN": "$var.8b12.ProjectName"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.6811475409836065,
            "y": 0.8305084745762712,
            "scheduled": false
          },
          "adf4": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Url Par 3",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "str": "$var.5046.combinedStrings",
                "stringN": "$var.e7ff.combinedStrings"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.7795081967213114,
            "y": 0.826271186440678,
            "scheduled": false
          },
          "9c50": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object commit sh",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": {
                  "action": "create",
                  "file_path": "scripts/commit.sh",
                  "content": ""
                },
                "path": [
                  "content"
                ],
                "value": "git checkout \"${GITHUB_REF:11}\"\ngit reset --hard origin/\"${GITHUB_REF:11}\"\ncd scripts\nGENERATE=`node generate $GITHUB_RUN_ID $GITHUB_REPOSITORY $GITHUB_REF`\ncd ..\ngit add artifact.json\ngit diff --cached --name-only | if grep artifact.json\nthen\n    echo \"A new generated artifact.json file has been checked in to current branch\"\n    git config --global user.name '$GITHUB_ACTOR'\n    git config --global user.email 'github-action@users.noreply.github.com'\n    git remote set-url origin https://x-access-token:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY\n    git add artifact.json\n    git commit -am \"Automated artifact json generation report [Skip CI]\"\n    git push\nelse\n    echo \"artifact.json file hasn't changed\"\nfi"
              },
              "outgoing": {
                "object": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.6491803278688524,
            "y": 0.8877118644067796,
            "scheduled": false
          },
          "8b12": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "JSON Transformation",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "606b3ceec2cf450099ae523f",
                "variableMap": {
                  "formData": "$var.job.formData"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "ArtifactName": null,
                "ProjectName": null,
                "rediscoverBoolean": null,
                "OrganizationName": null,
                "CommitMessage": null,
                "MRType": null,
                "TargetBranch": null,
                "Adapter": null,
                "privateRepo": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.20808254514187446,
            "y": 0.9031055900621118,
            "task_name": "convertFormData"
          },
          "870c": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Run Evaluation Task",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "failed",
                        "operand_1": {
                          "variable": "job_details",
                          "task": "ac6c"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": false,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 2.525409836065574,
            "y": 0.6366525423728814
          },
          "ac6c": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run Child Job",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Push Bundles to GitHub Check OrgRepo",
                "variables": {
                  "org": {
                    "variable": "",
                    "task": "8b12",
                    "value": "OrganizationName"
                  },
                  "adapter_id": {
                    "variable": "",
                    "task": "8b12",
                    "value": "Adapter"
                  },
                  "repoName": {
                    "variable": "",
                    "task": "8b12",
                    "value": "ProjectName"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "groups": [],
            "actor": "job",
            "x": 2.3408839779005524,
            "y": 0.7014531043593131
          },
          "808d": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object Repo Visibility",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": "$var.job.RepoName",
                "path": [
                  "private"
                ],
                "value": "$var.8b12.privateRepo"
              },
              "outgoing": {
                "object": "$var.job.RepoName"
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5795356835769562,
            "y": 0.4894409937888199,
            "scheduled": false
          },
          "553e": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "updatePackageGitHubJSON",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "605d2b11d1976e009291a74d",
                "variableMap": {
                  "filesArray": "$var.ab12.return_data",
                  "packageJsonName": "$var.bd21.return_data",
                  "packageJsonVersion": "0.0.1"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "fixedArray": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 1.4714400643604184,
            "y": 0.4874551971326165,
            "task_name": "updatePackageGitHubJSON",
            "retrySettings": null
          },
          "4b6e": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "healthcheck",
                "value": [
                  {
                    "package_id": "@itential/app-automation_catalog",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-ag_manager",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-admin_essentials",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-golden_services",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-form_builder",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-artifacts",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-automation_studio",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-json_forms",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-configuration_manager",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-golden_config",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/adapter-local_aaa",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-mop",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-nso_manager",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-policy_manager",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-service_management",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/search",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-service_catalog",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-smart_template",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-task_worker",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-template_builder",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/tags",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/adapter-mongo",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/adapter-redis",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-workflow_engine",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-workflow_builder",
                    "version": ""
                  }
                ]
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 1.1568785197103781,
            "y": 0.4850657108721625
          }
        },
        "transitions": {
          "400": {
            "1110": {
              "type": "standard",
              "state": "success"
            }
          },
          "749": {
            "20e2": {
              "type": "standard",
              "state": "success"
            }
          },
          "964": {
            "6ccd": {
              "type": "standard",
              "state": "success"
            }
          },
          "1110": {
            "4b6e": {
              "type": "standard",
              "state": "success"
            }
          },
          "2279": {
            "9829": {
              "type": "standard",
              "state": "success"
            }
          },
          "3353": {
            "fb27": {
              "type": "standard",
              "state": "success"
            }
          },
          "5046": {
            "e7ff": {
              "type": "standard",
              "state": "success"
            }
          },
          "5153": {
            "3353": {
              "type": "standard",
              "state": "success"
            },
            "fb6e": {
              "type": "standard",
              "state": "failure"
            }
          },
          "5949": {
            "146c": {
              "type": "standard",
              "state": "success"
            }
          },
          "6296": {
            "400": {
              "type": "standard",
              "state": "success"
            },
            "1110": {
              "type": "standard",
              "state": "failure"
            }
          },
          "7451": {
            "3d98": {
              "type": "standard",
              "state": "success"
            }
          },
          "7643": {
            "82f9": {
              "type": "standard",
              "state": "success"
            }
          },
          "9829": {
            "7451": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "8b12": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "6ccd": {
            "7643": {
              "type": "standard",
              "state": "success"
            }
          },
          "82f9": {
            "3ec9": {
              "type": "standard",
              "state": "success"
            }
          },
          "3ec9": {
            "808d": {
              "type": "standard",
              "state": "success"
            }
          },
          "80f2": {
            "99a5": {
              "type": "standard",
              "state": "success"
            }
          },
          "94bd": {
            "5046": {
              "type": "standard",
              "state": "success"
            }
          },
          "99a5": {
            "94bd": {
              "type": "standard",
              "state": "success"
            }
          },
          "e138": {
            "6296": {
              "type": "standard",
              "state": "success"
            }
          },
          "5bf": {
            "bd21": {
              "type": "standard",
              "state": "success"
            }
          },
          "9aef": {
            "5bf": {
              "type": "standard",
              "state": "success"
            }
          },
          "20e2": {
            "8c8f": {
              "type": "standard",
              "state": "success"
            },
            "ab12": {
              "type": "standard",
              "state": "success"
            },
            "9ec4": {
              "type": "standard",
              "state": "success"
            },
            "e6c0": {
              "type": "standard",
              "state": "success"
            },
            "9c50": {
              "type": "standard",
              "state": "success"
            }
          },
          "ab12": {
            "553e": {
              "type": "standard",
              "state": "success"
            }
          },
          "8c8f": {
            "99e1": {
              "type": "standard",
              "state": "success"
            }
          },
          "99e1": {
            "61f3": {
              "type": "standard",
              "state": "success"
            }
          },
          "72a1": {},
          "146c": {
            "9829": {
              "type": "standard",
              "state": "success"
            }
          },
          "61f3": {
            "9829": {
              "type": "standard",
              "state": "success"
            }
          },
          "fb6e": {
            "c6cd": {
              "type": "standard",
              "state": "success"
            }
          },
          "c6cd": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "fb27": {
            "6a7d": {
              "type": "standard",
              "state": "success"
            }
          },
          "6a7d": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "3d98": {
            "3fbf": {
              "type": "standard",
              "state": "success"
            }
          },
          "e6c0": {
            "2279": {
              "type": "standard",
              "state": "success"
            }
          },
          "b67f": {},
          "3fbf": {
            "ac6c": {
              "type": "standard",
              "state": "success"
            }
          },
          "9ec4": {
            "e81": {
              "type": "standard",
              "state": "success"
            }
          },
          "e81": {
            "9829": {
              "type": "standard",
              "state": "success"
            }
          },
          "bd21": {
            "749": {
              "type": "standard",
              "state": "success"
            }
          },
          "e7ff": {
            "adf4": {
              "type": "standard",
              "state": "success"
            }
          },
          "adf4": {
            "e138": {
              "type": "standard",
              "state": "success"
            }
          },
          "feed": {},
          "9c50": {
            "9829": {
              "type": "standard",
              "state": "success"
            }
          },
          "8c95": {},
          "8b12": {
            "964": {
              "type": "standard",
              "state": "success"
            }
          },
          "870c": {
            "5153": {
              "type": "standard",
              "state": "success"
            },
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            }
          },
          "ac6c": {
            "870c": {
              "type": "standard",
              "state": "success"
            }
          },
          "808d": {
            "80f2": {
              "type": "standard",
              "state": "success"
            }
          },
          "553e": {
            "5949": {
              "type": "standard",
              "state": "success"
            }
          },
          "4b6e": {
            "9aef": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "name": "Push Bundles to GitHub",
        "description": "",
        "last_updated": "2023-01-26T21:26:59.800Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "lastUpdatedVersion": "3.61.22-2021.2.100.0",
        "inputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "$id": "formData",
              "type": "object",
              "properties": {
                "checkInArtifact": {
                  "type": "object",
                  "properties": {
                    "makeRepoPrivate": {
                      "type": "boolean",
                      "examples": [
                        true,
                        false
                      ]
                    },
                    "reDiscoverArtifact": {
                      "type": "boolean",
                      "examples": [
                        true,
                        false
                      ]
                    },
                    "forExistingGitHubProjects": {
                      "type": "object",
                      "properties": {
                        "pullRequestType": {
                          "type": "string",
                          "examples": [
                            "major"
                          ]
                        },
                        "commitMessage": {
                          "type": "string",
                          "examples": [
                            "Commit"
                          ]
                        },
                        "targetBranch": {
                          "type": "string",
                          "examples": [
                            "main"
                          ]
                        }
                      },
                      "required": []
                    },
                    "gitHubAdapterName": {
                      "type": "string",
                      "examples": [
                        "GitHub"
                      ]
                    },
                    "gitHubRepositoryName": {
                      "type": "string",
                      "examples": [
                        "Environment"
                      ]
                    },
                    "gitHubOrganizationName": {
                      "type": "string",
                      "examples": [
                        "Itential"
                      ]
                    },
                    "artifact": {
                      "type": "string",
                      "examples": [
                        "@itentialopensource/artifact-wizard"
                      ]
                    }
                  },
                  "required": []
                }
              },
              "required": []
            }
          },
          "required": [
            "formData"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "formData": {
              "$id": "formData",
              "type": "object",
              "properties": {
                "checkInArtifact": {
                  "type": "object",
                  "properties": {
                    "makeRepoPrivate": {
                      "type": "boolean",
                      "examples": [
                        true,
                        false
                      ]
                    },
                    "reDiscoverArtifact": {
                      "type": "boolean",
                      "examples": [
                        true,
                        false
                      ]
                    },
                    "forExistingGitHubProjects": {
                      "type": "object",
                      "properties": {
                        "pullRequestType": {
                          "type": "string",
                          "examples": [
                            "major"
                          ]
                        },
                        "commitMessage": {
                          "type": "string",
                          "examples": [
                            "Commit"
                          ]
                        },
                        "targetBranch": {
                          "type": "string",
                          "examples": [
                            "main"
                          ]
                        }
                      },
                      "required": []
                    },
                    "gitHubAdapterName": {
                      "type": "string",
                      "examples": [
                        "GitHub"
                      ]
                    },
                    "gitHubRepositoryName": {
                      "type": "string",
                      "examples": [
                        "Environment"
                      ]
                    },
                    "gitHubOrganizationName": {
                      "type": "string",
                      "examples": [
                        "Itential"
                      ]
                    },
                    "artifact": {
                      "type": "string",
                      "examples": [
                        "@itentialopensource/artifact-wizard"
                      ]
                    }
                  },
                  "required": []
                }
              },
              "required": []
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "packageJson": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "author": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "scripts": {
                  "type": "object",
                  "properties": {
                    "test": {
                      "type": "string"
                    },
                    "deploy": {
                      "type": "string"
                    },
                    "validateSchema": {
                      "type": "string"
                    },
                    "validateSchemaLinks": {
                      "type": "string"
                    },
                    "generateImageLinks": {
                      "type": "string"
                    }
                  }
                },
                "repository": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "hostname": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    }
                  }
                },
                "keywords": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "license": {
                  "type": "string"
                },
                "devDependencies": {
                  "type": "object",
                  "properties": {
                    "r2": {
                      "type": "string"
                    },
                    "ajv": {
                      "type": "string"
                    },
                    "better-ajv-errors": {
                      "type": "string"
                    },
                    "fs-extra": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "pushedArray": {
              "title": "pushedArray",
              "type": "array",
              "items": [
                {
                  "type": [
                    "string",
                    "number",
                    "integer",
                    "object",
                    "array",
                    "boolean",
                    "null"
                  ]
                }
              ],
              "examples": [
                [
                  "Device1",
                  "Device2",
                  "Device3"
                ]
              ]
            },
            "artifactIdArr": {
              "title": "return_data",
              "type": [
                "string",
                "number",
                "object",
                "integer",
                "array",
                "boolean",
                "null"
              ],
              "examples": [
                "value"
              ]
            },
            "RepoName": {
              "title": "object",
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "first": {
                    "second": {
                      "third": "last"
                    }
                  }
                }
              ]
            },
            "healthcheck": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "package_id": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "created": "2021-03-23T20:50:23.930Z",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "createdVersion": "5.29.14-2020.2.17",
        "canvasVersion": 1,
        "tags": [],
        "groups": [],
        "migrationVersion": 1
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Push Bundles to GitHub Re-Discover",
        "tasks": {
          "5979": {
            "name": "componentDiscovery",
            "canvasName": "componentDiscovery",
            "summary": "Performs discovery on Automation Catalogs or Workflows",
            "description": "Discovers any referenced components within automation catalogs",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "entryPoint": "$var.b668.discoveryEntryPoint"
              },
              "outgoing": {
                "discovery": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.3391384051329056,
            "y": 0.520702634880803,
            "scheduled": false
          },
          "7393": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "JSON Transformation",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "605b86f821c795008dc26118",
                "variableMap": {
                  "formOutput": "$var.6c56.export",
                  "discoveryOutput": "$var.5979.discovery"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "formInput": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.46190476190476193,
            "y": 0.5228136882129277,
            "task_name": "mergeFormWithDiscoveryGitHub",
            "retrySettings": null
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": -0.5068744271310724,
            "y": 0.5232120451693852
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.4472960586617782,
            "y": 0.5244667503136763
          },
          "5dec": {
            "name": "gatherInternalGET",
            "canvasName": "gatherInternalGET",
            "summary": "Gather Selected Artifact Info",
            "description": "Gather Selected Artifact Info",
            "location": "Application",
            "app": "AppArtifacts",
            "displayName": "AppArtifacts",
            "type": "manual",
            "variables": {
              "incoming": {
                "internalURL": "$var.job.internalURL"
              },
              "outgoing": {
                "responseBody": null
              },
              "error": ""
            },
            "view": "/app_artifacts/views/tasks/gatherInternalGET",
            "deprecated": false,
            "groups": [],
            "x": -0.38221814848762603,
            "y": 0.5370138017565872,
            "scheduled": false
          },
          "76d1": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "convertArtifactInfoToFormGithub",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "6210015da161ae00ef6164b4",
                "variableMap": {
                  "input": "$var.5dec.responseBody"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "output": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.20348304307974335,
            "y": 0.5294855708908407,
            "task_name": "convertArtifactInfoToFormGithub",
            "retrySettings": null
          },
          "b668": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "JSON Transformation",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "605b86d521c795008dc26117",
                "variableMap": {
                  "formOutput": "$var.6c56.export"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "discoveryEntryPoint": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.2153987167736022,
            "y": 0.5232120451693852,
            "task_name": "convertFormOutputToDiscoveryFormatGitHub",
            "retrySettings": null
          },
          "bd16": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Confirm",
            "description": "Confirm",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Confirm Artifact Update",
                "message": "Please confirm correctness of the up to date list of components presented by the previous task.",
                "body": "Confirm button will update the list of components inside the Admin Essentials application.<br>Retry will revert to the previous task, so you can pick and choose what documents you may want to omit before discovery.",
                "variables": {},
                "btn_success": "CONFIRM",
                "btn_failure": "RETRY"
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "groups": [],
            "x": 0.7085242896425298,
            "y": 0.5244667503136763,
            "scheduled": false
          },
          "2b81": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Failed Discovery",
            "description": "View data in a pretty format",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Failed Discovery",
                "message": "Some selected component(s) caused the discovery to fail.<br>Please try again",
                "body": "",
                "variables": {},
                "btn_success": "Try Again",
                "btn_failure": ""
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "groups": [],
            "x": 0.3400549954170486,
            "y": 0.698870765370138,
            "scheduled": false
          },
          "8ed7": {
            "name": "createPublishedArtifactFromScratch",
            "canvasName": "createPublishedArtifactFromScratch",
            "summary": "Creates artifact for publishing without DB calls",
            "description": "Creates JSON object containing artifact file structure and all associated data from input tasks without touching database",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "artifactData": "$var.eb15.mata",
                "modules": "$var.job.modules",
                "packageJson": "$var.eb15.packageJSON"
              },
              "outgoing": {
                "callback": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.1209899175068745,
            "y": 0.5269761606022585,
            "scheduled": false
          },
          "eb15": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "JSON Transformation",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "605b870f21c795008dc26119",
                "variableMap": {
                  "AEartifactInfo": "$var.5dec.responseBody",
                  "formOutput": "$var.a078.export",
                  "discovery": "$var.5979.discovery"
                },
                "options": {
                  "extractOutput": false,
                  "validateIncoming": false,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "mata": null,
                "packageJSON": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": 0.8221814848762603,
            "y": 0.5181932245922208,
            "task_name": "createArtifactForPublishGitHub",
            "retrySettings": null
          },
          "cd71": {
            "name": "replaceArtifactAdminEssentials",
            "canvasName": "replaceArtifactAdminEssentials",
            "summary": "Replaces an artifact in AE via direct mongo injection",
            "description": "Replaces an artifact created from a published artifact in admin essentials",
            "location": "Application",
            "locationType": null,
            "app": "AppArtifacts",
            "type": "automatic",
            "displayName": "AppArtifacts",
            "variables": {
              "incoming": {
                "artifactBundle": "$var.8ed7.callback"
              },
              "outgoing": {
                "modifiedCount": null
              },
              "error": ""
            },
            "deprecated": false,
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.3171402383134738,
            "y": 0.5319949811794228,
            "scheduled": false
          },
          "6c56": {
            "name": "ShowJsonForm",
            "canvasName": "ShowJsonForm",
            "summary": "Show Current Components",
            "description": "Show Current Components",
            "location": "Application",
            "app": "JsonForms",
            "displayName": "JsonForms",
            "type": "manual",
            "variables": {
              "incoming": {
                "form_id": "Re-Discovery Components Form",
                "instance_data": "$var.f80d.componentEditorFormInput"
              },
              "outgoing": {
                "export": null
              },
              "error": "",
              "decorators": []
            },
            "view": "/json-forms/task/ShowJsonForm",
            "deprecated": false,
            "groups": [],
            "x": 0.1145737855178735,
            "y": 0.533249686323714,
            "scheduled": false
          },
          "a078": {
            "name": "ShowJsonForm",
            "canvasName": "ShowJsonForm",
            "summary": "Show New Components",
            "description": "Show New Components",
            "location": "Application",
            "app": "JsonForms",
            "displayName": "JsonForms",
            "type": "manual",
            "variables": {
              "incoming": {
                "form_id": "Re-Discovery Components Form",
                "instance_data": "$var.7393.formInput"
              },
              "outgoing": {
                "export": null
              },
              "error": "",
              "decorators": []
            },
            "view": "/json-forms/task/ShowJsonForm",
            "deprecated": false,
            "groups": [],
            "x": 0.5957836846929423,
            "y": 0.5156838143036386,
            "scheduled": false
          },
          "f80d": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "translateSchemaPushBundles",
            "description": "Takes in the output of the componentDiscovery task in appartifacts and outputs a format that can be used in a form where the components can be edited.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "621002baa161ae00ef6164b5",
                "variableMap": {
                  "componentDiscoveryOutput": "$var.76d1.output"
                },
                "options": {
                  "extractOutput": true,
                  "validateIncoming": true,
                  "revertToDefaultValue": true
                }
              },
              "outgoing": {
                "componentEditorFormInput": null
              }
            },
            "deprecated": false,
            "groups": [],
            "x": -0.02933088909257562,
            "y": 0.5257214554579673,
            "task_name": "translateSchemaPushBundles",
            "retrySettings": null
          },
          "d556": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "modules",
                "value": [
                  {
                    "package_id": "@itential/app-automation_catalog",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-ag_manager",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-admin_essentials",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-golden_services",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-form_builder",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-artifacts",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-automation_studio",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-json_forms",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-configuration_manager",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-golden_config",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/adapter-local_aaa",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-mop",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-nso_manager",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-policy_manager",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-service_management",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/search",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-service_catalog",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-smart_template",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-task_worker",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-template_builder",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/tags",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/adapter-mongo",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/adapter-redis",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-workflow_engine",
                    "version": ""
                  },
                  {
                    "package_id": "@itential/app-workflow_builder",
                    "version": ""
                  }
                ]
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> <span class='highlight-string'>Variable</span>"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> <span class='highlight-string'>variable</span> by Job ID and assign it a value."
              },
              {
                "key": "canvasName",
                "highlightString": "new<span class='highlight-string'>Variable</span>"
              }
            ],
            "groups": [],
            "x": 0.9493927125506073,
            "y": 0.5302197802197802
          }
        },
        "transitions": {
          "5979": {
            "7393": {
              "type": "standard",
              "state": "success"
            },
            "2b81": {
              "type": "standard",
              "state": "error"
            }
          },
          "6355": {},
          "7393": {
            "a078": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "5dec": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "5dec": {
            "76d1": {
              "type": "standard",
              "state": "success"
            }
          },
          "76d1": {
            "f80d": {
              "type": "standard",
              "state": "success"
            }
          },
          "b668": {
            "5979": {
              "type": "standard",
              "state": "success"
            }
          },
          "bd16": {
            "5dec": {
              "type": "revert",
              "state": "failure"
            },
            "eb15": {
              "type": "standard",
              "state": "success"
            }
          },
          "2b81": {
            "5dec": {
              "type": "revert",
              "state": "success"
            }
          },
          "8ed7": {
            "cd71": {
              "type": "standard",
              "state": "success"
            }
          },
          "eb15": {
            "d556": {
              "type": "standard",
              "state": "success"
            }
          },
          "cd71": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "6c56": {
            "b668": {
              "type": "standard",
              "state": "success"
            }
          },
          "a078": {
            "bd16": {
              "type": "standard",
              "state": "success"
            }
          },
          "f80d": {
            "6c56": {
              "type": "standard",
              "state": "success"
            }
          },
          "d556": {
            "8ed7": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "created": "2020-10-05T23:29:32.389Z",
        "created_by": {
          "provenance": "Itential AAA LDAP",
          "username": "itential-artifacts",
          "firstname": "Itential",
          "inactive": true
        },
        "createdVersion": "5.10.4-2020.1.22.0",
        "last_updated": "2023-01-26T21:26:59.815Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "lastUpdatedVersion": "3.61.22-2021.2.100.0",
        "type": "automation",
        "description": null,
        "inputSchema": {
          "type": "object",
          "properties": {
            "internalURL": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "internalURL"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "internalURL": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "modules": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "package_id": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "canvasVersion": 1,
        "tags": [],
        "groups": [],
        "migrationVersion": 1
      }
    },
    {
      "type": "workflow",
      "data": {
        "type": "automation",
        "tasks": {
          "788": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object Key",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": "$var.job.MRPayload",
                "path": [
                  "title"
                ],
                "value": "$var.e222.combinedStrings"
              },
              "outgoing": {
                "object": "$var.job.MRPayload"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>set</span><span class='highlight-string'>Object</span>Key"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Set</span> <span class='highlight-string'>Object</span> Key"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Set</span> an <span class='highlight-string'>object</span> key"
              },
              {
                "key": "displayName",
                "highlightString": "<span class='highlight-string'>Object</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.9860655737704918,
            "y": 0.6430084745762712,
            "scheduled": false
          },
          "2759": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object ref",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": "$var.job.branchPayload",
                "path": [
                  "ref"
                ],
                "value": "$var.bcde.combinedStrings"
              },
              "outgoing": {
                "object": "$var.job.branchPayload"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>set</span><span class='highlight-string'>Object</span>Key"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Set</span> <span class='highlight-string'>Object</span> Key"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Set</span> an <span class='highlight-string'>object</span> key"
              },
              {
                "key": "displayName",
                "highlightString": "<span class='highlight-string'>Object</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.6934426229508197,
            "y": 0.6377118644067796,
            "scheduled": false
          },
          "7687": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object sha",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": "$var.job.branchPayload",
                "path": [
                  "sha"
                ],
                "value": "$var.bfe3.return_data"
              },
              "outgoing": {
                "object": "$var.job.branchPayload"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>set</span><span class='highlight-string'>Object</span>Key"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Set</span> <span class='highlight-string'>Object</span> Key"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Set</span> an <span class='highlight-string'>object</span> key"
              },
              {
                "key": "displayName",
                "highlightString": "<span class='highlight-string'>Object</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.6936936936936937,
            "y": 0.5180084745762712,
            "scheduled": false
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0,
            "y": 0.5
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.29672131147541,
            "y": 0.5
          },
          "7a0e": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "branchPayload",
                "value": {
                  "ref": "refs/heads/release",
                  "sha": "14e47145895828a38eb8d37dba75004c02652a69"
                }
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>new</span>Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": 0.10974610974610975,
            "y": 0.4279661016949153
          },
          "aec2": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "MRPayload",
                "value": {
                  "title": "PullRequest",
                  "head": "Dummy",
                  "base": "Dummy"
                }
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>new</span>Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": 0.10401310401310401,
            "y": 0.590042372881356
          },
          "a545": {
            "name": "getReposOwnerRepoBranchesBranch",
            "canvasName": "getReposOwnerRepoBranchesBranch",
            "summary": "Get Branch",
            "description": "Get Branch",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repo",
                "branch": "$var.job.Targetbranch",
                "adapter_id": "$var.job.adapter_id"
              },
              "outgoing": {
                "result": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>getReposOwnerRepoBranchesBranch</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.2800982800982801,
            "y": 0.5169491525423728,
            "scheduled": false
          },
          "bfe3": {
            "name": "query",
            "canvasName": "query",
            "summary": "get Branch sha",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response. commit.sha",
                "obj": "$var.a545.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.4103194103194103,
            "y": 0.5116525423728814,
            "scheduled": false
          },
          "c5d2": {
            "name": "getTime",
            "canvasName": "getTime",
            "summary": "Get time",
            "description": "Gets the current time with an optional offset, timezone shift, and format string",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Time",
            "variables": {
              "incoming": {
                "timezone": "-05:00",
                "offsetDuration": "",
                "format": "YYYY-MM-DDTHH-mm-ss"
              },
              "outgoing": {
                "time": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>getTime</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.4905814905814906,
            "y": 0.513771186440678,
            "scheduled": false
          },
          "f40e": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Branch Part1",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "str": "_",
                "stringN": "$var.e747.return_data"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5831285831285832,
            "y": 0.6324152542372882,
            "scheduled": false
          },
          "e747": {
            "name": "query",
            "canvasName": "query",
            "summary": "get Time value",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "time",
                "obj": "$var.c5d2.time"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.5733005733005733,
            "y": 0.5042372881355932,
            "scheduled": false
          },
          "bcde": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Branch Part3",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "str": "refs/heads/",
                "stringN": "$var.e610.combinedStrings"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.6936936936936937,
            "y": 0.7669491525423728,
            "scheduled": false
          },
          "e610": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Branch Part2",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "str": "$var.job.MRType",
                "stringN": "$var.f40e.combinedStrings"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5855855855855856,
            "y": 0.7690677966101694,
            "scheduled": false
          },
          "107d": {
            "name": "postReposOwnerRepoGitRefs",
            "canvasName": "postReposOwnerRepoGitRefs",
            "summary": "Create a Reference",
            "description": "Create a Reference",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repo",
                "body": "$var.job.branchPayload",
                "adapter_id": "$var.job.adapter_id"
              },
              "outgoing": {
                "result": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>postReposOwnerRepoGitRefs</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.8312858312858313,
            "y": 0.5169491525423728,
            "scheduled": false
          },
          "5bd7": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object Key",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": "$var.job.MRPayload",
                "path": [
                  "head"
                ],
                "value": "$var.e610.combinedStrings"
              },
              "outgoing": {
                "object": "$var.job.MRPayload"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>set</span><span class='highlight-string'>Object</span>Key"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Set</span> <span class='highlight-string'>Object</span> Key"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Set</span> an <span class='highlight-string'>object</span> key"
              },
              {
                "key": "displayName",
                "highlightString": "<span class='highlight-string'>Object</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.8304668304668305,
            "y": 0.638771186440678,
            "scheduled": false
          },
          "c3cd": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object Key",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": "$var.job.MRPayload",
                "path": [
                  "base"
                ],
                "value": "$var.job.Targetbranch"
              },
              "outgoing": {
                "object": "$var.job.MRPayload"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>set</span><span class='highlight-string'>Object</span>Key"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Set</span> <span class='highlight-string'>Object</span> Key"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Set</span> an <span class='highlight-string'>object</span> key"
              },
              {
                "key": "displayName",
                "highlightString": "<span class='highlight-string'>Object</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.8296478296478297,
            "y": 0.7648305084745762,
            "scheduled": false
          },
          "201f": {
            "name": "childJob",
            "canvasName": "childJob",
            "summary": "Run Child Job",
            "description": "Runs a child job inside a workflow.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "task": "",
                "workflow": "Push Bundle to GitHub Purge Branch",
                "variables": {
                  "owner": {
                    "variable": "",
                    "task": "job",
                    "value": "owner"
                  },
                  "repo": {
                    "variable": "",
                    "task": "job",
                    "value": "repo"
                  },
                  "pathParam": {
                    "variable": "",
                    "task": "static",
                    "value": "bundles"
                  },
                  "branch": {
                    "variable": "",
                    "task": "e610",
                    "value": "combinedStrings"
                  },
                  "adapter_id": {
                    "variable": "",
                    "task": "job",
                    "value": "adapter_id"
                  }
                },
                "data_array": "",
                "transformation": "",
                "loopType": ""
              },
              "outgoing": {
                "job_details": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>child</span>Job"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Child</span> Job"
              },
              {
                "key": "description",
                "highlightString": "Runs a <span class='highlight-string'>child</span> job inside a workflow."
              }
            ],
            "groups": [],
            "actor": "job",
            "x": 0.9926289926289926,
            "y": 0.5127118644067796
          },
          "e222": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Pull Request title",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "str": "pullRequest",
                "stringN": "$var.e747.return_data"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.9983606557377049,
            "y": 0.7669491525423728,
            "scheduled": false
          },
          "c76b": {
            "name": "postReposOwnerRepoPulls",
            "canvasName": "postReposOwnerRepoPulls",
            "summary": "Create a pull request.",
            "description": "Create a pull request.",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repo",
                "body": "$var.job.MRPayload",
                "adapter_id": "$var.job.adapter_id"
              },
              "outgoing": {
                "result": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>post</span>ReposOwnerRepo<span class='highlight-string'>Pull</span>s"
              },
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>pull</span> request."
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>pull</span> request."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.1704918032786886,
            "y": 0.5042372881355932,
            "scheduled": false
          }
        },
        "transitions": {
          "788": {
            "201f": {
              "type": "standard",
              "state": "success"
            }
          },
          "2759": {
            "7687": {
              "type": "standard",
              "state": "success"
            }
          },
          "7687": {
            "107d": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "7a0e": {
              "type": "standard",
              "state": "success"
            },
            "aec2": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "7a0e": {
            "a545": {
              "type": "standard",
              "state": "success"
            }
          },
          "aec2": {
            "a545": {
              "type": "standard",
              "state": "success"
            }
          },
          "a545": {
            "bfe3": {
              "type": "standard",
              "state": "success"
            }
          },
          "bfe3": {
            "c5d2": {
              "type": "standard",
              "state": "success"
            }
          },
          "c5d2": {
            "e747": {
              "type": "standard",
              "state": "success"
            }
          },
          "f40e": {
            "e610": {
              "type": "standard",
              "state": "success"
            }
          },
          "e747": {
            "f40e": {
              "type": "standard",
              "state": "success"
            }
          },
          "bcde": {
            "2759": {
              "type": "standard",
              "state": "success"
            }
          },
          "e610": {
            "bcde": {
              "type": "standard",
              "state": "success"
            }
          },
          "107d": {
            "5bd7": {
              "type": "standard",
              "state": "success"
            }
          },
          "5bd7": {
            "c3cd": {
              "type": "standard",
              "state": "success"
            }
          },
          "c3cd": {
            "e222": {
              "type": "standard",
              "state": "success"
            }
          },
          "201f": {
            "c76b": {
              "type": "standard",
              "state": "success"
            }
          },
          "e222": {
            "788": {
              "type": "standard",
              "state": "success"
            }
          },
          "c76b": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "name": "Push Bundles to GitHub Create Branch",
        "description": "",
        "last_updated": "2023-01-26T21:26:59.816Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "lastUpdatedVersion": "3.61.22-2021.2.100.0",
        "inputSchema": {
          "type": "object",
          "properties": {
            "owner": {
              "title": "owner",
              "type": "string"
            },
            "repo": {
              "title": "repo",
              "type": "string"
            },
            "Targetbranch": {
              "title": "branch",
              "type": "string"
            },
            "adapter_id": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "MRType": {
              "title": "str",
              "type": "string",
              "examples": [
                "Hello"
              ]
            }
          },
          "required": [
            "owner",
            "repo",
            "Targetbranch",
            "adapter_id",
            "MRType"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "owner": {
              "title": "owner",
              "type": "string"
            },
            "repo": {
              "title": "repo",
              "type": "string"
            },
            "Targetbranch": {
              "title": "branch",
              "type": "string"
            },
            "adapter_id": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "MRType": {
              "title": "str",
              "type": "string",
              "examples": [
                "Hello"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "MRPayload": {
              "title": "object",
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "first": {
                    "second": {
                      "third": "last"
                    }
                  }
                }
              ]
            },
            "branchPayload": {
              "title": "object",
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "first": {
                    "second": {
                      "third": "last"
                    }
                  }
                }
              ]
            }
          }
        },
        "created": "2021-03-23T19:34:48.427Z",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "createdVersion": "5.29.14-2020.2.13",
        "canvasVersion": 1,
        "tags": [],
        "groups": [],
        "migrationVersion": 1
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Push Bundles to GitHub Commit Data",
        "tasks": {
          "1601": {
            "name": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "commitActions",
                "item_to_push": "$var.6cdf.merged_object"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>push</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Push</span> Item to Array"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Push</span> item to a job variable array"
              }
            ],
            "groups": [],
            "x": 1.54716981132075,
            "y": 1.45343511450382
          },
          "2450": {
            "name": "query",
            "summary": "Query name (first nested)",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "name",
                "obj": "$var.798a.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.625102543068089,
            "y": 0.99236641221374,
            "scheduled": false
          },
          "3697": {
            "name": "evaluation",
            "summary": "Evaluation: Directory?",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "db0b"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": "file",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>eval</span>uation"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Eval</span>uation Task"
              },
              {
                "key": "description",
                "highlightString": "Run an <span class='highlight-string'>eval</span>uation"
              }
            ],
            "groups": [],
            "x": 0.968006562756358,
            "y": 1.04885496183206
          },
          "4001": {
            "name": "evaluation",
            "summary": "Evaluation: File?",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "return_data",
                          "task": "6433"
                        },
                        "operator": "==",
                        "operand_2": {
                          "variable": "file",
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>eval</span>uation"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Eval</span>uation Task"
              },
              {
                "key": "description",
                "highlightString": "Run an <span class='highlight-string'>eval</span>uation"
              }
            ],
            "groups": [],
            "x": 0.404429860541427,
            "y": 0.745038167938931
          },
          "6433": {
            "name": "query",
            "summary": "Query type",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "type",
                "obj": "$var.e24a.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.332239540607055,
            "y": 0.653435114503817,
            "scheduled": false
          },
          "7554": {
            "name": "stringConcat",
            "summary": "Concatenate / file",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.f401.combinedStrings",
                "stringN": [
                  "/"
                ]
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "app",
                "highlightString": "<span class='highlight-string'>String</span>Methods"
              },
              {
                "key": "summary",
                "highlightString": "Concatenates <span class='highlight-string'>string</span>s together."
              },
              {
                "key": "description",
                "highlightString": "Concatenates a <span class='highlight-string'>string</span> with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.23789991796555,
            "y": 1.44885496183206,
            "scheduled": false,
            "canvasName": "concat"
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0.10090237899918,
            "y": 0.474809160305344,
            "summary": "workflow_start",
            "description": "workflow_start"
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.5813953488372093,
            "y": 0.47368421052631576,
            "summary": "workflow_end",
            "description": "workflow_end"
          },
          "e24a": {
            "name": "forEach",
            "summary": "For Each Loop",
            "description": "Iterate over each item in an array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_array": "$var.job.artifact"
              },
              "outgoing": {
                "current_item": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>for</span><span class='highlight-string'>Each</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>For</span> <span class='highlight-string'>Each</span> Loop"
              },
              {
                "key": "description",
                "highlightString": "Iterate over <span class='highlight-string'>each</span> item in an array"
              }
            ],
            "groups": [],
            "x": 0.312551271534044,
            "y": 0.483969465648855,
            "scheduled": false
          },
          "fcfb": {
            "name": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "commitActions",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": 0.202625102543068,
            "y": 0.488549618320611
          },
          "ec3b": {
            "name": "query",
            "summary": "Query name",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "name",
                "obj": "$var.e24a.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.385561936013125,
            "y": 0.644274809160305,
            "scheduled": false
          },
          "7bf5": {
            "name": "query",
            "summary": "Query content",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "content",
                "obj": "$var.e24a.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.346185397867104,
            "y": 0.751145038167939,
            "scheduled": false
          },
          "d8c5": {
            "name": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "commitActions",
                "item_to_push": "$var.babe.merged_object"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>push</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Push</span> Item to Array"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Push</span> item to a job variable array"
              }
            ],
            "groups": [],
            "x": 0.587366694011485,
            "y": 0.656488549618321
          },
          "798a": {
            "name": "forEach",
            "summary": "Iterate first level",
            "description": "Iterate over each item in an array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_array": "$var.7bf5.return_data"
              },
              "outgoing": {
                "current_item": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>for</span><span class='highlight-string'>Each</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>For</span> <span class='highlight-string'>Each</span> Loop"
              },
              {
                "key": "description",
                "highlightString": "Iterate over <span class='highlight-string'>each</span> item in an array"
              }
            ],
            "groups": [],
            "x": 0.491386382280558,
            "y": 0.897709923664122,
            "scheduled": false
          },
          "db0b": {
            "name": "query",
            "summary": "Query type (first nested)",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "type",
                "obj": "$var.798a.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.575881870385562,
            "y": 1.05496183206107,
            "scheduled": false
          },
          "b93a": {
            "name": "query",
            "summary": "Query content (first nested)",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "content",
                "obj": "$var.798a.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.62428219852338,
            "y": 1.12213740458015,
            "scheduled": false
          },
          "80bf": {
            "name": "stringConcat",
            "summary": "Concatenate / nested",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.ec3b.return_data",
                "stringN": [
                  "/"
                ]
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "app",
                "highlightString": "<span class='highlight-string'>String</span>Methods"
              },
              {
                "key": "summary",
                "highlightString": "Concatenates <span class='highlight-string'>string</span>s together."
              },
              {
                "key": "description",
                "highlightString": "Concatenates a <span class='highlight-string'>string</span> with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.720262510254307,
            "y": 1.05343511450382,
            "scheduled": false,
            "canvasName": "concat"
          },
          "f401": {
            "name": "stringConcat",
            "summary": "Concatenate nested name",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.80bf.combinedStrings",
                "stringN": "$var.job.name_first_nested"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "app",
                "highlightString": "<span class='highlight-string'>String</span>Methods"
              },
              {
                "key": "summary",
                "highlightString": "Concatenates <span class='highlight-string'>string</span>s together."
              },
              {
                "key": "description",
                "highlightString": "Concatenates a <span class='highlight-string'>string</span> with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.857260049220673,
            "y": 1.05343511450382,
            "scheduled": false,
            "canvasName": "concat"
          },
          "f131": {
            "name": "forEach",
            "summary": "Iterate second level",
            "description": "Iterate over each item in an array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_array": "$var.b93a.return_data"
              },
              "outgoing": {
                "current_item": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>for</span><span class='highlight-string'>Each</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>For</span> <span class='highlight-string'>Each</span> Loop"
              },
              {
                "key": "description",
                "highlightString": "Iterate over <span class='highlight-string'>each</span> item in an array"
              }
            ],
            "groups": [],
            "x": 1.05660377358491,
            "y": 1.18931297709924,
            "scheduled": false
          },
          "a433": {
            "name": "query",
            "summary": "Query name (second nested)",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "name",
                "obj": "$var.f131.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.14520743919886,
            "y": 1.3552036199095,
            "scheduled": false
          },
          "d522": {
            "name": "query",
            "summary": "Query content (second nested)",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "content",
                "obj": "$var.f131.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.15021459227468,
            "y": 1.44457013574661,
            "scheduled": false
          },
          "57b9": {
            "name": "stringConcat",
            "summary": "Concatenate file name",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "String",
            "type": "automatic",
            "variables": {
              "incoming": {
                "str": "$var.7554.combinedStrings",
                "stringN": "$var.job.name_second_nested"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "app",
                "highlightString": "<span class='highlight-string'>String</span>Methods"
              },
              {
                "key": "summary",
                "highlightString": "Concatenates <span class='highlight-string'>string</span>s together."
              },
              {
                "key": "description",
                "highlightString": "Concatenates a <span class='highlight-string'>string</span> with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.35684987694832,
            "y": 1.45190839694656,
            "scheduled": false,
            "canvasName": "concat"
          },
          "6cdf": {
            "name": "merge",
            "summary": "Merge action data",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "action",
                    "value": {
                      "task": "job",
                      "variable": "action",
                      "editable": true
                    }
                  },
                  {
                    "key": "file_path",
                    "value": {
                      "task": "57b9",
                      "variable": "combinedStrings"
                    }
                  },
                  {
                    "key": "content",
                    "value": {
                      "task": "d522",
                      "variable": "return_data"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 1.45200984413454,
            "y": 1.44580152671756
          },
          "f815": {
            "name": "merge",
            "summary": "Merge action data",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "action",
                    "value": {
                      "task": "job",
                      "variable": "action",
                      "editable": true
                    }
                  },
                  {
                    "key": "file_path",
                    "value": {
                      "task": "f401",
                      "variable": "combinedStrings"
                    }
                  },
                  {
                    "key": "content",
                    "value": {
                      "task": "b93a",
                      "variable": "return_data"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 1.0377358490566,
            "y": 0.978625954198473
          },
          "33e4": {
            "name": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "commitActions",
                "item_to_push": "$var.f815.merged_object"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "name",
                "highlightString": "<span class='highlight-string'>push</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Push</span> Item to Array"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Push</span> item to a job variable array"
              }
            ],
            "groups": [],
            "x": 1.14438063986874,
            "y": 0.989312977099237
          },
          "9ed7": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "name_first_nested",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": 0.716738197424893,
            "y": 0.860859728506787
          },
          "89c4": {
            "name": "push",
            "canvasName": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "name_first_nested",
                "item_to_push": "$var.2450.return_data"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "description",
                "highlightString": "Push item to a <span class='highlight-string'>job</span> variable array"
              }
            ],
            "groups": [],
            "x": 0.854077253218884,
            "y": 0.863122171945701
          },
          "329c": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "name": "name_second_nested",
                "value": []
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "summary",
                "highlightString": "Create a <span class='highlight-string'>Job</span> Variable"
              },
              {
                "key": "description",
                "highlightString": "Create a new <span class='highlight-string'>Job</span> variable by Job ID and assign it a value."
              }
            ],
            "groups": [],
            "x": 1.23891273247496,
            "y": 1.61085972850679
          },
          "63ff": {
            "name": "push",
            "canvasName": "push",
            "summary": "Push Item to Array",
            "description": "Push item to a job variable array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "displayName": "WorkFlowEngine",
            "type": "operation",
            "variables": {
              "incoming": {
                "job_variable": "name_second_nested",
                "item_to_push": "$var.a433.return_data"
              },
              "outgoing": {
                "job_variable_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "description",
                "highlightString": "Push item to a <span class='highlight-string'>job</span> variable array"
              }
            ],
            "groups": [],
            "x": 1.35693848354793,
            "y": 1.61085972850679
          },
          "babe": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Merge action data",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "action",
                    "value": {
                      "task": "job",
                      "variable": "action",
                      "editable": true
                    }
                  },
                  {
                    "key": "file_path",
                    "value": {
                      "task": "ec3b",
                      "variable": "return_data"
                    }
                  },
                  {
                    "key": "content",
                    "value": {
                      "task": "7bf5",
                      "variable": "return_data"
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 0.494489346069067,
            "y": 0.724099099099099
          },
          "f54c": {
            "name": "modify",
            "canvasName": "modify",
            "summary": "Modify Data",
            "description": "Empty the old artifact array to save space.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "object_to_update": "$var.job.artifact",
                "query": "",
                "new_value": []
              },
              "outgoing": {
                "updated_object": "$var.job.artifact"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>modify</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Modify</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Modify</span> data"
              }
            ],
            "groups": [],
            "x": 0.4502325581395349,
            "y": 0.49019607843137253,
            "scheduled": false
          }
        },
        "transitions": {
          "1601": {},
          "2450": {
            "9ed7": {
              "type": "standard",
              "state": "success"
            }
          },
          "3697": {
            "f815": {
              "type": "standard",
              "state": "success"
            },
            "f131": {
              "type": "standard",
              "state": "failure"
            }
          },
          "4001": {
            "798a": {
              "type": "standard",
              "state": "failure"
            },
            "babe": {
              "type": "standard",
              "state": "success"
            }
          },
          "6433": {
            "4001": {
              "type": "standard",
              "state": "success"
            },
            "ec3b": {
              "type": "standard",
              "state": "success"
            },
            "7bf5": {
              "type": "standard",
              "state": "success"
            }
          },
          "7554": {
            "329c": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "fcfb": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "e24a": {
            "6433": {
              "type": "standard",
              "state": "loop"
            },
            "f54c": {
              "type": "standard",
              "state": "success"
            }
          },
          "fcfb": {
            "e24a": {
              "type": "standard",
              "state": "success"
            }
          },
          "30ff": {},
          "ec3b": {
            "4001": {
              "type": "standard",
              "state": "success"
            }
          },
          "7bf5": {
            "4001": {
              "type": "standard",
              "state": "success"
            }
          },
          "d8c5": {},
          "42ee": {},
          "798a": {
            "db0b": {
              "type": "standard",
              "state": "loop"
            }
          },
          "db0b": {
            "2450": {
              "type": "standard",
              "state": "success"
            },
            "b93a": {
              "type": "standard",
              "state": "success"
            },
            "80bf": {
              "type": "standard",
              "state": "success"
            }
          },
          "9e73": {},
          "b93a": {
            "80bf": {
              "type": "standard",
              "state": "success"
            }
          },
          "80bf": {
            "f401": {
              "type": "standard",
              "state": "success"
            }
          },
          "f401": {
            "3697": {
              "type": "standard",
              "state": "success"
            }
          },
          "f131": {
            "a433": {
              "type": "standard",
              "state": "loop"
            }
          },
          "a433": {
            "d522": {
              "type": "standard",
              "state": "success"
            }
          },
          "d522": {
            "7554": {
              "type": "standard",
              "state": "success"
            }
          },
          "57b9": {
            "6cdf": {
              "type": "standard",
              "state": "success"
            }
          },
          "6cdf": {
            "1601": {
              "type": "standard",
              "state": "success"
            }
          },
          "6a5b": {},
          "f815": {
            "33e4": {
              "type": "standard",
              "state": "success"
            }
          },
          "33e4": {},
          "974a": {},
          "30a4": {},
          "9ed7": {
            "89c4": {
              "type": "standard",
              "state": "success"
            }
          },
          "89c4": {
            "f401": {
              "type": "standard",
              "state": "success"
            }
          },
          "329c": {
            "63ff": {
              "type": "standard",
              "state": "success"
            }
          },
          "63ff": {
            "57b9": {
              "type": "standard",
              "state": "success"
            }
          },
          "babe": {
            "d8c5": {
              "type": "standard",
              "state": "success"
            }
          },
          "f54c": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "created": "2021-03-21T17:59:03.698Z",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "createdVersion": "5.29.14-2020.2.13",
        "last_updated": "2023-01-26T21:26:59.819Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "lastUpdatedVersion": "3.61.22-2021.2.100.0",
        "type": "automation",
        "description": null,
        "inputSchema": {
          "type": "object",
          "properties": {
            "artifact": {
              "type": "array"
            },
            "action": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "artifact",
            "action"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "artifact": {
              "type": [
                "array",
                "string",
                "boolean",
                "integer",
                "number",
                "object"
              ],
              "examples": [
                "updated item"
              ]
            },
            "action": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "commitActions": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "name_first_nested": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "name_second_nested": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          }
        },
        "canvasVersion": 1,
        "tags": [],
        "groups": [],
        "migrationVersion": 1
      }
    },
    {
      "type": "workflow",
      "data": {
        "type": "automation",
        "tasks": {
          "3196": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object Key",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": "$var.job.payLoad",
                "path": [
                  "branch"
                ],
                "value": "$var.job.branch"
              },
              "outgoing": {
                "object": "$var.job.payLoad"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>setObject</span>Key"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.4054848188050931,
            "y": 0.715042372881356,
            "scheduled": false
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0.15866797257590598,
            "y": 0.2510593220338983
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.7002938295788442,
            "y": 0.2510593220338983
          },
          "2e4d": {
            "name": "forEach",
            "canvasName": "forEach",
            "summary": "For Each Loop",
            "description": "Iterate over each item in an array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_array": "$var.job.artifact_array"
              },
              "outgoing": {
                "current_item": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>for</span><span class='highlight-string'>Each</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>For</span> <span class='highlight-string'>Each</span> Loop"
              },
              {
                "key": "description",
                "highlightString": "Iterate over <span class='highlight-string'>each</span> item in an array"
              }
            ],
            "groups": [],
            "x": 0.41332027424094026,
            "y": 0.2531779661016949,
            "scheduled": false
          },
          "3a1c": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "payLoad",
                "value": {
                  "message": "IAP Commit",
                  "content": "aGpmZGM=",
                  "branch": "branch"
                }
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>new</span><span class='highlight-string'>Variable</span>"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job <span class='highlight-string'>variable</span> by Job ID and assign it a value."
              },
              {
                "key": "summary",
                "highlightString": "Create a Job <span class='highlight-string'>Variable</span>"
              }
            ],
            "groups": [],
            "x": 0.41136141038197843,
            "y": 0.3919491525423729
          },
          "d4b5": {
            "name": "transformation",
            "canvasName": "transformation",
            "summary": "JSON Transformation",
            "description": "Perform a JSON Transformation using the JST library.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "tr_id": "605a0b9299ae1b00eb7c74e9",
                "variableMap": {
                  "inputObject": "$var.2e4d.current_item"
                },
                "options": {
                  "extractOutput": false
                }
              },
              "outgoing": {
                "action": null,
                "filePath": null,
                "content": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "description",
                "highlightString": "Perform a JSON Transformation using the <span class='highlight-string'>JST</span> library."
              }
            ],
            "groups": [],
            "x": 0.4103819784524976,
            "y": 0.4819915254237288,
            "task_name": "convertObjecttoString"
          },
          "e95f": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object Key",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": "$var.job.payLoad",
                "path": [
                  "content"
                ],
                "value": "$var.d4b5.content"
              },
              "outgoing": {
                "object": "$var.job.payLoad"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>setObject</span>Key"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.40744368266405484,
            "y": 0.590042372881356,
            "scheduled": false
          },
          "1b02": {
            "name": "putReposOwnerRepoContentsPath",
            "canvasName": "putReposOwnerRepoContentsPath",
            "summary": "Create a file.",
            "description": "Create a file.",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repo",
                "pathParam": "$var.d4b5.filePath",
                "body": "$var.job.payLoad",
                "adapter_id": "$var.job.adapter_id"
              },
              "outgoing": {
                "result": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>putReposOwnerRepoContentsPath</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.40940254652301666,
            "y": 0.847457627118644,
            "scheduled": false
          }
        },
        "transitions": {
          "3196": {
            "1b02": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "2e4d": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "2e4d": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            },
            "3a1c": {
              "type": "standard",
              "state": "loop"
            }
          },
          "3a1c": {
            "d4b5": {
              "type": "standard",
              "state": "success"
            }
          },
          "d4b5": {
            "e95f": {
              "type": "standard",
              "state": "success"
            }
          },
          "e95f": {
            "3196": {
              "type": "standard",
              "state": "success"
            }
          },
          "1b02": {}
        },
        "font_size": 12,
        "name": "Push Bundles to GitHub New Repo",
        "description": "",
        "last_updated": "2023-01-26T21:26:59.822Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "lastUpdatedVersion": "3.61.22-2021.2.100.0",
        "inputSchema": {
          "type": "object",
          "properties": {
            "branch": {
              "title": "value",
              "type": [
                "string",
                "number",
                "integer",
                "object",
                "array",
                "boolean"
              ],
              "examples": [
                {
                  "third": "last"
                }
              ]
            },
            "artifact_array": {
              "type": "array"
            },
            "owner": {
              "title": "owner",
              "type": "string"
            },
            "repo": {
              "title": "repo",
              "type": "string"
            },
            "adapter_id": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "branch",
            "artifact_array",
            "owner",
            "repo",
            "adapter_id"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "branch": {
              "title": "value",
              "type": [
                "string",
                "number",
                "integer",
                "object",
                "array",
                "boolean"
              ],
              "examples": [
                {
                  "third": "last"
                }
              ]
            },
            "artifact_array": {
              "type": "array"
            },
            "owner": {
              "title": "owner",
              "type": "string"
            },
            "repo": {
              "title": "repo",
              "type": "string"
            },
            "adapter_id": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "payLoad": {
              "title": "object",
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "first": {
                    "second": {
                      "third": "last"
                    }
                  }
                }
              ]
            }
          }
        },
        "created": "2021-03-23T18:03:42.468Z",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "createdVersion": "5.29.14-2020.2.13",
        "canvasVersion": 1,
        "tags": [],
        "groups": [],
        "migrationVersion": 1
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Push Bundles to GitHub Check OrgRepo",
        "type": "automation",
        "tasks": {
          "1096": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "failed",
                "value": false
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>new</span><span class='highlight-string'>Variable</span>"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job <span class='highlight-string'>variable</span> by Job ID and assign it a value."
              },
              {
                "key": "summary",
                "highlightString": "Create a Job <span class='highlight-string'>Variable</span>"
              }
            ],
            "groups": [],
            "x": 0.13333333333333333,
            "y": 0.5815677966101694
          },
          "1134": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "repo",
                "value": true
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>new</span><span class='highlight-string'>Variable</span>"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job <span class='highlight-string'>variable</span> by Job ID and assign it a value."
              },
              {
                "key": "summary",
                "highlightString": "Create a Job <span class='highlight-string'>Variable</span>"
              }
            ],
            "groups": [],
            "x": 1.1284313725490196,
            "y": 0.4735169491525424
          },
          "6363": {
            "name": "getOrgsOrgRepos",
            "canvasName": "getOrgsOrgRepos",
            "summary": "List repositories for the specified org.",
            "description": "List repositories for the specified org.",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "org": "$var.job.org",
                "type": "",
                "adapter_id": "$var.job.adapter_id"
              },
              "outgoing": {
                "result": null
              },
              "error": "",
              "decorators": []
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "get<span class='highlight-string'>Orgs</span>OrgRepos"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5163934426229508,
            "y": 0.6673728813559322,
            "scheduled": false
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0,
            "y": 0.5
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 0.9754901960784313,
            "y": 0.451271186440678
          },
          "7fa8": {
            "name": "getOrgsOrg",
            "canvasName": "getOrgsOrg",
            "summary": "Get an Organization.",
            "description": "Get an Organization.",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "org": "$var.job.org",
                "adapter_id": "$var.job.adapter_id"
              },
              "outgoing": {
                "result": null
              },
              "error": "$var.job.error",
              "decorators": []
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>get</span><span class='highlight-string'>Orgs</span>Org"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Get</span> an Organization."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Get</span> an Organization."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.33278688524590166,
            "y": 0.5264830508474576,
            "scheduled": false
          },
          "444a": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "repo",
                "value": false
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>new</span><span class='highlight-string'>Variable</span>"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job <span class='highlight-string'>variable</span> by Job ID and assign it a value."
              },
              {
                "key": "summary",
                "highlightString": "Create a Job <span class='highlight-string'>Variable</span>"
              }
            ],
            "groups": [],
            "x": 0.1411764705882353,
            "y": 0.4555084745762712
          },
          "24c0": {
            "name": "makeData",
            "canvasName": "makeData",
            "summary": "Convert input into a different data type",
            "description": "This task takes an input and converts it to a different data type. For example, converting a number into a string.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Tools",
            "variables": {
              "incoming": {
                "input": "response[*name=<!repo!>].id",
                "outputType": "string",
                "variables": "$var.fe5c.merged_object"
              },
              "outgoing": {
                "output": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>makeData</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.8401960784313726,
            "y": 0.6684322033898306,
            "scheduled": false
          },
          "fe5c": {
            "name": "merge",
            "canvasName": "merge",
            "summary": "Merge Data",
            "description": "Merge data into a single object",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_to_merge": [
                  {
                    "key": "repo",
                    "value": {
                      "task": "job",
                      "variable": "repoName",
                      "editable": true
                    }
                  }
                ]
              },
              "outgoing": {
                "merged_object": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>merge</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Merge</span> Data"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Merge</span> data into a single object"
              }
            ],
            "groups": [],
            "x": 0.6872549019607843,
            "y": 0.6641949152542372
          },
          "5d58": {
            "name": "query",
            "canvasName": "query",
            "summary": "Query Data Using 'json-query' Format",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "$var.24c0.output",
                "obj": "$var.6363.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1,
            "y": 0.6694915254237288,
            "scheduled": false
          },
          "d03": {
            "name": "arrayLength",
            "canvasName": "length",
            "summary": "Gets the length of an array.",
            "description": "Returns the number of elements in that array. The value is an unsigned, 32-bit integer  that is always numerically greater than the highest index in the array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Array",
            "variables": {
              "incoming": {
                "arr": "$var.5d58.return_data"
              },
              "outgoing": {
                "length": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>length</span>"
              },
              {
                "key": "summary",
                "highlightString": "Gets the <span class='highlight-string'>length</span> of an array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.1254901960784314,
            "y": 0.6917372881355932,
            "scheduled": false
          },
          "de12": {
            "name": "evaluation",
            "canvasName": "evaluation",
            "summary": "Run Evaluation Task",
            "description": "Run an evaluation",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "all_true_flag": false,
                "evaluation_groups": [
                  {
                    "all_true_flag": false,
                    "evaluations": [
                      {
                        "query": "",
                        "operand_1": {
                          "variable": "length",
                          "task": "d03"
                        },
                        "operator": "!=",
                        "operand_2": {
                          "variable": 0,
                          "task": "static"
                        }
                      }
                    ]
                  }
                ]
              },
              "outgoing": {
                "return_value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>eval</span>uation"
              },
              {
                "key": "summary",
                "highlightString": "Run <span class='highlight-string'>Eval</span>uation Task"
              },
              {
                "key": "description",
                "highlightString": "Run an <span class='highlight-string'>eval</span>uation"
              }
            ],
            "groups": [],
            "x": 1.031372549019608,
            "y": 0.573093220338983
          },
          "daea": {
            "name": "ViewData",
            "canvasName": "ViewData",
            "summary": "Organization not found",
            "description": "Displays a message and runtime data to an operator. This can be used to request a decision, or used for acknowledgement only.",
            "location": "Application",
            "app": "WorkFlowEngine",
            "displayName": "Tools",
            "type": "manual",
            "variables": {
              "incoming": {
                "header": "Error",
                "message": "",
                "body": "Organization Not Found. Try again?",
                "variables": {},
                "btn_success": "Try Again",
                "btn_failure": "End"
              },
              "outgoing": {},
              "error": ""
            },
            "view": "/workflow_engine/task/ViewData",
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>View</span>Data"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>View</span> Data"
              }
            ],
            "groups": [],
            "x": 0.33431372549019606,
            "y": 0.3516949152542373,
            "scheduled": false
          },
          "fc71": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "failed",
                "value": true
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>new</span><span class='highlight-string'>Variable</span>"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job <span class='highlight-string'>variable</span> by Job ID and assign it a value."
              },
              {
                "key": "summary",
                "highlightString": "Create a Job <span class='highlight-string'>Variable</span>"
              }
            ],
            "groups": [],
            "x": 0.5431372549019607,
            "y": 0.3622881355932203
          }
        },
        "transitions": {
          "1096": {
            "7fa8": {
              "type": "standard",
              "state": "success"
            }
          },
          "1134": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "6363": {
            "fe5c": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "1096": {
              "type": "standard",
              "state": "success"
            },
            "444a": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "7fa8": {
            "6363": {
              "type": "standard",
              "state": "success"
            },
            "daea": {
              "type": "standard",
              "state": "error"
            }
          },
          "444a": {
            "7fa8": {
              "type": "standard",
              "state": "success"
            }
          },
          "2a69": {},
          "24c0": {
            "5d58": {
              "type": "standard",
              "state": "success"
            }
          },
          "fe5c": {
            "24c0": {
              "type": "standard",
              "state": "success"
            }
          },
          "5d58": {
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            },
            "d03": {
              "type": "standard",
              "state": "success"
            }
          },
          "d03": {
            "de12": {
              "type": "standard",
              "state": "success"
            }
          },
          "de12": {
            "1134": {
              "type": "standard",
              "state": "success"
            },
            "workflow_end": {
              "type": "standard",
              "state": "failure"
            }
          },
          "daea": {
            "7fa8": {
              "type": "revert",
              "state": "success"
            },
            "fc71": {
              "type": "standard",
              "state": "failure"
            }
          },
          "fc71": {
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "last_updated": "2023-01-26T21:26:59.832Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "lastUpdatedVersion": "3.61.22-2021.2.100.0",
        "inputSchema": {
          "type": "object",
          "properties": {
            "org": {
              "title": "org",
              "type": "string"
            },
            "adapter_id": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "repoName": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "org",
            "adapter_id",
            "repoName"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "org": {
              "title": "org",
              "type": "string"
            },
            "adapter_id": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "repoName": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "failed": {
              "type": "boolean"
            },
            "repo": {
              "type": "boolean"
            },
            "error": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          }
        },
        "created": "2021-04-08T01:54:22.731Z",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "createdVersion": "5.29.14-2020.2.17",
        "canvasVersion": 1,
        "tags": [],
        "groups": [],
        "migrationVersion": 1
      }
    },
    {
      "type": "workflow",
      "data": {
        "name": "Push Bundle to GitHub Purge Branch",
        "type": "automation",
        "tasks": {
          "944": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object sha",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": "$var.job.deletepayload",
                "path": [
                  "sha"
                ],
                "value": "$var.ba1d.return_data"
              },
              "outgoing": {
                "object": "$var.job.deletepayload"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>set</span><span class='highlight-string'>Object</span>Key"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Set</span> <span class='highlight-string'>Object</span> Key"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Set</span> an <span class='highlight-string'>object</span> key"
              },
              {
                "key": "displayName",
                "highlightString": "<span class='highlight-string'>Object</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.2934426229508196,
            "y": 1.2627118644067796,
            "scheduled": false
          },
          "8759": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object Key",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": "$var.job.deletepayload",
                "path": [
                  "sha"
                ],
                "value": "$var.883f.return_data"
              },
              "outgoing": {
                "object": "$var.job.deletepayload"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>set</span><span class='highlight-string'>Object</span>Key"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Set</span> <span class='highlight-string'>Object</span> Key"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Set</span> an <span class='highlight-string'>object</span> key"
              },
              {
                "key": "displayName",
                "highlightString": "<span class='highlight-string'>Object</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.6221311475409836,
            "y": 0.8601694915254238,
            "scheduled": false
          },
          "workflow_start": {
            "name": "workflow_start",
            "groups": [],
            "x": 0.040983606557377046,
            "y": 0.4650423728813559
          },
          "workflow_end": {
            "name": "workflow_end",
            "groups": [],
            "x": 1.1057377049180328,
            "y": 0.4502118644067797
          },
          "e65c": {
            "name": "getReposOwnerRepoContentsPath",
            "canvasName": "getReposOwnerRepoContentsPath",
            "summary": "Get contents.\nThis method returns the contents of a file or directory in a repository.\nFiles and symlinks support a custom media type for getting the raw content.\nDirectories and submodules do not support custom media types.\nNote: This API supports files up to 1 megabyte in size.\nHere can be many outcomes. For details see \"http://developer.github.com/v3/repos/contents/\"",
            "description": "Get contents.\nThis method returns the contents of a file or directory in a repository.\nFiles and symlinks support a custom media type for getting the raw content.\nDirectories and submodules do not support custom media types.\nNote: This API supports files up to 1 megabyte in size.\nHere can be many outcomes. For details see \"http://developer.github.com/v3/repos/contents/\"",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repo",
                "pathParam": "$var.job.pathParam",
                "pathParamQuery": "",
                "ref": "$var.job.branch",
                "adapter_id": "$var.job.adapter_id"
              },
              "outgoing": {
                "result": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>getReposOwnerRepoContentsPath</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5737704918032787,
            "y": 0.4597457627118644,
            "scheduled": false
          },
          "62ff": {
            "name": "query",
            "canvasName": "query",
            "summary": "Get Bundles array",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response",
                "obj": "$var.e65c.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.8672131147540983,
            "y": 0.4608050847457627,
            "scheduled": false
          },
          "be3f": {
            "name": "forEach",
            "canvasName": "forEach",
            "summary": "For Each Loop",
            "description": "Iterate over each item in an array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_array": "$var.62ff.return_data"
              },
              "outgoing": {
                "current_item": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>for</span><span class='highlight-string'>Each</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>For</span> <span class='highlight-string'>Each</span> Loop"
              },
              {
                "key": "description",
                "highlightString": "Iterate over <span class='highlight-string'>each</span> item in an array"
              }
            ],
            "groups": [],
            "x": 0.9926229508196721,
            "y": 0.4555084745762712,
            "scheduled": false
          },
          "ac7a": {
            "name": "getReposOwnerRepoGitTreesShaCode",
            "canvasName": "getReposOwnerRepoGitTreesShaCode",
            "summary": "Get a Tree.",
            "description": "Get a Tree.",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repo",
                "shaCode": "$var.3d3e.return_data",
                "recursive": "",
                "adapter_id": "$var.job.adapter_id"
              },
              "outgoing": {
                "result": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "getReposOwnerRepoGit<span class='highlight-string'>Tree</span>sShaCode"
              },
              {
                "key": "summary",
                "highlightString": "Get a <span class='highlight-string'>Tree</span>."
              },
              {
                "key": "description",
                "highlightString": "Get a <span class='highlight-string'>Tree</span>."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.9901639344262295,
            "y": 0.746822033898305,
            "scheduled": false
          },
          "3d3e": {
            "name": "query",
            "canvasName": "query",
            "summary": "Get Sha code",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "sha",
                "obj": "$var.be3f.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.9811475409836066,
            "y": 0.576271186440678,
            "scheduled": false
          },
          "1c5f": {
            "name": "query",
            "canvasName": "query",
            "summary": "Get Tree Array",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.tree",
                "obj": "$var.ac7a.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.980327868852459,
            "y": 0.8580508474576272,
            "scheduled": false
          },
          "87c8": {
            "name": "query",
            "canvasName": "query",
            "summary": "getFilePath",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "pathParam",
                "obj": "$var.be3f.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.989344262295082,
            "y": 0.6419491525423728,
            "scheduled": false
          },
          "8bec": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Create File Path 2",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "str": "$var.8abe.combinedStrings",
                "stringN": "$var.4b70.return_data"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.1508196721311474,
            "y": 1.1260593220338984,
            "scheduled": false
          },
          "8abe": {
            "name": "stringConcat",
            "canvasName": "concat",
            "summary": "Create File Path 1",
            "description": "Concatenates a string with a second string(s). The second parameter can be a string or array.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "String",
            "variables": {
              "incoming": {
                "str": "$var.87c8.return_data",
                "stringN": "/"
              },
              "outgoing": {
                "combinedStrings": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>concat</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Concat</span>enates strings together."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Concat</span>enates a string with a second string(s). The second parameter can be a string or array."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.1655737704918032,
            "y": 0.9872881355932204,
            "scheduled": false
          },
          "1b1e": {
            "name": "forEach",
            "canvasName": "forEach",
            "summary": "For Each Loop file",
            "description": "Iterate over each item in an array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_array": "$var.1c5f.return_data"
              },
              "outgoing": {
                "current_item": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>for</span><span class='highlight-string'>Each</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>For</span> <span class='highlight-string'>Each</span> Loop"
              },
              {
                "key": "description",
                "highlightString": "Iterate over <span class='highlight-string'>each</span> item in an array"
              }
            ],
            "groups": [],
            "x": 1.1672131147540983,
            "y": 0.8389830508474576,
            "scheduled": false
          },
          "ba1d": {
            "name": "query",
            "canvasName": "query",
            "summary": "getFileSha",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "sha",
                "obj": "$var.1b1e.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.2877049180327869,
            "y": 1.1260593220338984,
            "scheduled": false
          },
          "4b70": {
            "name": "query",
            "canvasName": "query",
            "summary": "get Name",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "path",
                "obj": "$var.1b1e.current_item"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 1.289344262295082,
            "y": 0.9978813559322034,
            "scheduled": false
          },
          "2e6d": {
            "name": "deleteReposOwnerRepoContentsPath",
            "canvasName": "deleteReposOwnerRepoContentsPath",
            "summary": "Delete a file.\nThis method deletes a file in a repository.",
            "description": "Delete a file.\nThis method deletes a file in a repository.",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repo",
                "pathParam": "$var.8bec.combinedStrings",
                "body": "$var.job.deletepayload",
                "adapter_id": "$var.job.adapter_id"
              },
              "outgoing": {
                "result": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>delete</span>ReposOwnerRepoContentsPath"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Delete</span> a file.\nThis method deletes a file in a repository."
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Delete</span> a file.\nThis method deletes a file in a repository."
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.6344262295081968,
            "y": 1.2383474576271187,
            "scheduled": false
          },
          "dd00": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "deletepayload",
                "value": {
                  "message": "Purging Files for new Commit",
                  "sha": "sha",
                  "branch": "testing"
                }
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>new</span><span class='highlight-string'>Variable</span>"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job <span class='highlight-string'>variable</span> by Job ID and assign it a value."
              },
              {
                "key": "summary",
                "highlightString": "Create a Job <span class='highlight-string'>Variable</span>"
              }
            ],
            "groups": [],
            "x": 1.1483606557377048,
            "y": 1.2669491525423728
          },
          "c5cf": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object branch",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": "$var.job.deletepayload",
                "path": [
                  "branch"
                ],
                "value": "$var.job.branch"
              },
              "outgoing": {
                "object": "$var.job.deletepayload"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>set</span>ObjectKey"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Set</span> Object Key"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Set</span> an object key"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 1.4065573770491804,
            "y": 1.24364406779661,
            "scheduled": false
          },
          "d5de": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "Files",
                "value": [
                  ".github/workflows/action.yml",
                  "package.json",
                  "manifest.json",
                  "README.md",
                  "LICENSE",
                  "scripts/generate.js",
                  "scripts/commit.sh",
                  "artifact.json"
                ]
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>new</span><span class='highlight-string'>Variable</span>"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job <span class='highlight-string'>variable</span> by Job ID and assign it a value."
              },
              {
                "key": "summary",
                "highlightString": "Create a Job <span class='highlight-string'>Variable</span>"
              }
            ],
            "groups": [],
            "x": 0.13442622950819672,
            "y": 0.4629237288135593
          },
          "d09d": {
            "name": "forEach",
            "canvasName": "forEach",
            "summary": "For Each Loop Files",
            "description": "Iterate over each item in an array",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "data_array": "$var.job.Files"
              },
              "outgoing": {
                "current_item": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>for</span><span class='highlight-string'>Each</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>For</span> <span class='highlight-string'>Each</span> Loop"
              },
              {
                "key": "description",
                "highlightString": "Iterate over <span class='highlight-string'>each</span> item in an array"
              }
            ],
            "groups": [],
            "x": 0.2565573770491803,
            "y": 0.4608050847457627,
            "scheduled": false
          },
          "c7a": {
            "name": "newVariable",
            "canvasName": "newVariable",
            "summary": "Create a Job Variable",
            "description": "Create a new Job variable by Job ID and assign it a value.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "name": "deletepayload",
                "value": {
                  "message": "Purging Files for new Commit",
                  "sha": "sha",
                  "branch": "testing"
                }
              },
              "outgoing": {
                "value": null
              }
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>new</span><span class='highlight-string'>Variable</span>"
              },
              {
                "key": "description",
                "highlightString": "Create a <span class='highlight-string'>new</span> Job <span class='highlight-string'>variable</span> by Job ID and assign it a value."
              },
              {
                "key": "summary",
                "highlightString": "Create a Job <span class='highlight-string'>Variable</span>"
              }
            ],
            "groups": [],
            "x": 0.2532786885245902,
            "y": 0.6694915254237288
          },
          "d1ef": {
            "name": "setObjectKey",
            "canvasName": "setObjectKey",
            "summary": "Set Object Key",
            "description": "Set an object key",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "automatic",
            "displayName": "Object",
            "variables": {
              "incoming": {
                "obj": "$var.job.deletepayload",
                "path": [
                  "branch"
                ],
                "value": "$var.job.branch"
              },
              "outgoing": {
                "object": "$var.job.deletepayload"
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>set</span><span class='highlight-string'>Object</span>Key"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Set</span> <span class='highlight-string'>Object</span> Key"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Set</span> an <span class='highlight-string'>object</span> key"
              },
              {
                "key": "displayName",
                "highlightString": "<span class='highlight-string'>Object</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.6163934426229508,
            "y": 1.007415254237288,
            "scheduled": false
          },
          "2dfa": {
            "name": "getReposOwnerRepoContentsPath",
            "canvasName": "getReposOwnerRepoContentsPath",
            "summary": "Get contents.\nThis method returns the contents of a file or directory in a repository.\nFiles and symlinks support a custom media type for getting the raw content.\nDirectories and submodules do not support custom media types.\nNote: This API supports files up to 1 megabyte in size.\nHere can be many outcomes. For details see \"http://developer.github.com/v3/repos/contents/\"",
            "description": "Get contents.\nThis method returns the contents of a file or directory in a repository.\nFiles and symlinks support a custom media type for getting the raw content.\nDirectories and submodules do not support custom media types.\nNote: This API supports files up to 1 megabyte in size.\nHere can be many outcomes. For details see \"http://developer.github.com/v3/repos/contents/\"",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repo",
                "pathParam": "$var.d09d.current_item",
                "pathParamQuery": "",
                "ref": "$var.job.branch",
                "adapter_id": "$var.job.adapter_id"
              },
              "outgoing": {
                "result": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>getReposOwnerRepoContentsPath</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.5327868852459017,
            "y": 0.6779661016949152,
            "scheduled": false
          },
          "4c37": {
            "name": "deleteReposOwnerRepoContentsPath",
            "canvasName": "deleteReposOwnerRepoContentsPath",
            "summary": "Delete a file.\nThis method deletes a file in a repository.",
            "description": "Delete a file.\nThis method deletes a file in a repository.",
            "location": "Adapter",
            "locationType": "GitHub",
            "app": "GitHub",
            "type": "automatic",
            "displayName": "GitHub",
            "variables": {
              "incoming": {
                "owner": "$var.job.owner",
                "repo": "$var.job.repo",
                "pathParam": "$var.d09d.current_item",
                "body": "$var.job.deletepayload",
                "adapter_id": "$var.job.adapter_id"
              },
              "outgoing": {
                "result": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>deleteReposOwnerRepoContentsPath</span>"
              }
            ],
            "groups": [],
            "actor": "Pronghorn",
            "x": 0.6172131147540983,
            "y": 1.1557203389830508,
            "scheduled": false
          },
          "883f": {
            "name": "query",
            "canvasName": "query",
            "summary": "get Sha",
            "description": "Query data using a dot/bracket notation string and a matching key/value pair.",
            "location": "Application",
            "locationType": null,
            "app": "WorkFlowEngine",
            "type": "operation",
            "displayName": "WorkFlowEngine",
            "variables": {
              "incoming": {
                "pass_on_null": false,
                "query": "response.sha",
                "obj": "$var.2dfa.result"
              },
              "outgoing": {
                "return_data": null
              },
              "error": ""
            },
            "deprecated": false,
            "matched": [
              {
                "key": "canvasName",
                "highlightString": "<span class='highlight-string'>query</span>"
              },
              {
                "key": "summary",
                "highlightString": "<span class='highlight-string'>Query</span> Data Using 'json-query' Format"
              },
              {
                "key": "description",
                "highlightString": "<span class='highlight-string'>Query</span> data using a dot/bracket notation string and a matching key/value pair."
              }
            ],
            "groups": [],
            "x": 0.5327868852459017,
            "y": 0.8559322033898306,
            "scheduled": false
          }
        },
        "transitions": {
          "944": {
            "c5cf": {
              "type": "standard",
              "state": "success"
            }
          },
          "8759": {
            "d1ef": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_start": {
            "d5de": {
              "type": "standard",
              "state": "success"
            }
          },
          "workflow_end": {},
          "e65c": {
            "62ff": {
              "type": "standard",
              "state": "success"
            }
          },
          "62ff": {
            "be3f": {
              "type": "standard",
              "state": "success"
            }
          },
          "be3f": {
            "3d3e": {
              "type": "standard",
              "state": "loop"
            },
            "workflow_end": {
              "type": "standard",
              "state": "success"
            }
          },
          "ac7a": {
            "1c5f": {
              "type": "standard",
              "state": "success"
            }
          },
          "3d3e": {
            "87c8": {
              "type": "standard",
              "state": "success"
            }
          },
          "1c5f": {
            "1b1e": {
              "type": "standard",
              "state": "success"
            }
          },
          "87c8": {
            "ac7a": {
              "type": "standard",
              "state": "success"
            }
          },
          "8bec": {
            "ba1d": {
              "type": "standard",
              "state": "success"
            }
          },
          "8abe": {
            "4b70": {
              "type": "standard",
              "state": "success"
            }
          },
          "1b1e": {
            "8abe": {
              "type": "standard",
              "state": "loop"
            }
          },
          "ba1d": {
            "dd00": {
              "type": "standard",
              "state": "success"
            }
          },
          "4b70": {
            "8bec": {
              "type": "standard",
              "state": "success"
            }
          },
          "2e6d": {},
          "dd00": {
            "944": {
              "type": "standard",
              "state": "success"
            }
          },
          "a0e8": {},
          "c5cf": {
            "2e6d": {
              "type": "standard",
              "state": "success"
            }
          },
          "d5de": {
            "d09d": {
              "type": "standard",
              "state": "success"
            }
          },
          "d09d": {
            "c7a": {
              "type": "standard",
              "state": "loop"
            },
            "e65c": {
              "type": "standard",
              "state": "success"
            }
          },
          "c7a": {
            "2dfa": {
              "type": "standard",
              "state": "success"
            }
          },
          "d1ef": {
            "4c37": {
              "type": "standard",
              "state": "success"
            }
          },
          "2dfa": {
            "883f": {
              "type": "standard",
              "state": "success"
            }
          },
          "4c37": {},
          "883f": {
            "8759": {
              "type": "standard",
              "state": "success"
            }
          }
        },
        "font_size": 12,
        "last_updated": "2023-01-26T21:26:59.835Z",
        "last_updated_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "lastUpdatedVersion": "3.61.22-2021.2.100.0",
        "inputSchema": {
          "type": "object",
          "properties": {
            "owner": {
              "title": "owner",
              "type": "string"
            },
            "repo": {
              "title": "repo",
              "type": "string"
            },
            "pathParam": {
              "title": "pathParam",
              "type": "string"
            },
            "branch": {
              "title": "ref",
              "type": "string"
            },
            "adapter_id": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            }
          },
          "required": [
            "owner",
            "repo",
            "pathParam",
            "branch",
            "adapter_id"
          ]
        },
        "outputSchema": {
          "type": "object",
          "properties": {
            "owner": {
              "title": "owner",
              "type": "string"
            },
            "repo": {
              "title": "repo",
              "type": "string"
            },
            "pathParam": {
              "title": "pathParam",
              "type": "string"
            },
            "branch": {
              "title": "ref",
              "type": "string"
            },
            "adapter_id": {
              "type": [
                "array",
                "boolean",
                "null",
                "number",
                "object",
                "string"
              ]
            },
            "_id": {
              "type": "string",
              "pattern": "^[0-9a-f]{24}$"
            },
            "initiator": {
              "type": "string"
            },
            "deletepayload": {
              "title": "object",
              "type": "object",
              "properties": {},
              "examples": [
                {
                  "first": {
                    "second": {
                      "third": "last"
                    }
                  }
                }
              ]
            },
            "Files": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "created": "2021-03-23T18:52:41.283Z",
        "created_by": {
          "provenance": "local_aaa",
          "username": "admin@pronghorn",
          "firstname": "admin",
          "inactive": false
        },
        "createdVersion": "5.29.14-2020.2.13",
        "canvasVersion": 1,
        "tags": [],
        "groups": [],
        "migrationVersion": 1
      }
    },
    {
      "type": "json-forms",
      "data": {
        "id": "606b39aecd3a32009690c1b6",
        "created": "2021-03-08T18:35:50.577Z",
        "createdBy": "admin@pronghorn",
        "lastUpdated": "2023-01-26T21:27:00.453Z",
        "lastUpdatedBy": "admin@pronghorn",
        "name": "Push Bundles to GitHub",
        "description": "",
        "struct": {
          "nodeId": "9251ce6e-db72-4080-b3f1-86b340ba1add",
          "type": "array",
          "items": [
            {
              "nodeId": "505987cd-d6fc-4302-a2d0-0b6d68eec044",
              "type": "object",
              "description": "",
              "items": [
                {
                  "nodeId": "12d9395e-cbed-44f7-af87-c392edfd7eb1",
                  "type": "string",
                  "title": "GitHub Adapter Name",
                  "description": "Select an adapter",
                  "placeholder": "Select an item",
                  "required": true,
                  "enum": [],
                  "binding": true,
                  "rel": "collection",
                  "targetPointer": "/enum",
                  "base": "/health",
                  "href": "/adapters?equalsField=package_id&equals=@itentialopensource/adapter-GitHub",
                  "method": "GET",
                  "sourcePointer": "/results",
                  "sourceKeyPointer": "/id"
                },
                {
                  "nodeId": "caf191bb-2851-44b0-92f1-9aa83413566c",
                  "type": "string",
                  "title": "GitHub Repository Name",
                  "description": "Project name for the GitHub repository.",
                  "placeholder": "Enter text",
                  "required": true
                },
                {
                  "nodeId": "4ddcbb53-e512-4ef1-9753-108d416ca3c4",
                  "type": "boolean",
                  "title": "Make Repo Private",
                  "description": "Check the box if the repository is to be made private",
                  "default": false,
                  "enum": [
                    {
                      "id": "f9d83a86-9a44-4ee5-882d-6e5f72082363",
                      "value": true
                    },
                    {
                      "id": "2539d65f-6c6d-4527-9f0f-1fa5f084822a",
                      "value": false
                    }
                  ]
                },
                {
                  "nodeId": "e26ab28d-a71a-4d5c-819c-ab5263f38716",
                  "type": "string",
                  "title": "GitHub Organization Name",
                  "description": "",
                  "placeholder": "Enter text",
                  "required": true,
                  "readOnly": false,
                  "binding": false,
                  "rel": "item",
                  "targetPointer": "/default"
                },
                {
                  "nodeId": "fd106739-664a-4d51-a48b-74598d17c545",
                  "type": "boolean",
                  "title": "Re-Discover Artifact",
                  "description": "Please check this box in case you've added or removed any IAP component (child workflow/form/template/etc.)",
                  "default": false,
                  "enum": [
                    {
                      "id": "bec790e9-1ce4-497a-a3c9-9bcbb6d44e75",
                      "value": true
                    },
                    {
                      "id": "5e3ec6ca-675e-4393-a5a7-d2d65bf355ab",
                      "value": false
                    }
                  ]
                },
                {
                  "nodeId": "ca5a34e8-8989-403a-800d-b17f713a49b5",
                  "type": "string",
                  "title": "Artifact",
                  "description": "Desired artifact to upload to GitHub",
                  "placeholder": "Select an Artifact",
                  "required": true,
                  "enum": [],
                  "binding": true,
                  "rel": "collection",
                  "targetPointer": "/enum",
                  "base": "/prebuilts",
                  "href": "/ ",
                  "method": "GET",
                  "sourcePointer": "/results",
                  "sourceKeyPointer": "/name",
                  "originalHref": "/:id"
                },
                {
                  "nodeId": "76f14d91-05ba-41a2-aa14-c6bfbb07e7a3",
                  "type": "object",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "293a11d4-b9fd-4bb1-82e3-021bec9c9743",
                      "type": "string",
                      "title": "Pull Request Type",
                      "description": "Type of pull request (patch/minor/major)",
                      "placeholder": "Enter text",
                      "required": true,
                      "enum": [
                        {
                          "id": "3f87d31f-6465-4701-b0d3-7aa3b2e32f30",
                          "value": "patch"
                        },
                        {
                          "id": "74ea8535-8cdd-44fe-bfae-8b28717e86f1",
                          "value": "minor"
                        },
                        {
                          "id": "572e2ebe-8b19-43c3-9c55-8cf1fc723347",
                          "value": "major"
                        }
                      ],
                      "binding": false,
                      "rel": "collection",
                      "targetPointer": "/enum"
                    },
                    {
                      "nodeId": "36d63b0b-bb1a-4f31-87ee-5e23bac03ae1",
                      "type": "string",
                      "title": "Commit Message",
                      "description": "The message to put in with the commit",
                      "placeholder": "Enter text",
                      "required": true
                    },
                    {
                      "nodeId": "cb55002f-3061-4bf0-a8f2-eaac5ebf8adb",
                      "type": "string",
                      "title": "Target Branch",
                      "description": "The branch desired for merging into the pull request",
                      "placeholder": "Enter text",
                      "required": true
                    }
                  ],
                  "title": "For Existing GitHub Projects"
                }
              ],
              "title": "Check In Artifact"
            }
          ]
        },
        "schema": {
          "title": "Push Bundles to GitHub",
          "description": "",
          "type": "object",
          "required": [],
          "properties": {
            "checkInArtifact": {
              "type": "object",
              "title": "Check In Artifact",
              "description": "",
              "required": [
                "gitHubAdapterName",
                "gitHubRepositoryName",
                "gitHubOrganizationName",
                "artifact"
              ],
              "properties": {
                "gitHubAdapterName": {
                  "type": "string",
                  "title": "GitHub Adapter Name",
                  "_id": "/properties/checkInArtifact/properties/gitHubAdapterName",
                  "description": "Select an adapter",
                  "enum": []
                },
                "gitHubRepositoryName": {
                  "type": "string",
                  "title": "GitHub Repository Name",
                  "_id": "/properties/checkInArtifact/properties/gitHubRepositoryName",
                  "description": "Project name for the GitHub repository."
                },
                "makeRepoPrivate": {
                  "type": "boolean",
                  "title": "Make Repo Private",
                  "_id": "/properties/checkInArtifact/properties/makeRepoPrivate",
                  "description": "Check the box if the repository is to be made private",
                  "default": false,
                  "enum": [
                    true,
                    false
                  ]
                },
                "gitHubOrganizationName": {
                  "type": "string",
                  "title": "GitHub Organization Name",
                  "_id": "/properties/checkInArtifact/properties/gitHubOrganizationName",
                  "description": ""
                },
                "reDiscoverArtifact": {
                  "type": "boolean",
                  "title": "Re-Discover Artifact",
                  "_id": "/properties/checkInArtifact/properties/reDiscoverArtifact",
                  "description": "Please check this box in case you've added or removed any IAP component (child workflow/form/template/etc.)",
                  "default": false,
                  "enum": [
                    true,
                    false
                  ]
                },
                "artifact": {
                  "type": "string",
                  "title": "Artifact",
                  "_id": "/properties/checkInArtifact/properties/artifact",
                  "description": "Desired artifact to upload to GitHub",
                  "enum": []
                },
                "forExistingGitHubProjects": {
                  "type": "object",
                  "title": "For Existing GitHub Projects",
                  "description": "",
                  "required": [
                    "pullRequestType",
                    "commitMessage",
                    "targetBranch"
                  ],
                  "properties": {
                    "pullRequestType": {
                      "type": "string",
                      "title": "Pull Request Type",
                      "_id": "/properties/checkInArtifact/properties/forExistingGitHubProjects/properties/pullRequestType",
                      "description": "Type of pull request (patch/minor/major)",
                      "enum": [
                        "patch",
                        "minor",
                        "major"
                      ]
                    },
                    "commitMessage": {
                      "type": "string",
                      "title": "Commit Message",
                      "_id": "/properties/checkInArtifact/properties/forExistingGitHubProjects/properties/commitMessage",
                      "description": "The message to put in with the commit"
                    },
                    "targetBranch": {
                      "type": "string",
                      "title": "Target Branch",
                      "_id": "/properties/checkInArtifact/properties/forExistingGitHubProjects/properties/targetBranch",
                      "description": "The branch desired for merging into the pull request"
                    }
                  }
                }
              }
            }
          }
        },
        "uiSchema": {
          "checkInArtifact": {
            "ui:collapseByDefault": false,
            "gitHubAdapterName": {
              "ui:placeholder": "Select an item"
            },
            "gitHubRepositoryName": {
              "ui:placeholder": "Enter text"
            },
            "gitHubOrganizationName": {
              "ui:placeholder": "Enter text"
            },
            "artifact": {
              "ui:placeholder": "Select an Artifact"
            },
            "forExistingGitHubProjects": {
              "ui:collapseByDefault": false,
              "pullRequestType": {
                "ui:placeholder": "Enter text"
              },
              "commitMessage": {
                "ui:placeholder": "Enter text"
              },
              "targetBranch": {
                "ui:placeholder": "Enter text"
              }
            }
          }
        },
        "bindingSchema": {
          "properties": {
            "checkInArtifact": {
              "properties": {
                "gitHubAdapterName": {
                  "binding:method": "GET",
                  "binding:link": {
                    "$ref": "/links",
                    "rel": "collection"
                  },
                  "binding:target": {
                    "propertyPointer": "/enum"
                  },
                  "binding:hyperSchema": {
                    "type": "object",
                    "base": "/health",
                    "links": [
                      {
                        "rel": "collection",
                        "href": "/adapters?equalsField=package_id&equals=@itentialopensource/adapter-GitHub",
                        "targetMediaType": "application/json",
                        "targetSchema": {
                          "$ref": "#"
                        },
                        "variables": []
                      }
                    ]
                  },
                  "binding:source": {
                    "propertyPointer": "/results",
                    "keyPointer": "/id"
                  }
                },
                "artifact": {
                  "binding:method": "GET",
                  "binding:link": {
                    "$ref": "/links",
                    "rel": "collection"
                  },
                  "binding:target": {
                    "propertyPointer": "/enum"
                  },
                  "binding:hyperSchema": {
                    "type": "object",
                    "base": "/prebuilts",
                    "links": [
                      {
                        "rel": "collection",
                        "href": "/ ",
                        "targetMediaType": "application/json",
                        "targetSchema": {
                          "$ref": "#"
                        },
                        "variables": []
                      }
                    ]
                  },
                  "binding:source": {
                    "propertyPointer": "/results",
                    "keyPointer": "/name"
                  }
                },
                "forExistingGitHubProjects": {
                  "properties": {}
                }
              }
            }
          }
        },
        "validationSchema": {
          "checkInArtifact": {
            "forExistingGitHubProjects": {}
          }
        },
        "version": "2020.1"
      }
    },
    {
      "type": "json-forms",
      "data": {
        "id": "620ec34b8cb5a700f23019ad",
        "created": "2022-02-17T21:51:07.149Z",
        "createdBy": "admin@pronghorn",
        "lastUpdated": "2023-01-26T21:27:00.464Z",
        "lastUpdatedBy": "admin@pronghorn",
        "name": "Re-Discovery Components Form",
        "description": "This form allows a user to verify that the 'discovered components' contain everything that is required for their particular prebuilt. If there are extra/missing components, the user can edit the list accordingly.",
        "struct": {
          "nodeId": "c8e815ab-cb7d-4869-908d-f578ba61bf63",
          "type": "array",
          "items": [
            {
              "nodeId": "ce1da193-5148-4ee8-988b-efc78b75f279",
              "type": "object",
              "description": "",
              "items": [
                {
                  "nodeId": "61748fab-3597-403e-987d-a9ff85462054",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "23b16e1f-2fe0-442d-ac68-7b1d8dba933a",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "Enter text",
                      "required": true,
                      "readOnly": false,
                      "binding": false,
                      "rel": "item",
                      "targetPointer": "/default"
                    }
                  ],
                  "title": "Operations Automations"
                },
                {
                  "nodeId": "c5608cde-447e-4f7d-b257-e3377f9ba1d4",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "07df38bf-33cb-43d7-91a4-98581b42da8c",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Catalog Automations"
                },
                {
                  "nodeId": "b2cfbfa0-a0c4-46f5-9c46-7e2c315e22b0",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "f3ef6d1d-4ba1-48d4-8224-b624a0f7a7d0",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Workflows"
                },
                {
                  "nodeId": "1920615b-2822-40f5-b905-eae57689f7a9",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "e5193f31-8763-499a-9113-33a5956ebda4",
                      "type": "string",
                      "widget": "textarea",
                      "title": "Id",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    },
                    {
                      "nodeId": "c96bde0a-7d74-4914-9958-af132fb945c7",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "Enter text",
                      "required": false,
                      "readOnly": false,
                      "binding": false,
                      "rel": "item",
                      "targetPointer": "/default"
                    }
                  ],
                  "title": "Transformations"
                },
                {
                  "nodeId": "f221055a-6a68-4a4a-a472-65cda13d0845",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "a4c14093-0170-4a75-9303-6154e34cb607",
                      "type": "string",
                      "widget": "textarea",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "JSON Forms"
                },
                {
                  "nodeId": "130de3e1-1188-42d8-bf35-39b5a53bf5d5",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "7bb94765-e6ea-4369-b856-45c4a58734cf",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Forms"
                },
                {
                  "nodeId": "7f2e64a4-5498-40c8-82d0-c48eaa9b481a",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "a3d138aa-4a83-4c59-b23a-29331e30339b",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Templates"
                },
                {
                  "nodeId": "ccb287ba-b566-4cbd-b56e-a171b3334027",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "fdc26a05-e9eb-489b-973a-828f06cbf663",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Command Templates"
                },
                {
                  "nodeId": "b7d81941-8b4f-47ac-aafd-27e37d41ddb7",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "2c341f42-5f69-4f95-ae8c-1c87e37e6ea4",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Analytic Templates"
                },
                {
                  "nodeId": "b9150dd0-d13c-4df6-9844-082260a5a821",
                  "type": "array",
                  "description": "",
                  "items": [
                    {
                      "nodeId": "eb4401d0-da0a-4973-a44b-8efce075581a",
                      "type": "string",
                      "title": "Name",
                      "description": "",
                      "placeholder": "Enter text",
                      "required": false,
                      "readOnly": false,
                      "binding": false,
                      "rel": "item",
                      "targetPointer": "/default"
                    },
                    {
                      "nodeId": "f212e72e-ea5a-45da-928c-bf368044169c",
                      "type": "string",
                      "title": "treeId",
                      "description": "",
                      "placeholder": "",
                      "required": true
                    }
                  ],
                  "title": "Golden Config Trees"
                }
              ],
              "title": "Components"
            }
          ]
        },
        "schema": {
          "title": "Re-Discovery Components Form",
          "description": "This form allows a user to verify that the 'discovered components' contain everything that is required for their particular prebuilt. If there are extra/missing components, the user can edit the list accordingly.",
          "type": "object",
          "required": [],
          "properties": {
            "components": {
              "type": "object",
              "title": "Components",
              "description": "",
              "required": [],
              "properties": {
                "operationsAutomations": {
                  "type": "array",
                  "title": "Operations Automations",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "catalogAutomations": {
                  "type": "array",
                  "title": "Catalog Automations",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "workflows": {
                  "type": "array",
                  "title": "Workflows",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "transformations": {
                  "type": "array",
                  "title": "Transformations",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "title": "Id",
                        "description": ""
                      },
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "jsonForms": {
                  "type": "array",
                  "title": "JSON Forms",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "forms": {
                  "type": "array",
                  "title": "Forms",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "templates": {
                  "type": "array",
                  "title": "Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "commandTemplates": {
                  "type": "array",
                  "title": "Command Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "analyticTemplates": {
                  "type": "array",
                  "title": "Analytic Templates",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      }
                    }
                  }
                },
                "goldenConfigTrees": {
                  "type": "array",
                  "title": "Golden Config Trees",
                  "description": "",
                  "items": {
                    "type": "object",
                    "required": [
                      "treeId"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "title": "Name",
                        "description": ""
                      },
                      "treeId": {
                        "type": "string",
                        "title": "treeId",
                        "description": ""
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "uiSchema": {
          "components": {
            "ui:collapseByDefault": false,
            "items": {
              "operationsAutomations": {
                "items": {
                  "name": {
                    "ui:placeholder": "Enter text"
                  }
                }
              },
              "catalogAutomations": {
                "items": {}
              },
              "workflows": {
                "items": {}
              },
              "transformations": {
                "items": {
                  "id": {
                    "ui:widget": "textarea"
                  },
                  "name": {
                    "ui:placeholder": "Enter text"
                  }
                }
              },
              "jsonForms": {
                "items": {
                  "name": {
                    "ui:widget": "textarea"
                  }
                }
              },
              "forms": {
                "items": {}
              },
              "templates": {
                "items": {}
              },
              "commandTemplates": {
                "items": {}
              },
              "analyticTemplates": {
                "items": {}
              },
              "goldenConfigTrees": {
                "items": {
                  "name": {
                    "ui:placeholder": "Enter text"
                  }
                }
              }
            }
          }
        },
        "bindingSchema": {
          "properties": {
            "components": {
              "properties": {
                "operationsAutomations": {
                  "items": {
                    "properties": {}
                  }
                },
                "catalogAutomations": {
                  "items": {
                    "properties": {}
                  }
                },
                "workflows": {
                  "items": {
                    "properties": {}
                  }
                },
                "transformations": {
                  "items": {
                    "properties": {}
                  }
                },
                "jsonForms": {
                  "items": {
                    "properties": {}
                  }
                },
                "forms": {
                  "items": {
                    "properties": {}
                  }
                },
                "templates": {
                  "items": {
                    "properties": {}
                  }
                },
                "commandTemplates": {
                  "items": {
                    "properties": {}
                  }
                },
                "analyticTemplates": {
                  "items": {
                    "properties": {}
                  }
                },
                "goldenConfigTrees": {
                  "items": {
                    "properties": {}
                  }
                }
              }
            }
          }
        },
        "validationSchema": {
          "components": {
            "operationsAutomations": {},
            "catalogAutomations": {},
            "workflows": {},
            "transformations": {},
            "jsonForms": {},
            "forms": {},
            "templates": {},
            "commandTemplates": {},
            "analyticTemplates": {},
            "goldenConfigTrees": {}
          }
        },
        "version": "2020.1"
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "605a4deae4eaf000ec76deb0",
        "name": "CompliancefilterArrayOfObjectsGitHub",
        "incoming": [
          {
            "$id": "filterableArray",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "required": [],
              "additionalProperties": true
            }
          },
          {
            "$id": "keyToFilterOn",
            "type": "string",
            "default": "keyToFilterOn",
            "examples": [
              "keyToFilterOn"
            ]
          },
          {
            "$id": "valueToFind",
            "type": "string",
            "default": "valueToFind",
            "examples": [
              "valueToFind"
            ]
          },
          {
            "$id": "discardMatching",
            "type": "boolean",
            "examples": [
              true,
              false
            ]
          }
        ],
        "outgoing": [
          {
            "$id": "filteredArray",
            "type": "array"
          },
          {
            "$id": "firstFilteredElement",
            "type": "object",
            "properties": {},
            "required": []
          }
        ],
        "steps": [
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "filterableArray",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "keyToFilterOn",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "valueToFind",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/3/value"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discardMatching",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/4/value"
            }
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "filter",
            "args": [
              null,
              "ƒ_query_1",
              null,
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 2,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "filteredArray",
              "ptr": ""
            }
          },
          {
            "id": 2,
            "type": "method",
            "library": "Array",
            "method": "getIndex",
            "args": [
              null,
              0
            ],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "firstFilteredElement",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {},
                "required": [],
                "additionalProperties": true,
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {},
                  "required": [],
                  "additionalProperties": true
                }
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_keyToFilterOn": {
                    "$id": "0_keyToFilterOn",
                    "type": "string",
                    "default": "keyToFilterOn",
                    "examples": [
                      "keyToFilterOn"
                    ]
                  },
                  "1_valueToFind": {
                    "$id": "1_valueToFind",
                    "type": "string",
                    "default": "valueToFind",
                    "examples": [
                      "valueToFind"
                    ]
                  },
                  "2_discardMatching": {
                    "$id": "2_discardMatching",
                    "type": "boolean",
                    "examples": [
                      true,
                      false
                    ]
                  }
                },
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "functions": [],
            "name": "ƒ_query_1",
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_keyToFilterOn"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/2_discardMatching"
                },
                "to": {
                  "location": "method",
                  "name": 14,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 31,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/2_discardMatching"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 34,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/1_valueToFind"
                },
                "to": {
                  "location": "method",
                  "name": 32,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 14,
                "type": "method",
                "library": "Logical",
                "method": "not",
                "args": [
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 30,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 14,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 33,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 32,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 32,
                "type": "method",
                "library": "Equality",
                "method": "deepEquals",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 35,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 32,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 36,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 32,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 22,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 22,
                "type": "method",
                "library": "Logical",
                "method": "not",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 24,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 22,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Logical",
                "method": "and",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 10,
                "type": "method",
                "library": "Logical",
                "method": "and",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 27,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 26,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 28,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 26,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 26,
                "type": "method",
                "library": "Logical",
                "method": "or",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 29,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 26,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 5
            },
            "id": "ƒ_query_1",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 6
        },
        "created": "2023-01-26T21:27:00.126Z",
        "createdBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-01-26T21:27:00.126Z",
        "lastUpdatedBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.0",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "60492fa1bf365c00ecacb399",
        "name": "getMetadataAndComponentsGitHub",
        "description": "",
        "incoming": [
          {
            "$id": "artifactDataUnformatted",
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "examples": [
                  "5f3c38e78cd2e02bacdd59eb"
                ]
              },
              "name": {
                "type": "string",
                "examples": [
                  "@itentialopensource/asa-firewall-object-group-update"
                ]
              },
              "version": {
                "type": "string",
                "examples": [
                  "0.0.11-2020.1.1"
                ]
              },
              "description": {
                "type": "string",
                "examples": [
                  "This artifact contains the Cisco ASA group policy object update workflow for Ansible using IAP"
                ]
              },
              "license": {
                "type": "string",
                "examples": [
                  "Apache-2.0"
                ]
              },
              "repository": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "git"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "examples": [
                      "https://gitlab.com:itentialopensource/pre-built-automations/asa-firewall-object-group-update.git"
                    ]
                  }
                },
                "required": []
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential"
                  ]
                }
              },
              "IAPDependencies": {
                "type": "object",
                "properties": {
                  "@itential/app-automation_catalog": {
                    "type": "string",
                    "examples": [
                      "2.6.3"
                    ]
                  },
                  "@itential/app-json_forms": {
                    "type": "string",
                    "examples": [
                      "1.14.1"
                    ]
                  },
                  "@itential/app-workflow_engine": {
                    "type": "string",
                    "examples": [
                      "7.9.4"
                    ]
                  }
                },
                "required": []
              },
              "gitlabId": {
                "type": "integer",
                "examples": [
                  17671583
                ]
              },
              "author": {
                "type": "string",
                "examples": [
                  "Itential Artifacts"
                ]
              },
              "components": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "examples": [
                        "workflow"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "22a02846-c48a-4ced-9609-4e40c7f0eec1"
                      ],
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "examples": [
                        "IAP Artifacts ASA Firewall Object Group Update"
                      ]
                    }
                  },
                  "required": []
                }
              },
              "readme": {
                "type": "string",
                "examples": [
                  "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->\n<!-- Update the below line with your artifact name -->\n# ASA Firewall Object Group Update \n<!-- Add a short description or tag-line -->\nThis artifact contains the Cisco ASA group policy object update workflow for Ansible using IAP.  This workflow is designed to create and/or update an existing group object to add and remove hosts on a Cisco ASA firewall physical and virtual devices via Ansible.\n​​\n<!-- Leave TOC intact unless you've added or removed headers -->\n## Table of Contents\n​\n- [Overview](#overview)\n- [Features](#features)\n- [Requirements](#requirements)\n- [Future Enhancements](#future-enhancements)\n- [How to Install](#how-to-install)\n- [How to Run](#how-to-run)\n- [Additional Information](#additional-information)\n​\n## Overview\n<!-- Write a few sentences about the artifact and explain the use case(s) -->\n<!-- Ex.: The Migration Wizard enables IAP users to conveniently move their automation use cases between their different IAP environments -->\n<!--  (e.g. from Dev to Pre-Production or from Lab to Production).  -->\nThis artifact contains the Cisco ASA group policy object update workflow for Ansible using IAP.  This workflow is designed to create and/or update an existing group object to add and remove hosts on a Cisco ASA firewall physical and virtual devices via Ansible.\n​\nThis solution consists of the following:\n* Main Workflow (**IAP-Artifacts ASA Firewall Group Policy Update**)\n* Automation Catalog entry (**IAP Artifacts ASA Firewall Object Group Update**)\n* JSON Form (**IAP Artifacts ASA Firewall Object Group Update**)\n​\n<!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GITLAB -->\n<table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/ASA-Firewall-Object-Group-Update/raw/master/images/overview.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n\n​\n## Features\n<!-- Bullet point highlighting the most exciting features of the artifact -->\n<!-- Ex.: * Automatically checks for device type -->\n<!-- Ex.: * Displays dry-run to user (asking for confirmation) prior to pushing config to the device -->\n<!-- Ex.: * Verifies downloaded file integrity (using md5), will try to download again if failed -->\n  * Group Update Host Addition and Removal.\n  * Allow for a rollback in case functionality checks have failed.\n  * Zero touch mode of operation is available to select via JSON form.\n​\n## Requirements\n<!-- Explain any pre-req. Ex.: This artifact requires Ansible or NSO (with F5 NED) in order to run -->\nThis artifact requires Ansible, Itential Automation Gateway, and a Cisco ASA device.\n​\n## Supported Device Types\n  * Cisco ASA/ASAv\n​\n## Test Environment\n  * Devices Ver.:\n    * asa: 9.12\n  * IAP Ver. 2019.3.2\n  * Itential Automation Gateway Ver.: 2.36.3+2019.3.14\n  * Ansible Ver.: 2.8.3\n​\n## Future Enhancements\n<!-- OPTIONAL Mention If the artifact has known limited support. Ex.: This artifact only support Cisco IOS and XR devices -->\n* This workflow is designed to run only against Ansible devices; don't try to run it against Cisco-ASA devices orchastrated by Cisco NSO.\n* Form validation on list of hosts only supports IPv4 addresses\n​\n## How to Install\n<!-- OPTIONAL - Explain if external (to IAP) components are required. Ex. The ansible roles required for this artifact can be found in www.gitlab.com/itentialopensource......   -->\n * To install this artifact in IAP, use **App-Artifact** available in Nexus repo. \n <table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/ASA-Firewall-Object-Group-Update/raw/master/images/install.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n​\n\n## How to Run\n<!-- Explain what is/are the main entrypoint(s) for this artifact: automation catalog document, workflow builder, postman, etc.  -->\nStarting the ASA Firewall Group Policy Update is done via the Automation Catalog. Please provide the device, group and hosts in the provided form.\n <table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/ASA-Firewall-Object-Group-Update/raw/master/images/runAutomation.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n\n## Additional Information\nPlease use your Itential Customer Success account if you need support when using this artifact.\n"
                ]
              },
              "manifest": {
                "type": "object",
                "properties": {
                  "bundleName": {
                    "type": "string",
                    "examples": [
                      "ASA Firewall Object Group Update"
                    ]
                  },
                  "fingerprint": {
                    "type": "string",
                    "examples": [
                      "5e7917201b809a70972fc6e5"
                    ]
                  },
                  "createdEpoch": {
                    "type": "string",
                    "examples": [
                      "1584994080756"
                    ]
                  },
                  "artifacts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "IAP Artifacts ASA Firewall Object Group Update"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "examples": [
                            "IAP Artifacts ASA Firewall Object Group Update"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "ac-agenda-job"
                          ]
                        },
                        "location": {
                          "type": "string",
                          "examples": [
                            "/bundles/ac_agenda_jobs/IAP Artifacts ASA Firewall Object Group Update.json"
                          ]
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "entryPoint": {
                              "type": "boolean",
                              "examples": [
                                true,
                                false
                              ]
                            }
                          },
                          "required": []
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "componentObject",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "IAP Artifacts ASA Firewall Object Group Update"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f3c38e78236fd5385c31bbd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "automation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "IAP Artifacts ASA Firewall Object Group Update"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f3c38e78236fd5385c31bbd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "workflow": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "IAP Artifacts ASA Firewall Object Group Update"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "22a02846-c48a-4ced-9609-4e40c7f0eec1"
                          ],
                          "format": "uuid"
                        }
                      },
                      "required": []
                    }
                  },
                  "json-forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "IAP Artifacts ASA Firewall Object Group Update"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5e667e015bfbbe055e92e55e"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "forms": {
                    "type": "array"
                  },
                  "template": {
                    "type": "array"
                  },
                  "mop-template": {
                    "type": "array"
                  },
                  "mop-analytic-template": {
                    "type": "array"
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "artifactDataFormatted",
            "type": "object",
            "properties": {},
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              "{}"
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "artifactDataUnformatted",
              "ptr": "/name"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "artifactDataUnformatted",
              "ptr": "/description"
            },
            "to": {
              "location": "method",
              "name": 9,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "artifactDataUnformatted",
              "ptr": "/author"
            },
            "to": {
              "location": "method",
              "name": 12,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 20,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "artifactDataUnformatted",
              "ptr": "/readme"
            },
            "to": {
              "location": "method",
              "name": 18,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "artifactDataUnformatted",
              "ptr": "/license"
            },
            "to": {
              "location": "method",
              "name": 21,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 30,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "artifactDataUnformatted",
              "ptr": "/keywords"
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 32,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              "{}"
            ],
            "view": {
              "row": 1,
              "col": 3
            }
          },
          {
            "id": 37,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [],
            "view": {
              "row": 6,
              "col": 1
            },
            "polymorphIndex": 0
          },
          {
            "id": 43,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentObject",
              "ptr": "/components"
            },
            "to": {
              "location": "method",
              "name": 39,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 45,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "artifactDataUnformatted",
              "ptr": "/IAPDependencies"
            },
            "to": {
              "location": "method",
              "name": 44,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 50,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "artifactDataUnformatted",
              "ptr": "/author"
            },
            "to": {
              "location": "method",
              "name": 47,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 34,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 32,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 33,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 38,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 37,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 24,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 44,
            "type": "method",
            "library": "Object",
            "method": "keys",
            "args": [
              null
            ],
            "view": {
              "row": 7,
              "col": 1
            }
          },
          {
            "id": 46,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 44,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 26,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 6,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "name",
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 16,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 9,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 9,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "description",
              null
            ],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 17,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 9,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 12,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 12,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "contributor",
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 48,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 12,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 47,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 47,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "author",
              null
            ],
            "view": {
              "row": 3,
              "col": 1
            }
          },
          {
            "id": 49,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 47,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 18,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 18,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "readme",
              null
            ],
            "view": {
              "row": 4,
              "col": 2
            }
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 18,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 21,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 21,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "license",
              null
            ],
            "view": {
              "row": 5,
              "col": 2
            }
          },
          {
            "id": 27,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 21,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 24,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 24,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "categories",
              null
            ],
            "view": {
              "row": 6,
              "col": 2
            }
          },
          {
            "id": 28,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 24,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 25,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 25,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "keywords",
              null
            ],
            "view": {
              "row": 7,
              "col": 2
            }
          },
          {
            "id": 29,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 25,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 26,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 26,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "dependencies",
              null
            ],
            "view": {
              "row": 8,
              "col": 2
            }
          },
          {
            "id": 35,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 26,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 33,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 33,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "metadata",
              null
            ],
            "view": {
              "row": 2,
              "col": 3
            }
          },
          {
            "id": 40,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 33,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 39,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 39,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "components",
              null
            ],
            "view": {
              "row": 3,
              "col": 3
            }
          },
          {
            "id": 42,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 39,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "artifactDataFormatted",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "workflow"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "examples": [
                      "22a02846-c48a-4ced-9609-4e40c7f0eec1"
                    ],
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "examples": [
                      "IAP Artifacts ASA Firewall Object Group Update"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "examples": [
                        "workflow"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "22a02846-c48a-4ced-9609-4e40c7f0eec1"
                      ],
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "examples": [
                        "IAP Artifacts ASA Firewall Object Group Update"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "ƒ_map_1",
            "steps": [
              {
                "id": 1,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "name",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "_id",
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/id"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "String",
                "method": "includes",
                "args": [
                  null,
                  "ac-agenda-job",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "declaration",
                "library": "Array",
                "method": "new Array",
                "args": [],
                "view": {
                  "row": 1,
                  "col": 4
                },
                "polymorphIndex": 0
              },
              {
                "id": 11,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 5
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/1/value"
                }
              }
            ],
            "view": {
              "col": 6,
              "row": 5
            },
            "id": "ƒ_map_1",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 4,
          "row": 9
        },
        "created": "2023-01-26T21:27:00.129Z",
        "createdBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-01-26T21:27:00.129Z",
        "lastUpdatedBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "620ea276e3638a010009b10e",
        "name": "componentsObject",
        "description": "",
        "incoming": [
          {
            "$id": "input",
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "examples": [
                  "5f3c38e78cd2e02bacdd59eb"
                ]
              },
              "name": {
                "type": "string",
                "examples": [
                  "@itentialopensource/asa-firewall-object-group-update"
                ]
              },
              "version": {
                "type": "string",
                "examples": [
                  "0%2E0%2E11-2020%2E1%2E1"
                ]
              },
              "description": {
                "type": "string",
                "examples": [
                  "This artifact contains the Cisco ASA group policy object update workflow for Ansible using IAP"
                ]
              },
              "license": {
                "type": "string",
                "examples": [
                  "Apache-2%2E0"
                ]
              },
              "repository": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "git"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "examples": [
                      "https://gitlab%2Ecom:itentialopensource/pre-built-automations/asa-firewall-object-group-update%2Egit"
                    ]
                  }
                },
                "required": []
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential"
                  ]
                },
                "$id": "keywords"
              },
              "IAPDependencies": {
                "type": "object",
                "properties": {
                  "@itential/app-automation_catalog": {
                    "type": "string",
                    "examples": [
                      "2%2E6%2E3"
                    ]
                  },
                  "@itential/app-json_forms": {
                    "type": "string",
                    "examples": [
                      "1%2E14%2E1"
                    ]
                  },
                  "@itential/app-workflow_engine": {
                    "type": "string",
                    "examples": [
                      "7%2E9%2E4"
                    ]
                  }
                },
                "required": []
              },
              "gitlabId": {
                "type": "integer",
                "examples": [
                  17671583
                ]
              },
              "author": {
                "type": "string",
                "examples": [
                  "Itential Artifacts"
                ]
              },
              "components": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                },
                "$id": "components"
              },
              "readme": {
                "type": "string",
                "examples": [
                  "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->\n<!-- Update the below line with your artifact name -->\n# ASA Firewall Object Group Update \n<!-- Add a short description or tag-line -->\nThis artifact contains the Cisco ASA group policy object update workflow for Ansible using IAP%2E  This workflow is designed to create and/or update an existing group object to add and remove hosts on a Cisco ASA firewall physical and virtual devices via Ansible%2E\n​​\n<!-- Leave TOC intact unless you've added or removed headers -->\n## Table of Contents\n​\n- [Overview](#overview)\n- [Features](#features)\n- [Requirements](#requirements)\n- [Future Enhancements](#future-enhancements)\n- [How to Install](#how-to-install)\n- [How to Run](#how-to-run)\n- [Additional Information](#additional-information)\n​\n## Overview\n<!-- Write a few sentences about the artifact and explain the use case(s) -->\n<!-- Ex%2E: The Migration Wizard enables IAP users to conveniently move their automation use cases between their different IAP environments -->\n<!--  (e%2Eg%2E from Dev to Pre-Production or from Lab to Production)%2E  -->\nThis artifact contains the Cisco ASA group policy object update workflow for Ansible using IAP%2E  This workflow is designed to create and/or update an existing group object to add and remove hosts on a Cisco ASA firewall physical and virtual devices via Ansible%2E\n​\nThis solution consists of the following:\n* Main Workflow (**IAP-Artifacts ASA Firewall Group Policy Update**)\n* Automation Catalog entry (**IAP Artifacts ASA Firewall Object Group Update**)\n* JSON Form (**IAP Artifacts ASA Firewall Object Group Update**)\n​\n<!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GITLAB -->\n<table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/ASA-Firewall-Object-Group-Update/raw/master/images/overview.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n\n​\n## Features\n<!-- Bullet point highlighting the most exciting features of the artifact -->\n<!-- Ex%2E: * Automatically checks for device type -->\n<!-- Ex%2E: * Displays dry-run to user (asking for confirmation) prior to pushing config to the device -->\n<!-- Ex%2E: * Verifies downloaded file integrity (using md5), will try to download again if failed -->\n  * Group Update Host Addition and Removal%2E\n  * Allow for a rollback in case functionality checks have failed%2E\n  * Zero touch mode of operation is available to select via JSON form%2E\n​\n## Requirements\n<!-- Explain any pre-req%2E Ex%2E: This artifact requires Ansible or NSO (with F5 NED) in order to run -->\nThis artifact requires Ansible, Itential Automation Gateway, and a Cisco ASA device%2E\n​\n## Supported Device Types\n  * Cisco ASA/ASAv\n​\n## Test Environment\n  * Devices Ver%2E:\n    * asa: 9%2E12\n  * IAP Ver%2E 2019%2E3%2E2\n  * Itential Automation Gateway Ver%2E: 2%2E36%2E3+2019%2E3%2E14\n  * Ansible Ver%2E: 2%2E8%2E3\n​\n## Future Enhancements\n<!-- OPTIONAL Mention If the artifact has known limited support%2E Ex%2E: This artifact only support Cisco IOS and XR devices -->\n* This workflow is designed to run only against Ansible devices; don't try to run it against Cisco-ASA devices orchastrated by Cisco NSO%2E\n* Form validation on list of hosts only supports IPv4 addresses\n​\n## How to Install\n<!-- OPTIONAL - Explain if external (to IAP) components are required%2E Ex%2E The ansible roles required for this artifact can be found in www%2Egitlab%2Ecom/itentialopensource%2E%2E%2E%2E%2E%2E   -->\n * To install this artifact in IAP, use **App-Artifact** available in Nexus repo%2E \n <table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/ASA-Firewall-Object-Group-Update/raw/master/images/install.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n​\n\n## How to Run\n<!-- Explain what is/are the main entrypoint(s) for this artifact: automation catalog document, workflow builder, postman, etc%2E  -->\nStarting the ASA Firewall Group Policy Update is done via the Automation Catalog%2E Please provide the device, group and hosts in the provided form%2E\n <table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/ASA-Firewall-Object-Group-Update/raw/master/images/runAutomation.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n\n## Additional Information\nPlease use your Itential Customer Success account if you need support when using this artifact%2E\n"
                ]
              },
              "manifest": {
                "type": "object",
                "properties": {
                  "bundleName": {
                    "type": "string",
                    "examples": [
                      "ASA Firewall Object Group Update"
                    ]
                  },
                  "fingerprint": {
                    "type": "string",
                    "examples": [
                      "5e7917201b809a70972fc6e5"
                    ]
                  },
                  "createdEpoch": {
                    "type": "string",
                    "examples": [
                      "1584994080756"
                    ]
                  },
                  "artifacts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "IAP Artifacts ASA Firewall Object Group Update"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "examples": [
                            "IAP Artifacts ASA Firewall Object Group Update"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "ac-agenda-job"
                          ]
                        },
                        "location": {
                          "type": "string",
                          "examples": [
                            "/bundles/ac_agenda_jobs/IAP Artifacts ASA Firewall Object Group Update%2Ejson"
                          ]
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "entryPoint": {
                              "type": "boolean",
                              "examples": [
                                true,
                                false
                              ]
                            }
                          },
                          "required": []
                        }
                      },
                      "required": []
                    },
                    "$id": "artifacts"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "output",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "automation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "workflow": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "json-forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "mop-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "mop-analytic-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "golden-config": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "treeId": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "transformation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              {
                "ac-agenda-job": [],
                "automation": [],
                "workflow": [],
                "json-forms": [],
                "forms": [],
                "template": [],
                "mop-template": [],
                "mop-analytic-template": [],
                "golden-config": [],
                "transformation": []
              }
            ],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "input",
              "ptr": "/components"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_3",
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "output",
              "ptr": "/components"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "workflow"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "examples": [
                      "22a02846-c48a-4ced-9609-4e40c7f0eec1"
                    ],
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "examples": [
                      "IAP Artifacts ASA Firewall Object Group Update"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "examples": [
                        "workflow"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "22a02846-c48a-4ced-9609-4e40c7f0eec1"
                      ],
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "examples": [
                        "IAP Artifacts ASA Firewall Object Group Update"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "sortComponent",
            "steps": [
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/id"
                },
                "to": {
                  "location": "function",
                  "name": 15,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "function",
                  "name": 15,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "function",
                  "name": 15,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 15,
                "type": "function",
                "function": "userFunc_1",
                "args": [
                  "",
                  "",
                  ""
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 19,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 20,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 21,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 22,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 23,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 24,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 25,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 15,
                  "ptr": "/return/output"
                },
                "to": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 26,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 27,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 28,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 29,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 4
            },
            "id": "ƒ_reduce_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object"
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_2",
            "steps": [
              {
                "id": 1,
                "type": "function",
                "function": "setIdentifier",
                "args": [],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  "treeId",
                  "id"
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "golden-config"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 12,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 5
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/output"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 5,
              "row": 4
            },
            "id": "ƒ_reduce_2",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_3",
            "steps": [
              {
                "id": 1,
                "type": "function",
                "function": "formatComponents",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/output"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 4
            },
            "id": "ƒ_reduce_3",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "name",
                "type": "string",
                "examples": [
                  "name"
                ]
              },
              {
                "$id": "_id",
                "type": "string",
                "examples": [
                  "_id"
                ]
              },
              {
                "$id": "type",
                "type": "string",
                "examples": [
                  "fdsa"
                ]
              }
            ],
            "outgoing": [
              {
                "$id": "output",
                "type": "object",
                "properties": {},
                "required": []
              }
            ],
            "functions": [],
            "name": "nameId",
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  "{}"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 9,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  "{}"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "name",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "_id",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "name",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "_id",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "transformation"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "name",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 10,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "name",
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "id",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "_id",
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "output",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 4
            },
            "id": "userFunc_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "input",
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array"
                  },
                  "workflow": {
                    "type": "array"
                  },
                  "json-forms": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "template": {
                    "type": "array"
                  },
                  "mop-template": {
                    "type": "array"
                  },
                  "mop-analytic-template": {
                    "type": "array"
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array"
                  }
                },
                "required": []
              },
              {
                "$id": "itemToPush",
                "type": "object",
                "properties": {},
                "required": []
              },
              {
                "$id": "type",
                "type": "string",
                "examples": [
                  "type"
                ]
              }
            ],
            "outgoing": [
              {
                "$id": "output",
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array"
                  },
                  "workflow": {
                    "type": "array"
                  },
                  "json-forms": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "template": {
                    "type": "array"
                  },
                  "mop-template": {
                    "type": "array"
                  },
                  "mop-analytic-template": {
                    "type": "array"
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array"
                  }
                },
                "required": []
              }
            ],
            "functions": [],
            "name": "pushComponent",
            "steps": [
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "itemToPush",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "input",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "input",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "output",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 4
            },
            "id": "userFunc_2",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object"
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_2 (1)",
            "steps": [
              {
                "id": 1,
                "type": "function",
                "function": "setIdentifier",
                "args": [
                  "",
                  "",
                  ""
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  "treeId",
                  "id"
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "golden-config"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 12,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 5
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/output"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 5,
              "row": 4
            },
            "id": "ƒ_reduce_2 (1)",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "idType",
                "type": "string"
              },
              {
                "$id": "componentObject",
                "type": "object"
              },
              {
                "$id": "type",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "output",
                "type": "object"
              }
            ],
            "functions": [],
            "name": "setIdentifier",
            "steps": [
              {
                "id": 2,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "componentObject",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "idType",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "method",
                "library": "Object",
                "method": "deleteProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "componentObject",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 9,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "transformation"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 15,
                "type": "method",
                "library": "Object",
                "method": "deleteProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 18,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "golden-config"
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 18,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  "treeId",
                  "_id"
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 18,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 22,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 23,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 24,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 25,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "idType",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 26,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "output",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 4
            },
            "id": "setIdentifier",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "componentObject",
                "type": "object"
              },
              {
                "$id": "type",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "output",
                "type": "object"
              }
            ],
            "functions": [],
            "name": "formatComponents",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "deleteProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "componentObject",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "transformation"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "golden-config"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Logical",
                "method": "or",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 10,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "_id",
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "id"
                ],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 18,
                "type": "method",
                "library": "Object",
                "method": "deleteProperty",
                "args": [
                  null,
                  "id"
                ],
                "view": {
                  "row": 3,
                  "col": 4
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 18,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 18,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "output",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 4
            },
            "id": "formatComponents",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 2,
          "row": 4
        },
        "created": "2023-01-26T21:27:00.134Z",
        "createdBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-01-26T21:27:00.134Z",
        "lastUpdatedBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "605d2b11d1976e009291a74d",
        "name": "updatePackageGitHubJSON",
        "description": "",
        "incoming": [
          {
            "$id": "filesArray",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "examples": [
                    "bundles"
                  ]
                },
                "type": {
                  "type": "string",
                  "examples": [
                    "directory"
                  ]
                },
                "content": {
                  "type": [
                    "string",
                    "array"
                  ]
                }
              },
              "required": []
            }
          },
          {
            "$id": "packageJsonName",
            "type": "string",
            "examples": [
              "sdfsa"
            ]
          },
          {
            "$id": "packageJsonVersion",
            "type": "string",
            "examples": [
              "dsfds"
            ]
          }
        ],
        "outgoing": [
          {
            "$id": "fixedArray",
            "type": "array"
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "filesArray",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 8,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              " {         \"type\": \"local\",         \"hostname\": \"localhost\",         \"path\": \"/\"     }"
            ],
            "view": {
              "row": 4,
              "col": 3
            }
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "filesArray",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 22,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 27,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "packageJsonName",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 26,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 42,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "packageJsonVersion",
              "ptr": ""
            },
            "to": {
              "location": "method",
              "name": 39,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "find",
            "args": [
              null,
              "ƒ_query_1",
              null
            ],
            "view": {
              "row": 1,
              "col": 1
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 4,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 4,
            "type": "method",
            "library": "Object",
            "method": "getProperty",
            "args": [
              null,
              "content"
            ],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 4,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 6,
            "type": "method",
            "library": "JSON",
            "method": "parse",
            "args": [
              null,
              null
            ],
            "view": {
              "row": 2,
              "col": 3
            }
          },
          {
            "id": 40,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 39,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 39,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "version",
              null
            ],
            "view": {
              "row": 5,
              "col": 4
            }
          },
          {
            "id": 41,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 39,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 17,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 17,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "repository",
              null
            ],
            "view": {
              "row": 4,
              "col": 4
            }
          },
          {
            "id": 28,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 17,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 26,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 26,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "name",
              null
            ],
            "view": {
              "row": 3,
              "col": 4
            }
          },
          {
            "id": 29,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 26,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 16,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 16,
            "type": "method",
            "library": "JSON",
            "method": "stringify",
            "args": [
              null,
              null,
              "  "
            ],
            "view": {
              "row": 2,
              "col": 4
            }
          },
          {
            "id": 24,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 16,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 22,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 22,
            "type": "method",
            "library": "Array",
            "method": "map",
            "args": [
              null,
              "ƒ_map_2",
              null
            ],
            "view": {
              "row": 1,
              "col": 5
            }
          },
          {
            "id": 25,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 22,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "fixedArray",
              "ptr": ""
            }
          },
          {
            "id": 43,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 17,
              "ptr": "/args/2/value"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "bundles"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "examples": [
                      "directory"
                    ]
                  },
                  "content": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "ac_agenda_jobs"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "directory"
                          ]
                        },
                        "content": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "IAP Artifacts ASA Firewall Object Group Update.json"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "file"
                                ]
                              },
                              "content": {
                                "type": "string",
                                "examples": [
                                  "{\n  \"_id\": \"5f3c38e78236fd5385c31bbd\",\n  \"name\": \"IAP Artifacts ASA Firewall Object Group Update\",\n  \"data\": {\n    \"lastUpdated\": \"2020-03-23T19:45:50.899Z\",\n    \"formData\": {\n      \"zeroTouch\": true,\n      \"asaFirewallDevice\": \"asa-aws-ansible\",\n      \"hostList\": [],\n      \"checkbox1\": true\n    },\n    \"formId\": \"IAP Artifacts ASA Firewall Object Group Update\",\n    \"workflowId\": \"IAP Artifacts ASA Firewall Object Group Update\",\n    \"description\": \"IAP Artifacts ASA Firewall Object Group Update\",\n    \"gbac\": {\n      \"write\": [],\n      \"read\": []\n    },\n    \"modifiedById\": \"5f3bda043e82cb0740b460d6\",\n    \"modifiedByUsername\": \"justin.cotton\"\n  },\n  \"lastModifiedBy\": \"DSUP-IAP20201:11193\",\n  \"lastRunAt\": null,\n  \"nextRunAt\": null,\n  \"priority\": 0,\n  \"repeatInterval\": null,\n  \"repeatTimezone\": null,\n  \"type\": \"normal\"\n}"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": [],
                "$id": "element"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "bundles"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "directory"
                      ]
                    },
                    "content": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "examples": [
                              "ac_agenda_jobs"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "examples": [
                              "directory"
                            ]
                          },
                          "content": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "examples": [
                                    "IAP Artifacts ASA Firewall Object Group Update.json"
                                  ]
                                },
                                "type": {
                                  "type": "string",
                                  "examples": [
                                    "file"
                                  ]
                                },
                                "content": {
                                  "type": "string",
                                  "examples": [
                                    "{\n  \"_id\": \"5f3c38e78236fd5385c31bbd\",\n  \"name\": \"IAP Artifacts ASA Firewall Object Group Update\",\n  \"data\": {\n    \"lastUpdated\": \"2020-03-23T19:45:50.899Z\",\n    \"formData\": {\n      \"zeroTouch\": true,\n      \"asaFirewallDevice\": \"asa-aws-ansible\",\n      \"hostList\": [],\n      \"checkbox1\": true\n    },\n    \"formId\": \"IAP Artifacts ASA Firewall Object Group Update\",\n    \"workflowId\": \"IAP Artifacts ASA Firewall Object Group Update\",\n    \"description\": \"IAP Artifacts ASA Firewall Object Group Update\",\n    \"gbac\": {\n      \"write\": [],\n      \"read\": []\n    },\n    \"modifiedById\": \"5f3bda043e82cb0740b460d6\",\n    \"modifiedByUsername\": \"justin.cotton\"\n  },\n  \"lastModifiedBy\": \"DSUP-IAP20201:11193\",\n  \"lastRunAt\": null,\n  \"nextRunAt\": null,\n  \"priority\": 0,\n  \"repeatInterval\": null,\n  \"repeatTimezone\": null,\n  \"type\": \"normal\"\n}"
                                  ]
                                }
                              },
                              "required": []
                            }
                          }
                        },
                        "required": []
                      }
                    }
                  },
                  "required": []
                },
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_url": {
                    "$id": "0_url",
                    "type": "string",
                    "examples": [
                      "url"
                    ]
                  }
                },
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "return",
                "type": "boolean",
                "$id": "return"
              }
            ],
            "functions": [],
            "name": "ƒ_query_1",
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "element",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "package.json"
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "return",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 5
            },
            "id": "ƒ_query_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "bundles"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "examples": [
                      "directory"
                    ]
                  },
                  "content": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "ac_agenda_jobs"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "directory"
                          ]
                        },
                        "content": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "IAP Artifacts ASA Firewall Object Group Update.json"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "file"
                                ]
                              },
                              "content": {
                                "type": "string",
                                "examples": [
                                  "{\n  \"_id\": \"5f3c38e78236fd5385c31bbd\",\n  \"name\": \"IAP Artifacts ASA Firewall Object Group Update\",\n  \"data\": {\n    \"lastUpdated\": \"2020-03-23T19:45:50.899Z\",\n    \"formData\": {\n      \"zeroTouch\": true,\n      \"asaFirewallDevice\": \"asa-aws-ansible\",\n      \"hostList\": [],\n      \"checkbox1\": true\n    },\n    \"formId\": \"IAP Artifacts ASA Firewall Object Group Update\",\n    \"workflowId\": \"IAP Artifacts ASA Firewall Object Group Update\",\n    \"description\": \"IAP Artifacts ASA Firewall Object Group Update\",\n    \"gbac\": {\n      \"write\": [],\n      \"read\": []\n    },\n    \"modifiedById\": \"5f3bda043e82cb0740b460d6\",\n    \"modifiedByUsername\": \"justin.cotton\"\n  },\n  \"lastModifiedBy\": \"DSUP-IAP20201:11193\",\n  \"lastRunAt\": null,\n  \"nextRunAt\": null,\n  \"priority\": 0,\n  \"repeatInterval\": null,\n  \"repeatTimezone\": null,\n  \"type\": \"normal\"\n}"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "bundles"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "directory"
                      ]
                    },
                    "content": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "examples": [
                              "ac_agenda_jobs"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "examples": [
                              "directory"
                            ]
                          },
                          "content": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "examples": [
                                    "IAP Artifacts ASA Firewall Object Group Update.json"
                                  ]
                                },
                                "type": {
                                  "type": "string",
                                  "examples": [
                                    "file"
                                  ]
                                },
                                "content": {
                                  "type": "string",
                                  "examples": [
                                    "{\n  \"_id\": \"5f3c38e78236fd5385c31bbd\",\n  \"name\": \"IAP Artifacts ASA Firewall Object Group Update\",\n  \"data\": {\n    \"lastUpdated\": \"2020-03-23T19:45:50.899Z\",\n    \"formData\": {\n      \"zeroTouch\": true,\n      \"asaFirewallDevice\": \"asa-aws-ansible\",\n      \"hostList\": [],\n      \"checkbox1\": true\n    },\n    \"formId\": \"IAP Artifacts ASA Firewall Object Group Update\",\n    \"workflowId\": \"IAP Artifacts ASA Firewall Object Group Update\",\n    \"description\": \"IAP Artifacts ASA Firewall Object Group Update\",\n    \"gbac\": {\n      \"write\": [],\n      \"read\": []\n    },\n    \"modifiedById\": \"5f3bda043e82cb0740b460d6\",\n    \"modifiedByUsername\": \"justin.cotton\"\n  },\n  \"lastModifiedBy\": \"DSUP-IAP20201:11193\",\n  \"lastRunAt\": null,\n  \"nextRunAt\": null,\n  \"priority\": 0,\n  \"repeatInterval\": null,\n  \"repeatTimezone\": null,\n  \"type\": \"normal\"\n}"
                                  ]
                                }
                              },
                              "required": []
                            }
                          }
                        },
                        "required": []
                      }
                    }
                  },
                  "required": []
                },
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_1",
            "steps": [],
            "view": {
              "col": 2,
              "row": 5
            },
            "id": "ƒ_reduce_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "bundles"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "examples": [
                      "directory"
                    ]
                  },
                  "content": {
                    "type": "string"
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "bundles"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "directory"
                      ]
                    },
                    "content": {
                      "type": "string"
                    }
                  },
                  "required": []
                },
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_stringify return": {
                    "type": "string"
                  }
                },
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "ƒ_map_1",
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_stringify return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "package.json"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "content",
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 5
            },
            "id": "ƒ_map_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "bundles"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "examples": [
                      "directory"
                    ]
                  },
                  "content": {
                    "type": [
                      "string",
                      "array"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "bundles"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "examples": [
                        "directory"
                      ]
                    },
                    "content": {
                      "type": [
                        "string",
                        "array"
                      ]
                    }
                  },
                  "required": []
                },
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_stringify return": {
                    "type": "string"
                  }
                },
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "ƒ_map_2",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "content",
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "package.json"
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_stringify return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 4
            },
            "id": "ƒ_map_2",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 6,
          "row": 6
        },
        "created": "2023-01-26T21:27:00.147Z",
        "createdBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-01-26T21:27:00.147Z",
        "lastUpdatedBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "606b3ceec2cf450099ae523f",
        "name": "convertFormData",
        "description": "",
        "incoming": [
          {
            "$id": "formData",
            "type": "object",
            "properties": {
              "checkInArtifact": {
                "type": "object",
                "properties": {
                  "makeRepoPrivate": {
                    "type": "boolean",
                    "examples": [
                      true,
                      false
                    ]
                  },
                  "reDiscoverArtifact": {
                    "type": "boolean",
                    "examples": [
                      true,
                      false
                    ]
                  },
                  "forExistingGitHubProjects": {
                    "type": "object",
                    "properties": {
                      "pullRequestType": {
                        "type": "string",
                        "examples": [
                          "major"
                        ]
                      },
                      "commitMessage": {
                        "type": "string",
                        "examples": [
                          "Commit"
                        ]
                      },
                      "targetBranch": {
                        "type": "string",
                        "examples": [
                          "main"
                        ]
                      }
                    },
                    "required": []
                  },
                  "gitHubAdapterName": {
                    "type": "string",
                    "examples": [
                      "GitHub"
                    ]
                  },
                  "gitHubRepositoryName": {
                    "type": "string",
                    "examples": [
                      "Environment"
                    ]
                  },
                  "gitHubOrganizationName": {
                    "type": "string",
                    "examples": [
                      "Itential"
                    ]
                  },
                  "artifact": {
                    "type": "string",
                    "examples": [
                      "@itentialopensource/artifact-wizard"
                    ]
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "ArtifactName",
            "type": "string",
            "examples": [
              "ArtifactName"
            ]
          },
          {
            "$id": "ProjectName",
            "type": "string",
            "examples": [
              "ProjectName"
            ]
          },
          {
            "$id": "rediscoverBoolean",
            "type": "boolean",
            "examples": [
              true,
              false
            ]
          },
          {
            "$id": "OrganizationName",
            "type": "string",
            "examples": [
              "OrganizationName"
            ]
          },
          {
            "$id": "CommitMessage",
            "type": "string",
            "examples": [
              "TargetBranch"
            ]
          },
          {
            "$id": "MRType",
            "type": "string",
            "examples": [
              "MRType"
            ]
          },
          {
            "$id": "TargetBranch",
            "type": "string",
            "examples": [
              "TargetBranch"
            ]
          },
          {
            "$id": "Adapter",
            "type": "string",
            "examples": [
              "Adapter"
            ]
          },
          {
            "$id": "privateRepo",
            "type": "boolean",
            "examples": [
              true,
              false
            ]
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/checkInArtifact/makeRepoPrivate"
            },
            "to": {
              "location": "outgoing",
              "name": "privateRepo",
              "ptr": ""
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/checkInArtifact/reDiscoverArtifact"
            },
            "to": {
              "location": "outgoing",
              "name": "rediscoverBoolean",
              "ptr": ""
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/checkInArtifact/forExistingGitHubProjects/pullRequestType"
            },
            "to": {
              "location": "outgoing",
              "name": "MRType",
              "ptr": ""
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/checkInArtifact/forExistingGitHubProjects/commitMessage"
            },
            "to": {
              "location": "outgoing",
              "name": "CommitMessage",
              "ptr": ""
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/checkInArtifact/forExistingGitHubProjects/targetBranch"
            },
            "to": {
              "location": "outgoing",
              "name": "TargetBranch",
              "ptr": ""
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/checkInArtifact/gitHubAdapterName"
            },
            "to": {
              "location": "outgoing",
              "name": "Adapter",
              "ptr": ""
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/checkInArtifact/gitHubRepositoryName"
            },
            "to": {
              "location": "outgoing",
              "name": "ProjectName",
              "ptr": ""
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/checkInArtifact/gitHubOrganizationName"
            },
            "to": {
              "location": "outgoing",
              "name": "OrganizationName",
              "ptr": ""
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formData",
              "ptr": "/checkInArtifact/artifact"
            },
            "to": {
              "location": "outgoing",
              "name": "ArtifactName",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 2,
          "row": 5
        },
        "created": "2023-01-26T21:27:00.086Z",
        "createdBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-01-26T21:27:00.086Z",
        "lastUpdatedBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.0",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "605b86f821c795008dc26118",
        "name": "mergeFormWithDiscovery",
        "description": "",
        "incoming": [
          {
            "$id": "formOutput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "workflows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "workflows"
                  },
                  "catalogAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "catalogAutomations"
                  },
                  "operationsAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "operationsAutomations"
                  },
                  "jsonForms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "jsonForms"
                  },
                  "templates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "templates"
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "forms"
                  },
                  "commandTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "commandTemplates"
                  },
                  "analyticTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "analyticTemplates"
                  },
                  "goldenConfigTrees": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "$id": "goldenConfigTrees"
                  },
                  "transformations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "transformations"
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "discoveryOutput",
            "type": "object",
            "properties": {
              "componentMap": {
                "type": "object",
                "properties": {
                  "workflow": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "ac-agenda-job"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "workflow"
                  },
                  "ac-agenda-job": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "ac-agenda-job"
                  },
                  "automation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "automation"
                  },
                  "transformation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        },
                        "name": {
                          "type": "string"
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "transformation"
                  },
                  "mop-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "mop-template"
                  },
                  "template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "template"
                  },
                  "mop-analytic-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "mop-analytic-template"
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "forms"
                  },
                  "json-forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "json-forms"
                  },
                  "golden-config": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "golden-config"
                  }
                },
                "required": []
              },
              "dependencies": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "@itential/app-workflow_engine"
                  ]
                },
                "$id": "dependencies"
              },
              "invalidComponents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "examples": [
                        "golden-config"
                      ]
                    },
                    "component": {
                      "type": "object",
                      "properties": {
                        "treeId": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    }
                  },
                  "required": []
                },
                "$id": "invalidComponents"
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "formInput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "workflows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "catalogAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "operationsAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "jsonForms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "templates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "commandTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "analyticTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "goldenConfigTrees": {
                    "type": "array"
                  },
                  "transformations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/workflow"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/workflows"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/jsonForms"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/json-forms"
            },
            "to": {
              "location": "method",
              "name": 6,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/templates"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/template"
            },
            "to": {
              "location": "method",
              "name": 7,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 16,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/forms"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 17,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/forms"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/commandTemplates"
            },
            "to": {
              "location": "method",
              "name": 9,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 19,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/mop-template"
            },
            "to": {
              "location": "method",
              "name": 9,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/analyticTemplates"
            },
            "to": {
              "location": "method",
              "name": 20,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/mop-analytic-template"
            },
            "to": {
              "location": "method",
              "name": 20,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 30,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/transformation"
            },
            "to": {
              "location": "method",
              "name": 29,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 31,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/transformations"
            },
            "to": {
              "location": "method",
              "name": 29,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 6,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 7,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 4,
              "col": 2
            }
          },
          {
            "id": 8,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 5,
              "col": 2
            }
          },
          {
            "id": 9,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 6,
              "col": 2
            }
          },
          {
            "id": 20,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 7,
              "col": 2
            }
          },
          {
            "id": 29,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_2",
              null
            ],
            "view": {
              "row": 9,
              "col": 2
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/workflows"
            }
          },
          {
            "id": 24,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 6,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/jsonForms"
            }
          },
          {
            "id": 25,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 7,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/templates"
            }
          },
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/forms"
            }
          },
          {
            "id": 27,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 9,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/commandTemplates"
            }
          },
          {
            "id": 28,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 20,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/analyticTemplates"
            }
          },
          {
            "id": 32,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 29,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/transformations"
            }
          },
          {
            "id": 33,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/ac-agenda-job"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/catalogAutomations"
            }
          },
          {
            "id": 34,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/automation"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/operationsAutomations"
            }
          },
          {
            "id": 35,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_1",
              null
            ],
            "view": {
              "row": 10,
              "col": 2
            }
          },
          {
            "id": 36,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discoveryOutput",
              "ptr": "/componentMap/golden-config"
            },
            "to": {
              "location": "method",
              "name": 35,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 37,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/goldenConfigTrees"
            },
            "to": {
              "location": "method",
              "name": 35,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 38,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 35,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "formInput",
              "ptr": "/components/goldenConfigTrees"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "parent": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "ac-agenda-job"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    },
                    "parent": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "examples": [
                              "zackAll"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "examples": [
                              "ac-agenda-job"
                            ]
                          }
                        },
                        "required": []
                      }
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_1",
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 7,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  "{         \"name\": \"\"       }"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "function",
                "function": "userFunc_1",
                "args": [
                  "",
                  ""
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/isNewComponent"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "name",
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 9,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 21,
                "type": "method",
                "library": "Object",
                "method": "keys",
                "args": [
                  null
                ],
                "view": {
                  "row": 4,
                  "col": 1
                }
              },
              {
                "id": 22,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 23,
                "type": "method",
                "library": "Array",
                "method": "includes",
                "args": [
                  null,
                  "treeId",
                  null
                ],
                "view": {
                  "row": 4,
                  "col": 2
                }
              },
              {
                "id": 24,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 23,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 25,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 4,
                  "col": 3
                }
              },
              {
                "id": 26,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 23,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 25,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 29,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "treeId",
                  null
                ],
                "view": {
                  "row": 5,
                  "col": 2
                }
              },
              {
                "id": 30,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 29,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 31,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 25,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 32,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 33,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 25,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 34,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "treeId"
                ],
                "view": {
                  "row": 5,
                  "col": 1
                }
              },
              {
                "id": 35,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 34,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 36,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 34,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 29,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 37,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 29,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 25,
                  "ptr": "/args/1/value"
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 6
            },
            "id": "ƒ_reduce_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "5f7c62b43451a606c2fb0305"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "examples": [
                      "5f7c62b43451a606c2fb0305"
                    ]
                  },
                  "parent": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "workflow"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "examples": [
                        "5f7c62b43451a606c2fb0305"
                      ]
                    },
                    "parent": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "examples": [
                              "zackAll"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "examples": [
                              "workflow"
                            ]
                          }
                        },
                        "required": []
                      }
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_2",
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 7,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  "{}"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/id"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "function",
                "function": "newComponentCheck_transformations",
                "args": [
                  "",
                  ""
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/inNewComponent"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "id",
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 16,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "name",
                  null
                ],
                "view": {
                  "row": 4,
                  "col": 2
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 19,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "name"
                ],
                "view": {
                  "row": 4,
                  "col": 1
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 16,
                  "ptr": "/args/2/value"
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 6
            },
            "id": "ƒ_reduce_2",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                }
              },
              {
                "$id": "currentDiscoveredElement",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "parent": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "ac-agenda-job"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            ],
            "outgoing": [
              {
                "$id": "isNewComponent",
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              }
            ],
            "functions": [],
            "name": "newComponentCheck",
            "steps": [
              {
                "id": 1,
                "type": "declaration",
                "library": "Boolean",
                "method": "new Boolean",
                "args": [
                  "1"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentDiscoveredElement",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/3/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Array",
                "method": "reduce",
                "args": [
                  null,
                  "newCompunentCheck_reduce",
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "isNewComponent",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 2,
              "row": 6
            },
            "id": "userFunc_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                },
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  }
                },
                "isContext": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "newCompunentCheck_reduce",
            "steps": [
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_name"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 10,
                "type": "declaration",
                "library": "Number",
                "method": "new Number",
                "args": [
                  "0"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "declaration",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "declaration",
                "library": "Boolean",
                "method": "new Boolean",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 6
            },
            "id": "newCompunentCheck_reduce",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "accumulator",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "5f7c62b43451a606c2fb0305"
                      ]
                    }
                  },
                  "required": []
                }
              },
              {
                "$id": "curentDiscoveredJST",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "examples": [
                      "5f7c62b43451a606c2fb0305"
                    ]
                  }
                },
                "required": []
              }
            ],
            "outgoing": [
              {
                "$id": "inNewComponent",
                "type": "boolean",
                "examples": [
                  true,
                  false
                ]
              }
            ],
            "functions": [],
            "name": "newComponentCheck_transformations",
            "steps": [
              {
                "id": 1,
                "type": "declaration",
                "library": "Boolean",
                "method": "new Boolean",
                "args": [
                  "1"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "curentDiscoveredJST",
                  "ptr": "/id"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/3/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Array",
                "method": "reduce",
                "args": [
                  null,
                  "newComponentCheck_JST_reduce",
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "inNewComponent",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 6
            },
            "id": "newComponentCheck_transformations",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "examples": [
                      "5f7c62b43451a606c2fb0305"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "5f7c62b43451a606c2fb0305"
                      ]
                    }
                  },
                  "required": []
                },
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {
                  "0_id": {
                    "type": "string",
                    "examples": [
                      "5f7c62b43451a606c2fb0305"
                    ]
                  }
                },
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "newComponentCheck_JST_reduce",
            "steps": [
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/id"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "thisArg",
                  "ptr": "/0_id"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 10,
                "type": "declaration",
                "library": "Number",
                "method": "new Number",
                "args": [
                  "0"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "declaration",
                "library": "Boolean",
                "method": "new Boolean",
                "args": [
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 6
            },
            "id": "newComponentCheck_JST_reduce",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 4,
          "row": 11
        },
        "created": "2023-01-26T21:27:00.151Z",
        "createdBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-01-26T21:27:00.151Z",
        "lastUpdatedBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "6210015da161ae00ef6164b4",
        "name": "convertArtifactInfoToForm",
        "description": "",
        "incoming": [
          {
            "$id": "input",
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "examples": [
                  "5f3c38e78cd2e02bacdd59eb"
                ]
              },
              "name": {
                "type": "string",
                "examples": [
                  "@itentialopensource/asa-firewall-object-group-update"
                ]
              },
              "version": {
                "type": "string",
                "examples": [
                  "0%2E0%2E11-2020%2E1%2E1"
                ]
              },
              "description": {
                "type": "string",
                "examples": [
                  "This artifact contains the Cisco ASA group policy object update workflow for Ansible using IAP"
                ]
              },
              "license": {
                "type": "string",
                "examples": [
                  "Apache-2%2E0"
                ]
              },
              "repository": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "git"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "examples": [
                      "https://gitlab%2Ecom:itentialopensource/pre-built-automations/asa-firewall-object-group-update%2Egit"
                    ]
                  }
                },
                "required": []
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential"
                  ]
                },
                "$id": "keywords"
              },
              "IAPDependencies": {
                "type": "object",
                "properties": {
                  "@itential/app-automation_catalog": {
                    "type": "string",
                    "examples": [
                      "2%2E6%2E3"
                    ]
                  },
                  "@itential/app-json_forms": {
                    "type": "string",
                    "examples": [
                      "1%2E14%2E1"
                    ]
                  },
                  "@itential/app-workflow_engine": {
                    "type": "string",
                    "examples": [
                      "7%2E9%2E4"
                    ]
                  }
                },
                "required": []
              },
              "gitlabId": {
                "type": "integer",
                "examples": [
                  17671583
                ]
              },
              "author": {
                "type": "string",
                "examples": [
                  "Itential Artifacts"
                ]
              },
              "components": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                },
                "$id": "components"
              },
              "readme": {
                "type": "string",
                "examples": [
                  "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->\n<!-- Update the below line with your artifact name -->\n# ASA Firewall Object Group Update \n<!-- Add a short description or tag-line -->\nThis artifact contains the Cisco ASA group policy object update workflow for Ansible using IAP%2E  This workflow is designed to create and/or update an existing group object to add and remove hosts on a Cisco ASA firewall physical and virtual devices via Ansible%2E\n​​\n<!-- Leave TOC intact unless you've added or removed headers -->\n## Table of Contents\n​\n- [Overview](#overview)\n- [Features](#features)\n- [Requirements](#requirements)\n- [Future Enhancements](#future-enhancements)\n- [How to Install](#how-to-install)\n- [How to Run](#how-to-run)\n- [Additional Information](#additional-information)\n​\n## Overview\n<!-- Write a few sentences about the artifact and explain the use case(s) -->\n<!-- Ex%2E: The Migration Wizard enables IAP users to conveniently move their automation use cases between their different IAP environments -->\n<!--  (e%2Eg%2E from Dev to Pre-Production or from Lab to Production)%2E  -->\nThis artifact contains the Cisco ASA group policy object update workflow for Ansible using IAP%2E  This workflow is designed to create and/or update an existing group object to add and remove hosts on a Cisco ASA firewall physical and virtual devices via Ansible%2E\n​\nThis solution consists of the following:\n* Main Workflow (**IAP-Artifacts ASA Firewall Group Policy Update**)\n* Automation Catalog entry (**IAP Artifacts ASA Firewall Object Group Update**)\n* JSON Form (**IAP Artifacts ASA Firewall Object Group Update**)\n​\n<!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GITLAB -->\n<table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/ASA-Firewall-Object-Group-Update/raw/master/images/overview.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n\n​\n## Features\n<!-- Bullet point highlighting the most exciting features of the artifact -->\n<!-- Ex%2E: * Automatically checks for device type -->\n<!-- Ex%2E: * Displays dry-run to user (asking for confirmation) prior to pushing config to the device -->\n<!-- Ex%2E: * Verifies downloaded file integrity (using md5), will try to download again if failed -->\n  * Group Update Host Addition and Removal%2E\n  * Allow for a rollback in case functionality checks have failed%2E\n  * Zero touch mode of operation is available to select via JSON form%2E\n​\n## Requirements\n<!-- Explain any pre-req%2E Ex%2E: This artifact requires Ansible or NSO (with F5 NED) in order to run -->\nThis artifact requires Ansible, Itential Automation Gateway, and a Cisco ASA device%2E\n​\n## Supported Device Types\n  * Cisco ASA/ASAv\n​\n## Test Environment\n  * Devices Ver%2E:\n    * asa: 9%2E12\n  * IAP Ver%2E 2019%2E3%2E2\n  * Itential Automation Gateway Ver%2E: 2%2E36%2E3+2019%2E3%2E14\n  * Ansible Ver%2E: 2%2E8%2E3\n​\n## Future Enhancements\n<!-- OPTIONAL Mention If the artifact has known limited support%2E Ex%2E: This artifact only support Cisco IOS and XR devices -->\n* This workflow is designed to run only against Ansible devices; don't try to run it against Cisco-ASA devices orchastrated by Cisco NSO%2E\n* Form validation on list of hosts only supports IPv4 addresses\n​\n## How to Install\n<!-- OPTIONAL - Explain if external (to IAP) components are required%2E Ex%2E The ansible roles required for this artifact can be found in www%2Egitlab%2Ecom/itentialopensource%2E%2E%2E%2E%2E%2E   -->\n * To install this artifact in IAP, use **App-Artifact** available in Nexus repo%2E \n <table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/ASA-Firewall-Object-Group-Update/raw/master/images/install.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n​\n\n## How to Run\n<!-- Explain what is/are the main entrypoint(s) for this artifact: automation catalog document, workflow builder, postman, etc%2E  -->\nStarting the ASA Firewall Group Policy Update is done via the Automation Catalog%2E Please provide the device, group and hosts in the provided form%2E\n <table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/ASA-Firewall-Object-Group-Update/raw/master/images/runAutomation.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n\n## Additional Information\nPlease use your Itential Customer Success account if you need support when using this artifact%2E\n"
                ]
              },
              "manifest": {
                "type": "object",
                "properties": {
                  "bundleName": {
                    "type": "string",
                    "examples": [
                      "ASA Firewall Object Group Update"
                    ]
                  },
                  "fingerprint": {
                    "type": "string",
                    "examples": [
                      "5e7917201b809a70972fc6e5"
                    ]
                  },
                  "createdEpoch": {
                    "type": "string",
                    "examples": [
                      "1584994080756"
                    ]
                  },
                  "artifacts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "IAP Artifacts ASA Firewall Object Group Update"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "examples": [
                            "IAP Artifacts ASA Firewall Object Group Update"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "ac-agenda-job"
                          ]
                        },
                        "location": {
                          "type": "string",
                          "examples": [
                            "/bundles/ac_agenda_jobs/IAP Artifacts ASA Firewall Object Group Update%2Ejson"
                          ]
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "entryPoint": {
                              "type": "boolean",
                              "examples": [
                                true,
                                false
                              ]
                            }
                          },
                          "required": []
                        }
                      },
                      "required": []
                    },
                    "$id": "artifacts"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "output",
            "type": "object",
            "properties": {
              "componentMap": {
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "automation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "workflow": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "json-forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "mop-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "mop-analytic-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "golden-config": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "treeId": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "transformation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "trigger": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "prit"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f6a4e3657b8159234644bdd"
                          ]
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              {
                "ac-agenda-job": [],
                "automation": [],
                "workflow": [],
                "json-forms": [],
                "forms": [],
                "template": [],
                "mop-template": [],
                "mop-analytic-template": [],
                "golden-config": [],
                "transformation": [],
                "trigger": []
              }
            ],
            "view": {
              "row": 2,
              "col": 1
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "input",
              "ptr": "/components"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 2,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 1,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 1,
            "type": "method",
            "library": "Array",
            "method": "reduce",
            "args": [
              null,
              "ƒ_reduce_3",
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "output",
              "ptr": "/componentMap"
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "workflow"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "examples": [
                      "22a02846-c48a-4ced-9609-4e40c7f0eec1"
                    ],
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string",
                    "examples": [
                      "IAP Artifacts ASA Firewall Object Group Update"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "examples": [
                        "workflow"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "22a02846-c48a-4ced-9609-4e40c7f0eec1"
                      ],
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string",
                      "examples": [
                        "IAP Artifacts ASA Firewall Object Group Update"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "sortComponent",
            "steps": [
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/id"
                },
                "to": {
                  "location": "function",
                  "name": 15,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "function",
                  "name": 15,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "function",
                  "name": 15,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 15,
                "type": "function",
                "function": "userFunc_1",
                "args": [
                  "",
                  "",
                  ""
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 19,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 20,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 21,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 22,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 23,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 24,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 19,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 25,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 15,
                  "ptr": "/return/output"
                },
                "to": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 26,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 27,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 28,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 29,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 21,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 4
            },
            "id": "ƒ_reduce_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object"
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_2",
            "steps": [
              {
                "id": 1,
                "type": "function",
                "function": "setIdentifier",
                "args": [],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  "treeId",
                  "id"
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "golden-config"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 12,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 5
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/output"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 5,
              "row": 4
            },
            "id": "ƒ_reduce_2",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_3",
            "steps": [
              {
                "id": 1,
                "type": "function",
                "function": "formatComponents",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 6,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/output"
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/type"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 4
            },
            "id": "ƒ_reduce_3",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "ƒ_map_1",
            "steps": [],
            "view": {
              "col": 1,
              "row": 4
            },
            "id": "ƒ_map_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "name",
                "type": "string",
                "examples": [
                  "name"
                ]
              },
              {
                "$id": "_id",
                "type": "string",
                "examples": [
                  "_id"
                ]
              },
              {
                "$id": "type",
                "type": "string",
                "examples": [
                  "fdsa"
                ]
              }
            ],
            "outgoing": [
              {
                "$id": "output",
                "type": "object",
                "properties": {},
                "required": []
              }
            ],
            "functions": [],
            "name": "nameId",
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  "{}"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 9,
                "type": "declaration",
                "library": "Object",
                "method": "new Object",
                "args": [
                  "{}"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "name",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "_id",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "name",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "_id",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "transformation"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "declaration",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "name",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 10,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "name",
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "id",
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "_id",
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "output",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 4
            },
            "id": "userFunc_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "input",
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array"
                  },
                  "workflow": {
                    "type": "array"
                  },
                  "json-forms": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "template": {
                    "type": "array"
                  },
                  "mop-template": {
                    "type": "array"
                  },
                  "mop-analytic-template": {
                    "type": "array"
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array"
                  }
                },
                "required": []
              },
              {
                "$id": "itemToPush",
                "type": "object",
                "properties": {},
                "required": []
              },
              {
                "$id": "type",
                "type": "string",
                "examples": [
                  "type"
                ]
              }
            ],
            "outgoing": [
              {
                "$id": "output",
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array"
                  },
                  "workflow": {
                    "type": "array"
                  },
                  "json-forms": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "template": {
                    "type": "array"
                  },
                  "mop-template": {
                    "type": "array"
                  },
                  "mop-analytic-template": {
                    "type": "array"
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array"
                  }
                },
                "required": []
              }
            ],
            "functions": [],
            "name": "pushComponent",
            "steps": [
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "itemToPush",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "input",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 13,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "input",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "output",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 3,
              "row": 4
            },
            "id": "userFunc_2",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              },
              {
                "type": "object",
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "type": "array",
                "items": {
                  "type": "object"
                },
                "$id": "array",
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true,
                "isIndexed": true
              }
            ],
            "outgoing": [
              {
                "title": "accumulator",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "$id": "accumulator"
              }
            ],
            "functions": [],
            "name": "ƒ_reduce_2 (1)",
            "steps": [
              {
                "id": 1,
                "type": "function",
                "function": "setIdentifier",
                "args": [
                  "",
                  "",
                  ""
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 2,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  "treeId",
                  "id"
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "golden-config"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": ""
                },
                "to": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 11,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 12,
                "type": "method",
                "library": "Array",
                "method": "push",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 4
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 5
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 11,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "function",
                  "name": 1,
                  "ptr": "/return/output"
                },
                "to": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 18,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 12,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "accumulator",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 4,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "accumulator",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 5,
              "row": 4
            },
            "id": "ƒ_reduce_2 (1)",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "idType",
                "type": "string"
              },
              {
                "$id": "componentObject",
                "type": "object"
              },
              {
                "$id": "type",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "output",
                "type": "object"
              }
            ],
            "functions": [],
            "name": "setIdentifier",
            "steps": [
              {
                "id": 2,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "componentObject",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "idType",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 6,
                "type": "method",
                "library": "Object",
                "method": "deleteProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 7,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "componentObject",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 8,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 9,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "transformation"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 10,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 9,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 3
                }
              },
              {
                "id": 15,
                "type": "method",
                "library": "Object",
                "method": "deleteProperty",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 18,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "golden-config"
                ],
                "view": {
                  "row": 1,
                  "col": 2
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 18,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  "treeId",
                  "_id"
                ],
                "view": {
                  "row": 1,
                  "col": 3
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 18,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 22,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 20,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 23,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 6,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 24,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 2,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 25,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "idType",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 26,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 8,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "output",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 4
            },
            "id": "setIdentifier",
            "comments": []
          },
          {
            "incoming": [
              {
                "$id": "componentObject",
                "type": "object"
              },
              {
                "$id": "type",
                "type": "string"
              }
            ],
            "outgoing": [
              {
                "$id": "output",
                "type": "object"
              }
            ],
            "functions": [],
            "name": "formatComponents",
            "steps": [
              {
                "id": 1,
                "type": "method",
                "library": "Object",
                "method": "deleteProperty",
                "args": [
                  null,
                  "type"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "componentObject",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 3,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "transformation"
                ],
                "view": {
                  "row": 2,
                  "col": 1
                }
              },
              {
                "id": 4,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 5,
                "type": "method",
                "library": "Equality",
                "method": "equality",
                "args": [
                  null,
                  "golden-config"
                ],
                "view": {
                  "row": 3,
                  "col": 1
                }
              },
              {
                "id": 6,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "type",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 7,
                "type": "method",
                "library": "Logical",
                "method": "or",
                "args": [
                  null,
                  null
                ],
                "view": {
                  "row": 2,
                  "col": 2
                }
              },
              {
                "id": 8,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 3,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 9,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 5,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 10,
                "type": "method",
                "library": "Conditional",
                "method": "ternary",
                "args": [
                  null,
                  null,
                  null
                ],
                "view": {
                  "row": 1,
                  "col": 4
                }
              },
              {
                "id": 11,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 7,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 12,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/1/value"
                }
              },
              {
                "id": 13,
                "type": "method",
                "library": "Object",
                "method": "setProperty",
                "args": [
                  null,
                  "_id",
                  null
                ],
                "view": {
                  "row": 3,
                  "col": 3
                }
              },
              {
                "id": 14,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 15,
                "type": "method",
                "library": "Object",
                "method": "getProperty",
                "args": [
                  null,
                  "id"
                ],
                "view": {
                  "row": 3,
                  "col": 2
                }
              },
              {
                "id": 16,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 17,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 15,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 18,
                "type": "method",
                "library": "Object",
                "method": "deleteProperty",
                "args": [
                  null,
                  "id"
                ],
                "view": {
                  "row": 3,
                  "col": 4
                }
              },
              {
                "id": 19,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 13,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 18,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 20,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 18,
                  "ptr": "/return"
                },
                "to": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/args/2/value"
                }
              },
              {
                "id": 21,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 10,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "output",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 4,
              "row": 4
            },
            "id": "formatComponents",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 3,
          "row": 4
        },
        "created": "2023-01-26T21:27:00.159Z",
        "createdBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-01-26T21:27:00.159Z",
        "lastUpdatedBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "605b86d521c795008dc26117",
        "name": "convertFormOutputToDiscoveryFormatGitHub",
        "description": "",
        "incoming": [
          {
            "$id": "formOutput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "catalogAutomations": {
                    "type": "array"
                  },
                  "operationsAutomations": {
                    "type": "array"
                  },
                  "workflows": {
                    "type": "array"
                  },
                  "jsonForms": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "templates": {
                    "type": "array"
                  },
                  "commandTemplates": {
                    "type": "array"
                  },
                  "analyticTemplates": {
                    "type": "array"
                  },
                  "goldenConfigTrees": {
                    "type": "array"
                  },
                  "transformations": {
                    "type": "array"
                  },
                  "triggers": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "discoveryEntryPoint",
            "type": "object",
            "properties": {
              "catalogAutomation": {
                "type": [
                  "null",
                  "array"
                ],
                "items": {
                  "type": "string",
                  "examples": [
                    "zackAll"
                  ]
                }
              },
              "workflow": {
                "type": [
                  "null",
                  "array"
                ]
              },
              "transformation": {
                "type": [
                  "null",
                  "array"
                ]
              },
              "operationsAutomation": {
                "type": [
                  "null",
                  "array"
                ]
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              {
                "catalogAutomation": [],
                "workflow": [],
                "transformation": [],
                "operationsAutomation": []
              }
            ],
            "view": {
              "row": 1,
              "col": 3
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/workflows"
            },
            "to": {
              "location": "function",
              "name": 3,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 2,
            "type": "function",
            "function": "userFunc_1",
            "args": [
              ""
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 3,
            "type": "function",
            "function": "userFunc_1",
            "args": [
              ""
            ],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 1,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 2,
              "ptr": "/return/arrayedNames"
            },
            "to": {
              "location": "method",
              "name": 8,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 3,
              "ptr": "/return/arrayedNames"
            },
            "to": {
              "location": "method",
              "name": 11,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 8,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "catalogAutomation",
              null
            ],
            "view": {
              "row": 2,
              "col": 3
            }
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 8,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 11,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 11,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "workflow",
              null
            ],
            "view": {
              "row": 3,
              "col": 3
            }
          },
          {
            "id": 14,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 11,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 13,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 13,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "transformation",
              []
            ],
            "view": {
              "row": 4,
              "col": 3
            }
          },
          {
            "id": 21,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/catalogAutomations"
            },
            "to": {
              "location": "function",
              "name": 2,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 22,
            "type": "function",
            "function": "userFunc_1",
            "args": [
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/operationsAutomations"
            },
            "to": {
              "location": "function",
              "name": 22,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 24,
            "type": "method",
            "library": "Object",
            "method": "setProperty",
            "args": [
              null,
              "operationsAutomation",
              null
            ],
            "view": {
              "row": 5,
              "col": 3
            }
          },
          {
            "id": 25,
            "type": "assign",
            "from": {
              "location": "function",
              "name": 22,
              "ptr": "/return/arrayedNames"
            },
            "to": {
              "location": "method",
              "name": 24,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 13,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 24,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 27,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 24,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "discoveryEntryPoint",
              "ptr": ""
            }
          }
        ],
        "functions": [
          {
            "incoming": [
              {
                "$id": "componentArray",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                }
              }
            ],
            "outgoing": [
              {
                "$id": "arrayedNames",
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "zackAll"
                  ]
                }
              }
            ],
            "functions": [],
            "name": "process\\Array",
            "steps": [
              {
                "id": 2,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "componentArray",
                  "ptr": ""
                },
                "to": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/args/0/value"
                }
              },
              {
                "id": 1,
                "type": "method",
                "library": "Array",
                "method": "map",
                "args": [
                  null,
                  "ƒ_map_1"
                ],
                "view": {
                  "row": 1,
                  "col": 1
                }
              },
              {
                "id": 3,
                "type": "assign",
                "from": {
                  "location": "method",
                  "name": 1,
                  "ptr": "/return"
                },
                "to": {
                  "location": "outgoing",
                  "name": "arrayedNames",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 2,
              "row": 7
            },
            "id": "userFunc_1",
            "comments": []
          },
          {
            "incoming": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  }
                },
                "required": [],
                "$id": "currentValue"
              },
              {
                "title": "index",
                "type": "number",
                "optional": true,
                "$id": "index"
              },
              {
                "$id": "array",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                },
                "optional": true
              },
              {
                "$id": "thisArg",
                "type": "object",
                "properties": {},
                "isContext": true,
                "isThis": true
              }
            ],
            "outgoing": [
              {
                "title": "newValue",
                "type": [
                  "array",
                  "boolean",
                  "number",
                  "integer",
                  "string",
                  "object",
                  "null"
                ],
                "editable": true,
                "$id": "newValue"
              }
            ],
            "functions": [],
            "name": "ƒ_map_1",
            "steps": [
              {
                "id": 1,
                "type": "assign",
                "from": {
                  "location": "incoming",
                  "name": "currentValue",
                  "ptr": "/name"
                },
                "to": {
                  "location": "outgoing",
                  "name": "newValue",
                  "ptr": ""
                }
              }
            ],
            "view": {
              "col": 1,
              "row": 7
            },
            "id": "ƒ_map_1",
            "comments": []
          }
        ],
        "comments": [],
        "view": {
          "col": 4,
          "row": 7
        },
        "created": "2023-01-26T21:27:00.171Z",
        "createdBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-01-26T21:27:00.171Z",
        "lastUpdatedBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "605b870f21c795008dc26119",
        "name": "createArtifactForPublish",
        "description": "",
        "incoming": [
          {
            "$id": "AEartifactInfo",
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "examples": [
                  "5f7c62f0b80b0a2a91782437"
                ]
              },
              "name": {
                "type": "string",
                "examples": [
                  "@itentialopensource/zackall"
                ]
              },
              "version": {
                "type": "string",
                "examples": [
                  "0.0.1"
                ]
              },
              "description": {
                "type": "string",
                "examples": [
                  "zackAll"
                ]
              },
              "author": {
                "type": "string",
                "examples": [
                  "Itential Artifacts"
                ]
              },
              "repository": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "git"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "examples": [
                      "https://gitlab.com/itentialopensource/pre-built-automations/"
                    ]
                  }
                },
                "required": []
              },
              "license": {
                "type": "string",
                "examples": [
                  "Apache-2.0"
                ]
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential"
                  ]
                },
                "$id": "keywords"
              },
              "IAPDependencies": {
                "type": "object",
                "properties": {
                  "@itential/app-automation_catalog": {
                    "type": "string"
                  },
                  "@itential/app-json_forms": {
                    "type": "string"
                  },
                  "@itential/app-workflow_engine": {
                    "type": "string"
                  },
                  "@itential/app-mop": {
                    "type": "string"
                  },
                  "@itential/app-template_builder": {
                    "type": "string"
                  },
                  "@itential/app-form_builder": {
                    "type": "string"
                  }
                },
                "required": []
              },
              "gitlabId": {
                "type": "integer",
                "examples": [
                  1601987312797
                ]
              },
              "components": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "examples": [
                        "ac-agenda-job"
                      ]
                    },
                    "id": {
                      "type": "string",
                      "examples": [
                        "5f7c622d038374d99a024d66"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "examples": [
                        "zackAll"
                      ]
                    }
                  },
                  "required": []
                },
                "$id": "components"
              },
              "readme": {
                "type": "string",
                "examples": [
                  "zackAll"
                ]
              },
              "manifest": {
                "type": "object",
                "properties": {
                  "bundleName": {
                    "type": "string",
                    "examples": [
                      "ZackAll"
                    ]
                  },
                  "fingerprint": {
                    "type": "string",
                    "examples": [
                      "5f7c62f077c8212a9141d822"
                    ]
                  },
                  "createdEpoch": {
                    "type": "string",
                    "examples": [
                      "1601987312364"
                    ]
                  },
                  "artifacts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "examples": [
                            "ac-agenda-job"
                          ]
                        },
                        "location": {
                          "type": "string",
                          "examples": [
                            "/bundles/ac_agenda_jobs/zackAll.json"
                          ]
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "entryPoint": {
                              "type": "boolean",
                              "examples": [
                                true,
                                false
                              ]
                            }
                          },
                          "required": []
                        }
                      },
                      "required": []
                    },
                    "$id": "artifacts"
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "formOutput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "catalogAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "catalogAutomations"
                  },
                  "operationsAutomations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "operationsAutomations"
                  },
                  "workflows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "workflows"
                  },
                  "jsonForms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "jsonForms"
                  },
                  "templates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "templates"
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "Demo"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "forms"
                  },
                  "commandTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "commandTemplates"
                  },
                  "analyticTemplates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "analyticTemplates"
                  },
                  "transformations": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "transformations"
                  },
                  "goldenConfigTrees": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "treeId": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "goldenConfigTrees"
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "discovery",
            "type": "object",
            "properties": {
              "componentMap": {
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "ac-agenda-job"
                  },
                  "automation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    },
                    "$id": "automation"
                  },
                  "workflow": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "ac-agenda-job"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "workflow"
                  },
                  "json-forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c6221e607880ade9b11bb"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "ac-agenda-job"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "json-forms"
                  },
                  "mop-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "mop-template"
                  },
                  "template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "template"
                  },
                  "mop-analytic-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "mop-analytic-template"
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "forms"
                  },
                  "transformation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "transformation"
                  },
                  "golden-config": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "treeId": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    },
                    "$id": "golden-config"
                  }
                },
                "required": []
              },
              "dependencies": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "@itential/app-automation_catalog"
                  ]
                },
                "$id": "dependencies"
              },
              "invalidComponents": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "examples": [
                        "golden-config"
                      ]
                    },
                    "component": {
                      "type": "object",
                      "properties": {
                        "treeId": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          },
                          "$id": "parent"
                        }
                      },
                      "required": []
                    }
                  },
                  "required": []
                },
                "$id": "invalidComponents"
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "mata",
            "type": "object",
            "properties": {
              "metadata": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "examples": [
                      "ZackAll"
                    ]
                  },
                  "description": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "contributor": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "readme": {
                    "type": "string",
                    "examples": [
                      "zackAll"
                    ]
                  },
                  "license": {
                    "type": "string"
                  },
                  "categories": {
                    "type": "array"
                  },
                  "keywords": {
                    "type": "array"
                  },
                  "dependencies": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "@itential/app-automation_catalog"
                      ]
                    }
                  }
                },
                "required": []
              },
              "components": {
                "type": "object",
                "properties": {
                  "ac-agenda-job": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "automation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c622d038374d99a024d66"
                          ]
                        }
                      },
                      "required": []
                    }
                  },
                  "workflow": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "ac-agenda-job"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "json-forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "_id": {
                          "type": "string",
                          "examples": [
                            "5f7c6221e607880ade9b11bb"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "ac-agenda-job"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "forms": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "mop-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "mop-analytic-template": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "examples": [
                            "zackAll"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "examples": [
                            "5f7c62b43451a606c2fb0305"
                          ]
                        },
                        "parent": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "examples": [
                                  "zackAll"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "examples": [
                                  "workflow"
                                ]
                              }
                            },
                            "required": []
                          }
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": []
              }
            },
            "required": []
          },
          {
            "$id": "packageJSON",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "examples": [
                  "@itentialopensource/artifact-template"
                ]
              },
              "version": {
                "type": "string",
                "examples": [
                  "0.0.5"
                ]
              },
              "description": {
                "type": "string",
                "examples": [
                  "Template for creating new artifacts"
                ]
              },
              "scripts": {
                "type": "object",
                "properties": {
                  "test": {
                    "type": "string",
                    "examples": [
                      "echo \"Error: no test specified\" && exit 1"
                    ]
                  },
                  "deploy": {
                    "type": "string",
                    "examples": [
                      "echo not needed npm publish --access=public --registry=http://registry.npmjs.org"
                    ]
                  },
                  "validateSchema": {
                    "type": "string",
                    "examples": [
                      "node test/manifestTester.js manifest.json manifest-schema.json"
                    ]
                  },
                  "validateSchemaLinks": {
                    "type": "string",
                    "examples": [
                      "node test/manifestLinkTester.js manifest.json"
                    ]
                  },
                  "generateImageLinks": {
                    "type": "string",
                    "examples": [
                      "node utils/generateImageLinks.js"
                    ]
                  }
                },
                "required": []
              },
              "repository": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "examples": [
                      "git"
                    ]
                  },
                  "url": {
                    "type": "string",
                    "examples": [
                      "https://gitlab.com/itentialopensource/pre-built-automations/artifact-template.git"
                    ]
                  }
                },
                "required": []
              },
              "keywords": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential"
                  ]
                }
              },
              "contributors": {
                "type": "array",
                "items": {
                  "type": "string",
                  "examples": [
                    "Itential Artifacts"
                  ]
                }
              },
              "author": {
                "type": "string",
                "examples": [
                  "Itential Artifacts"
                ]
              },
              "license": {
                "type": "string",
                "examples": [
                  "Apache-2.0"
                ]
              },
              "devDependencies": {
                "type": "object",
                "properties": {
                  "r2": {
                    "type": "string",
                    "examples": [
                      "^2.0.1"
                    ]
                  },
                  "ajv": {
                    "type": "string",
                    "examples": [
                      "6.10.0"
                    ]
                  },
                  "better-ajv-errors": {
                    "type": "string",
                    "examples": [
                      "^0.6.1"
                    ]
                  },
                  "fs-extra": {
                    "type": "string",
                    "examples": [
                      "^7.0.1"
                    ]
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/readme"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/readme"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/description"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/description"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/repository"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/repository"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/version"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/version"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/keywords"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/keywords"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/license"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/license"
            }
          },
          {
            "id": 11,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              "{         \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",         \"deploy\": \"echo not needed npm publish --access=public --registry=http://registry.npmjs.org\",         \"validateSchema\": \"node test/manifestTester.js manifest.json manifest-schema.json\",         \"validateSchemaLinks\": \"node test/manifestLinkTester.js manifest.json\",         \"generateImageLinks\": \"node utils/generateImageLinks.js\"     }"
            ],
            "view": {
              "row": 9,
              "col": 3
            }
          },
          {
            "id": 13,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/author"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/author"
            }
          },
          {
            "id": 14,
            "type": "declaration",
            "library": "Object",
            "method": "new Object",
            "args": [
              "{         \"r2\": \"^2.0.1\",         \"ajv\": \"6.10.0\",         \"better-ajv-errors\": \"^0.6.1\",         \"fs-extra\": \"^7.0.1\"     }"
            ],
            "view": {
              "row": 11,
              "col": 3
            }
          },
          {
            "id": 17,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [
              "Itential Artifacts"
            ],
            "view": {
              "row": 10,
              "col": 3
            },
            "polymorphIndex": 0
          },
          {
            "id": 19,
            "type": "declaration",
            "library": "String",
            "method": "new String",
            "args": [
              "Itential Artifacts"
            ],
            "view": {
              "row": 1,
              "col": 4
            }
          },
          {
            "id": 21,
            "type": "declaration",
            "library": "Array",
            "method": "new Array",
            "args": [],
            "view": {
              "row": 2,
              "col": 4
            },
            "polymorphIndex": 0
          },
          {
            "id": 25,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/workflows"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/workflow"
            }
          },
          {
            "id": 26,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/jsonForms"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/json-forms"
            }
          },
          {
            "id": 27,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/forms"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/forms"
            }
          },
          {
            "id": 28,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/templates"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/template"
            }
          },
          {
            "id": 29,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/commandTemplates"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/mop-template"
            }
          },
          {
            "id": 30,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/analyticTemplates"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/mop-analytic-template"
            }
          },
          {
            "id": 31,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/transformations"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/transformation"
            }
          },
          {
            "id": 32,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "discovery",
              "ptr": "/dependencies"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/dependencies"
            }
          },
          {
            "id": 48,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/name"
            },
            "to": {
              "location": "method",
              "name": 47,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 59,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/name"
            },
            "to": {
              "location": "method",
              "name": 35,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 12,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 11,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/scripts"
            }
          },
          {
            "id": 15,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 14,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/devDependencies"
            }
          },
          {
            "id": 18,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 17,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/contributors"
            }
          },
          {
            "id": 20,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 19,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/contributor"
            }
          },
          {
            "id": 22,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 21,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/categories"
            }
          },
          {
            "id": 23,
            "type": "assign",
            "from": {
              "location": "declaration",
              "name": 21,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/keywords"
            }
          },
          {
            "id": 41,
            "type": "method",
            "library": "String",
            "method": "includes",
            "args": [
              null,
              "/",
              null
            ],
            "view": {
              "row": 1,
              "col": 2
            }
          },
          {
            "id": 47,
            "type": "method",
            "library": "String",
            "method": "split",
            "args": [
              null,
              "/",
              null
            ],
            "view": {
              "row": 4,
              "col": 1
            }
          },
          {
            "id": 43,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 41,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 35,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 50,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 47,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 49,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 53,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 47,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 52,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 52,
            "type": "method",
            "library": "Array",
            "method": "length",
            "args": [
              null
            ],
            "view": {
              "row": 2,
              "col": 2
            }
          },
          {
            "id": 56,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 52,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 55,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 55,
            "type": "method",
            "library": "Math",
            "method": "subtract",
            "args": [
              null,
              1
            ],
            "view": {
              "row": 2,
              "col": 3
            }
          },
          {
            "id": 57,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 55,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 49,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 49,
            "type": "method",
            "library": "Array",
            "method": "getIndex",
            "args": [
              null,
              null
            ],
            "view": {
              "row": 3,
              "col": 2
            }
          },
          {
            "id": 58,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 49,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 35,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 35,
            "type": "method",
            "library": "Conditional",
            "method": "ternary",
            "args": [
              null,
              null,
              null
            ],
            "view": {
              "row": 1,
              "col": 3
            }
          },
          {
            "id": 36,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 35,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/metadata/name"
            }
          },
          {
            "id": 60,
            "type": "method",
            "library": "String",
            "method": "concat",
            "args": [
              null,
              "/",
              "artifact-template"
            ],
            "view": {
              "row": 8,
              "col": 4
            }
          },
          {
            "id": 62,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 60,
              "ptr": "/return"
            },
            "to": {
              "location": "outgoing",
              "name": "packageJSON",
              "ptr": "/name"
            }
          },
          {
            "id": 64,
            "type": "method",
            "library": "Conditional",
            "method": "ternary",
            "args": [
              null,
              null,
              null
            ],
            "view": {
              "row": 3,
              "col": 3
            }
          },
          {
            "id": 66,
            "type": "method",
            "library": "Array",
            "method": "getIndex",
            "args": [
              null,
              0
            ],
            "view": {
              "row": 5,
              "col": 3
            }
          },
          {
            "id": 69,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 47,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 66,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 70,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 66,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 64,
              "ptr": "/args/1/value"
            }
          },
          {
            "id": 71,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 41,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 64,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 72,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/name"
            },
            "to": {
              "location": "method",
              "name": 64,
              "ptr": "/args/2/value"
            }
          },
          {
            "id": 73,
            "type": "assign",
            "from": {
              "location": "method",
              "name": 64,
              "ptr": "/return"
            },
            "to": {
              "location": "method",
              "name": 60,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 74,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "AEartifactInfo",
              "ptr": "/name"
            },
            "to": {
              "location": "method",
              "name": 41,
              "ptr": "/args/0/value"
            }
          },
          {
            "id": 75,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/catalogAutomations"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/ac-agenda-job"
            }
          },
          {
            "id": 76,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/operationsAutomations"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/automation"
            }
          },
          {
            "id": 77,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "formOutput",
              "ptr": "/components/goldenConfigTrees"
            },
            "to": {
              "location": "outgoing",
              "name": "mata",
              "ptr": "/components/golden-config"
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 4,
          "row": 12
        },
        "created": "2023-01-26T21:27:00.092Z",
        "createdBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-01-26T21:27:00.092Z",
        "lastUpdatedBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "605a0b9299ae1b00eb7c74e9",
        "name": "convertObjecttoString",
        "description": "",
        "incoming": [
          {
            "$id": "inputObject",
            "type": "object",
            "properties": {
              "action": {
                "type": "string",
                "examples": [
                  "Create"
                ]
              },
              "file_path": {
                "type": "string",
                "examples": [
                  "bundles/transformations/filterArrayOfObjects%2Ejson"
                ]
              },
              "content": {
                "type": "string",
                "examples": [
                  "{\n  \"_id\": \"5f08c8b5fd7aaf755869ff35\",\n  \"name\": \"filterArrayOfObjects\",\n  \"incoming\": [\n    {\n      \"$id\": \"filterableArray\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {},\n        \"required\": [],\n        \"additionalProperties\": true\n      }\n    },\n    {\n      \"$id\": \"keyToFilterOn\",\n      \"type\": \"string\",\n      \"default\": \"keyToFilterOn\",\n      \"examples\": [\n        \"keyToFilterOn\"\n      ]\n    },\n    {\n      \"$id\": \"valueToFind\",\n      \"type\": \"string\",\n      \"default\": \"valueToFind\",\n      \"examples\": [\n        \"valueToFind\"\n      ]\n    },\n    {\n      \"$id\": \"discardMatching\",\n      \"type\": \"boolean\",\n      \"examples\": [\n        true,\n        false\n      ]\n    }\n  ],\n  \"outgoing\": [\n    {\n      \"$id\": \"filteredArray\",\n      \"type\": \"array\"\n    },\n    {\n      \"$id\": \"firstFilteredElement\",\n      \"type\": \"object\",\n      \"properties\": {},\n      \"required\": []\n    }\n  ],\n  \"steps\": [\n    {\n      \"id\": 6,\n      \"type\": \"assign\",\n      \"from\": {\n        \"location\": \"incoming\",\n        \"name\": \"filterableArray\",\n        \"ptr\": \"\"\n      },\n      \"to\": {\n        \"location\": \"method\",\n        \"name\": 1,\n        \"ptr\": \"/args/0/value\"\n      }\n    },\n    {\n      \"id\": 7,\n      \"type\": \"assign\",\n      \"from\": {\n        \"location\": \"incoming\",\n        \"name\": \"keyToFilterOn\",\n        \"ptr\": \"\"\n      },\n      \"to\": {\n        \"location\": \"method\",\n        \"name\": 1,\n        \"ptr\": \"/args/2/value\"\n      }\n    },\n    {\n      \"id\": 8,\n      \"type\": \"assign\",\n      \"from\": {\n        \"location\": \"incoming\",\n        \"name\": \"valueToFind\",\n        \"ptr\": \"\"\n      },\n      \"to\": {\n        \"location\": \"method\",\n        \"name\": 1,\n        \"ptr\": \"/args/3/value\"\n      }\n    },\n    {\n      \"id\": 9,\n      \"type\": \"assign\",\n      \"from\": {\n        \"location\": \"incoming\",\n        \"name\": \"discardMatching\",\n        \"ptr\": \"\"\n      },\n      \"to\": {\n        \"location\": \"method\",\n        \"name\": 1,\n        \"ptr\": \"/args/4/value\"\n      }\n    },\n    {\n      \"id\": 1,\n      \"type\": \"method\",\n      \"library\": \"Array\",\n      \"method\": \"filter\",\n      \"args\": [\n        null,\n        \"ƒ_query_1\",\n        null,\n        null,\n        null\n      ],\n      \"view\": {\n        \"row\": 1,\n        \"col\": 1\n      }\n    },\n    {\n      \"id\": 3,\n      \"type\": \"assign\",\n      \"from\": {\n        \"location\": \"method\",\n        \"name\": 1,\n        \"ptr\": \"/return\"\n      },\n      \"to\": {\n        \"location\": \"method\",\n        \"name\": 2,\n        \"ptr\": \"/args/0/value\"\n      }\n    },\n    {\n      \"id\": 5,\n      \"type\": \"assign\",\n      \"from\": {\n        \"location\": \"method\",\n        \"name\": 1,\n        \"ptr\": \"/return\"\n      },\n      \"to\": {\n        \"location\": \"outgoing\",\n        \"name\": \"filteredArray\",\n        \"ptr\": \"\"\n      }\n    },\n    {\n      \"id\": 2,\n      \"type\": \"method\",\n      \"library\": \"Array\",\n      \"method\": \"getIndex\",\n      \"args\": [\n        null,\n        0\n      ],\n      \"view\": {\n        \"row\": 2,\n        \"col\": 2\n      }\n    },\n    {\n      \"id\": 4,\n      \"type\": \"assign\",\n      \"from\": {\n        \"location\": \"method\",\n        \"name\": 2,\n        \"ptr\": \"/return\"\n      },\n      \"to\": {\n        \"location\": \"outgoing\",\n        \"name\": \"firstFilteredElement\",\n        \"ptr\": \"\"\n      }\n    }\n  ],\n  \"functions\": [\n    {\n      \"incoming\": [\n        {\n          \"type\": \"object\",\n          \"properties\": {},\n          \"required\": [],\n          \"additionalProperties\": true,\n          \"$id\": \"element\"\n        },\n        {\n          \"title\": \"index\",\n          \"type\": \"number\",\n          \"$id\": \"index\"\n        },\n        {\n          \"$id\": \"array\",\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {},\n            \"required\": [],\n            \"additionalProperties\": true\n          }\n        },\n        {\n          \"$id\": \"thisArg\",\n          \"type\": \"object\",\n          \"properties\": {\n            \"keyToFilterOn\": {\n              \"$id\": \"keyToFilterOn\",\n              \"type\": \"string\",\n              \"default\": \"keyToFilterOn\",\n              \"examples\": [\n                \"keyToFilterOn\"\n              ]\n            },\n            \"valueToFind\": {\n              \"$id\": \"valueToFind\",\n              \"type\": \"string\",\n              \"default\": \"valueToFind\",\n              \"examples\": [\n                \"valueToFind\"\n              ]\n            },\n            \"discardMatching\": {\n              \"$id\": \"discardMatching\",\n              \"type\": \"boolean\",\n              \"examples\": [\n                true,\n                false\n              ]\n            }\n          },\n          \"isContext\": true\n        }\n      ],\n      \"outgoing\": [\n        {\n          \"title\": \"return\",\n          \"type\": \"boolean\",\n          \"$id\": \"return\"\n        }\n      ],\n      \"functions\": [],\n      \"name\": \"ƒ_query_1\",\n      \"steps\": [\n        {\n          \"id\": 2,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"incoming\",\n            \"name\": \"element\",\n            \"ptr\": \"\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 1,\n            \"ptr\": \"/args/0/value\"\n          }\n        },\n        {\n          \"id\": 3,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"incoming\",\n            \"name\": \"thisArg\",\n            \"ptr\": \"/keyToFilterOn\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 1,\n            \"ptr\": \"/args/1/value\"\n          }\n        },\n        {\n          \"id\": 15,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"incoming\",\n            \"name\": \"thisArg\",\n            \"ptr\": \"/discardMatching\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 14,\n            \"ptr\": \"/args/0/value\"\n          }\n        },\n        {\n          \"id\": 31,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"incoming\",\n            \"name\": \"thisArg\",\n            \"ptr\": \"/discardMatching\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 10,\n            \"ptr\": \"/args/1/value\"\n          }\n        },\n        {\n          \"id\": 34,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"incoming\",\n            \"name\": \"thisArg\",\n            \"ptr\": \"/valueToFind\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 32,\n            \"ptr\": \"/args/1/value\"\n          }\n        },\n        {\n          \"id\": 14,\n          \"type\": \"method\",\n          \"library\": \"Logical\",\n          \"method\": \"not\",\n          \"args\": [\n            null\n          ],\n          \"view\": {\n            \"row\": 2,\n            \"col\": 2\n          }\n        },\n        {\n          \"id\": 1,\n          \"type\": \"method\",\n          \"library\": \"Object\",\n          \"method\": \"getProperty\",\n          \"args\": [\n            null,\n            null\n          ],\n          \"view\": {\n            \"row\": 1,\n            \"col\": 1\n          }\n        },\n        {\n          \"id\": 30,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"method\",\n            \"name\": 14,\n            \"ptr\": \"/return\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 7,\n            \"ptr\": \"/args/1/value\"\n          }\n        },\n        {\n          \"id\": 33,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"method\",\n            \"name\": 1,\n            \"ptr\": \"/return\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 32,\n            \"ptr\": \"/args/0/value\"\n          }\n        },\n        {\n          \"id\": 32,\n          \"type\": \"method\",\n          \"library\": \"Equality\",\n          \"method\": \"deepEquals\",\n          \"args\": [\n            null,\n            null\n          ],\n          \"view\": {\n            \"row\": 1,\n            \"col\": 2\n          }\n        },\n        {\n          \"id\": 35,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"method\",\n            \"name\": 32,\n            \"ptr\": \"/return\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 7,\n            \"ptr\": \"/args/0/value\"\n          }\n        },\n        {\n          \"id\": 36,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"method\",\n            \"name\": 32,\n            \"ptr\": \"/return\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 22,\n            \"ptr\": \"/args/0/value\"\n          }\n        },\n        {\n          \"id\": 22,\n          \"type\": \"method\",\n          \"library\": \"Logical\",\n          \"method\": \"not\",\n          \"args\": [\n            null\n          ],\n          \"view\": {\n            \"row\": 1,\n            \"col\": 3\n          }\n        },\n        {\n          \"id\": 24,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"method\",\n            \"name\": 22,\n            \"ptr\": \"/return\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 10,\n            \"ptr\": \"/args/0/value\"\n          }\n        },\n        {\n          \"id\": 7,\n          \"type\": \"method\",\n          \"library\": \"Logical\",\n          \"method\": \"and\",\n          \"args\": [\n            null,\n            null\n          ],\n          \"view\": {\n            \"row\": 2,\n            \"col\": 3\n          }\n        },\n        {\n          \"id\": 10,\n          \"type\": \"method\",\n          \"library\": \"Logical\",\n          \"method\": \"and\",\n          \"args\": [\n            null,\n            null\n          ],\n          \"view\": {\n            \"row\": 3,\n            \"col\": 3\n          }\n        },\n        {\n          \"id\": 27,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"method\",\n            \"name\": 7,\n            \"ptr\": \"/return\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 26,\n            \"ptr\": \"/args/0/value\"\n          }\n        },\n        {\n          \"id\": 28,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"method\",\n            \"name\": 10,\n            \"ptr\": \"/return\"\n          },\n          \"to\": {\n            \"location\": \"method\",\n            \"name\": 26,\n            \"ptr\": \"/args/1/value\"\n          }\n        },\n        {\n          \"id\": 26,\n          \"type\": \"method\",\n          \"library\": \"Logical\",\n          \"method\": \"or\",\n          \"args\": [\n            null,\n            null\n          ],\n          \"view\": {\n            \"row\": 2,\n            \"col\": 4\n          }\n        },\n        {\n          \"id\": 29,\n          \"type\": \"assign\",\n          \"from\": {\n            \"location\": \"method\",\n            \"name\": 26,\n            \"ptr\": \"/return\"\n          },\n          \"to\": {\n            \"location\": \"outgoing\",\n            \"name\": \"return\",\n            \"ptr\": \"\"\n          }\n        }\n      ],\n      \"view\": {\n        \"col\": 4,\n        \"row\": 5\n      },\n      \"id\": \"ƒ_query_1\",\n      \"comments\": []\n    }\n  ],\n  \"comments\": [],\n  \"view\": {\n    \"col\": 3,\n    \"row\": 6\n  },\n  \"created\": \"2021-03-10T20:41:21.443Z\",\n  \"createdBy\": {\n    \"_id\": \"601424815f970e44a97f394a\",\n    \"provenance\": \"local_aaa\",\n    \"username\": \"admin@pronghorn\"\n  },\n  \"lastUpdated\": \"2021-03-10T20:41:21.443Z\",\n  \"lastUpdatedBy\": {\n    \"_id\": \"601424815f970e44a97f394a\",\n    \"provenance\": \"local_aaa\",\n    \"username\": \"admin@pronghorn\"\n  }\n}"
                ]
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "action",
            "type": "string",
            "examples": [
              "Action"
            ]
          },
          {
            "$id": "filePath",
            "type": "string",
            "examples": [
              "filePath"
            ]
          },
          {
            "$id": "content",
            "type": "string",
            "examples": [
              "content"
            ]
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "inputObject",
              "ptr": "/action"
            },
            "to": {
              "location": "outgoing",
              "name": "action",
              "ptr": ""
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "inputObject",
              "ptr": "/file_path"
            },
            "to": {
              "location": "outgoing",
              "name": "filePath",
              "ptr": ""
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "inputObject",
              "ptr": "/content"
            },
            "to": {
              "location": "outgoing",
              "name": "content",
              "ptr": ""
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 0,
          "row": 5
        },
        "created": "2023-01-26T21:27:00.111Z",
        "createdBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-01-26T21:27:00.111Z",
        "lastUpdatedBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.13.0",
        "tags": []
      }
    },
    {
      "type": "transformation",
      "data": {
        "_id": "621002baa161ae00ef6164b5",
        "name": "translateSchemaPushBundles",
        "description": "Takes in the output of the componentDiscovery task in appartifacts and outputs a format that can be used in a form where the components can be edited.",
        "incoming": [
          {
            "$id": "componentDiscoveryOutput",
            "type": "object",
            "properties": {
              "componentMap": {
                "type": "object",
                "properties": {
                  "workflow": {
                    "type": "array"
                  },
                  "ac-agenda-job": {
                    "type": "array"
                  },
                  "automation": {
                    "type": "array"
                  },
                  "trigger": {
                    "type": "array"
                  },
                  "json-forms": {
                    "type": "array"
                  },
                  "template": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "mop-template": {
                    "type": "array"
                  },
                  "mop-analytic-template": {
                    "type": "array"
                  },
                  "golden-config": {
                    "type": "array"
                  },
                  "transformation": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "outgoing": [
          {
            "$id": "componentEditorFormInput",
            "type": "object",
            "properties": {
              "components": {
                "type": "object",
                "properties": {
                  "workflows": {
                    "type": "array"
                  },
                  "catalogAutomations": {
                    "type": "array"
                  },
                  "operationsAutomations": {
                    "type": "array"
                  },
                  "triggers": {
                    "type": "array"
                  },
                  "jsonForms": {
                    "type": "array"
                  },
                  "templates": {
                    "type": "array"
                  },
                  "forms": {
                    "type": "array"
                  },
                  "commandTemplates": {
                    "type": "array"
                  },
                  "analyticTemplates": {
                    "type": "array"
                  },
                  "goldenConfigTrees": {
                    "type": "array"
                  },
                  "transformations": {
                    "type": "array"
                  }
                },
                "required": []
              }
            },
            "required": []
          }
        ],
        "steps": [
          {
            "id": 1,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/workflow"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/workflows"
            }
          },
          {
            "id": 2,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/ac-agenda-job"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/catalogAutomations"
            }
          },
          {
            "id": 3,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/automation"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/operationsAutomations"
            }
          },
          {
            "id": 4,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/trigger"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/triggers"
            }
          },
          {
            "id": 5,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/json-forms"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/jsonForms"
            }
          },
          {
            "id": 6,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/template"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/templates"
            }
          },
          {
            "id": 7,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/forms"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/forms"
            }
          },
          {
            "id": 8,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/mop-template"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/commandTemplates"
            }
          },
          {
            "id": 9,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/mop-analytic-template"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/analyticTemplates"
            }
          },
          {
            "id": 10,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/golden-config"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/goldenConfigTrees"
            }
          },
          {
            "id": 11,
            "type": "assign",
            "from": {
              "location": "incoming",
              "name": "componentDiscoveryOutput",
              "ptr": "/componentMap/transformation"
            },
            "to": {
              "location": "outgoing",
              "name": "componentEditorFormInput",
              "ptr": "/components/transformations"
            }
          }
        ],
        "functions": [],
        "comments": [],
        "view": {
          "col": 1,
          "row": 5
        },
        "created": "2023-01-26T21:27:00.123Z",
        "createdBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "lastUpdated": "2023-01-26T21:27:00.123Z",
        "lastUpdatedBy": {
          "_id": "6397596f33c9d7563d016496",
          "provenance": "local_aaa",
          "username": "admin@pronghorn"
        },
        "version": "3.17.7-2021.1.7",
        "tags": []
      }
    }
  ],
  "readme": "<!-- This is a comment in md (Markdown) format, it will not be visible to the end user -->\n\n<!-- Update the below line with your artifact name -->\n# Push Bundles to GitHub\n\n<!-- Leave TOC intact unless you've added or removed headers -->\n## Table of Contents\n\n* [Overview](#overview)\n* [Installation Prerequisites](#installation-prerequisites)\n* [Requirements](#requirements)\n* [Features](#features)\n* [How to Install](#how-to-install)\n* [How to Run](#how-to-run)\n\n## Overview\n\n<!-- Write a few sentences about the artifact and explain the use case(s) -->\n<!-- Ex.: The Migration Wizard enables IAP users to conveniently move their automation use cases between different IAP environments -->\n<!-- (e.g. from Dev to Pre-Production or from Lab to Production). -->\n\n<!-- Workflow(s) Image Placeholder - TO BE ADDED DIRECTLY TO GitHub -->\n<!-- REPLACE COMMENT BELOW WITH IMAGE OF YOUR MAIN WORKFLOW -->\n<!-- <!--  -->\nThe **Push Bundles to GitHub** pre-built takes an Admin Essentials installed pre-built and creates a new project in GitHub using the up-to-date pre-built bundle.\nIf the project and branch already exists in the specified GitHub group, it will create a new branch and open a pull request in GitHub with any changes made in the lab environment. \n\n<table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/push-bundle-to-github/-/raw/release/2021.2/images/workflow.png\" alt=\"workflow\" width=\"800px\">\n</td></tr></table>\n<!-- REPLACE COMMENT ABOVE WITH IMAGE OF YOUR MAIN WORKFLOW -->\n\n<!-- ADD ESTIMATED RUN TIME HERE -->\n<!-- e.g. Estimated Run Time: 34 min. -->\n\n## Installation Prerequisites\n\nUsers must satisfy the following pre-requisites:\n\n<!-- Include any other required apps or adapters in this list -->\n<!-- Ex.: EC2 Adapter -->\n* Itential Automation Platform\n  * `^2021.2`\n* App-Artifacts\n  * `6.1.16-2021.1.2`\n* [GitHub Adapter](https://gitlab.com/itentialopensource/adapters/devops-netops/adapter-github)\n\n\n## Requirements\n\nThis artifact requires the following:\n\n<!-- Unordered list highlighting the requirements of the artifact -->\n<!-- EXAMPLE -->\n<!-- * cisco ios device -->\n* Artifact installed in Admin Essentials\n* GitHub Organization Name\n\n## Features\n\nThe main benefits and features of the artifact are outlined below.\n\n<!-- Unordered list highlighting the most exciting features of the artifact -->\n<!-- EXAMPLE -->\n<!-- * Automatically checks for device type -->\n<!-- * Displays dry-run to user (asking for confirmation) prior to pushing config to the device -->\n<!-- * Verifies downloaded file integrity (using md5), will try to download again if failed -->\n* Automatically create repo and branch.\n* Automatically create Pull Request when repo and branch exist.\n* Allows user to perform rediscovery of an installed artifact (where new components were added).\n* Adds the current IAP user whoami username to the Pull Request description for the Pull Request reviewer.\n* Auto artifact.json generator script\n* Helps to handle \"Artifact-As-Code\" with version control, PR, and code-promotion procedures.\n\n\n<!-- ## Future Enhancements -->\n\n<!-- OPTIONAL - Mention if the artifact will be enhanced with additional features on the road map -->\n<!-- Ex.: This artifact would support Cisco XR and F5 devices -->\n\n## How to Install\n\nTo install this pre-built:\n\n* Verify you are running a supported version of the Itential Automation Platform (IAP) as listed above in the [Requirements](#requirements) section. \n* The artifact can be installed from within App-Admin_Essential. Simply search for the name of your desired artifact and click the install button (as shown below).\n\n<!-- REPLACE BELOW WITH IMAGE OF YOUR PUBLISHED ARTIFACT -->\n<!-- <!-- -->\n<table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/push-bundle-to-github/-/raw/release/2021.2/images/install.png\" alt=\"install\" width=\"600px\">\n</td></tr></table>\n\n<!-- REPLACE ABOVE WITH IMAGE OF YOUR PUBLISHED ARTIFACT -->\n\n<!-- OPTIONAL - Explain if external components are required outside of IAP -->\n<!-- Ex.: The Ansible roles required for this artifact can be found in the repository located at https://GitHub.com/itentialopensource/pre-built-automations/hello-world -->\n\n## How to Run\n\nUse the following to run the artifact:\n\n<!-- Explain the main entrypoint(s) for this artifact: Automation Catalog item, Workflow, Postman, etc. -->\n\n1. In Automation Catalog, find the **Push Bundles to GitHub** entry.\n2. Fill out the form (as shown below) with the appropriate values.\n3. Continue with all manual tasks in the workflow.\n\n<table><tr><td>\n  <img src=\"https://gitlab.com/itentialopensource/pre-built-automations/push-bundle-to-github/-/raw/release/2021.2/images/form.png\" alt=\"form\" width=\"600px\">\n</td></tr></table>\n\nForm Inputs (look for above screenshot for example inputs)\n1. Adapter Name - Adapter name configured with user token\n2. GitHub Project Name - Project name in GitHub to Update/Create\n3. GitHub Organization Name - GitHub organization name to push repository\n4. Re-discover - Perform re-discover\n5. Artifact - name of the installed bundle to push onto remote repo\n6. PR Type - Type of PR (patch/minor/major)\n7. Commit Message -  Commit message to add for commit tasks\n8. Target Branch - Traget branch to set for PR\n"
}